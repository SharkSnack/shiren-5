{"version":3,"sources":["../../src/swift/values.js"],"names":["escapedString","multilineString","string","replace","context","lines","split","forEach","line","index","isLastLine","length","printOnNewline"],"mappings":";;;;;QAKgBA,a,GAAAA,a;QAIAC,e,GAAAA,e;;AAThB;;AAKO,SAASD,aAAT,CAAuBE,MAAvB,EAA+B;AACpC,SAAOA,OAAOC,OAAP,CAAe,IAAf,EAAqB,KAArB,CAAP;AACD;;AAEM,SAASF,eAAT,CAAyBG,OAAzB,EAAkCF,MAAlC,EAA0C;AAC/C,MAAMG,QAAQH,OAAOI,KAAP,CAAa,IAAb,CAAd;AACAD,QAAME,OAAN,CAAc,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC7B,QAAMC,aAAaD,SAASJ,MAAMM,MAAN,GAAe,CAA3C;AACAP,YAAQQ,cAAR,CAAwB,IAAGZ,cAAcQ,IAAd,CAAoB,GAAxB,IAA8BE,aAAa,IAAb,GAAoB,EAAlD,CAAvB;AACD,GAHD;AAID","file":"values.js","sourcesContent":["import {\n  join,\n  wrap,\n} from '../utilities/printing';\n\nexport function escapedString(string) {\n  return string.replace(/\"/g, '\\\\\"');\n}\n\nexport function multilineString(context, string) {\n  const lines = string.split('\\n');\n  lines.forEach((line, index) => {\n    const isLastLine = index != lines.length - 1;\n    context.printOnNewline(`\"${escapedString(line)}\"` + (isLastLine ? ' +' : ''));\n  });\n}\n"]}