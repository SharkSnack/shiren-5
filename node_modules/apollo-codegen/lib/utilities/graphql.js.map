{"version":3,"sources":["../../src/utilities/graphql.js"],"names":["sourceAt","filePathForNode","valueFromValueNode","isTypeProperSuperTypeOf","getOperationRootType","getFieldDef","location","source","body","slice","start","end","node","name","loc","undefined","valueNode","kind","Number","value","values","map","fields","reduce","object","field","variableName","schema","maybeSuperType","subType","isPossibleType","operation","getQueryType","mutationType","getMutationType","GraphQLError","subscriptionType","getSubscriptionType","parentType","fieldAST","getFields"],"mappings":"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","file":"graphql.js","sourcesContent":["import {\n  isEqualType,\n  isTypeSubTypeOf,\n  isAbstractType,\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef,\n  GraphQLObjectType,\n  GraphQLInterfaceType,\n  GraphQLUnionType,\n  GraphQLEnumType\n} from 'graphql';\n\nexport function sourceAt(location) {\n  return location.source.body.slice(location.start, location.end);\n}\n\nexport function filePathForNode(node) {\n  const name = node.loc.source && node.loc.source.name;\n  return (name === \"GraphQL\") ? undefined : name;\n}\n\nexport function valueFromValueNode(valueNode) {\n  const kind = valueNode.kind;\n\n  if (kind === 'IntValue' || kind === 'FloatValue') {\n    return Number(valueNode.value);\n  } else if (kind === 'NullValue') {\n    return null;\n  } else if (kind === 'ListValue') {\n    return valueNode.values.map(valueFromValueNode);\n  } else if (kind === 'ObjectValue') {\n    return valueNode.fields.reduce((object, field) => {\n      object[field.name.value] = valueFromValueNode(field.value);\n      return object;\n    }, {});\n  } else if (kind === 'Variable') {\n    return { kind, variableName: valueNode.name.value };\n  } else {\n    return valueNode.value;\n  }\n}\n\nexport function isTypeProperSuperTypeOf(schema, maybeSuperType, subType) {\n  return isEqualType(maybeSuperType, subType) || (isAbstractType(maybeSuperType) && schema.isPossibleType(maybeSuperType, subType));\n}\n\n// Utility functions extracted from graphql-js\n\n/**\n * Extracts the root type of the operation from the schema.\n */\nexport function getOperationRootType(schema, operation) {\n  switch (operation.operation) {\n    case 'query':\n      return schema.getQueryType();\n    case 'mutation':\n      const mutationType = schema.getMutationType();\n      if (!mutationType) {\n        throw new GraphQLError(\n          'Schema is not configured for mutations',\n          [operation]\n        );\n      }\n      return mutationType;\n    case 'subscription':\n      const subscriptionType = schema.getSubscriptionType();\n      if (!subscriptionType) {\n        throw new GraphQLError(\n          'Schema is not configured for subscriptions',\n          [operation]\n        );\n      }\n      return subscriptionType;\n    default:\n      throw new GraphQLError(\n        'Can only compile queries, mutations and subscriptions',\n        [operation]\n      );\n  }\n}\n\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\nexport function getFieldDef(schema, parentType, fieldAST) {\n  const name = fieldAST.name.value;\n  if (name === SchemaMetaFieldDef.name &&\n      schema.getQueryType() === parentType) {\n    return SchemaMetaFieldDef;\n  }\n  if (name === TypeMetaFieldDef.name &&\n      schema.getQueryType() === parentType) {\n    return TypeMetaFieldDef;\n  }\n  if (name === TypeNameMetaFieldDef.name &&\n      (parentType instanceof GraphQLObjectType ||\n       parentType instanceof GraphQLInterfaceType ||\n       parentType instanceof GraphQLUnionType)\n  ) {\n    return TypeNameMetaFieldDef;\n  }\n  if (parentType instanceof GraphQLObjectType ||\n      parentType instanceof GraphQLInterfaceType) {\n    return parentType.getFields()[name];\n  }\n}\n"]}