{"version":3,"sources":["../../../src/internal-plugins/functions/gatsby-node.ts"],"names":["isProductionEnv","process","env","gatsby_executing_command","createWebpackConfig","siteDirectoryPath","functionsDirectory","store","reporter","compiledFunctionsDir","path","join","files","Promise","resolve","reject","cwd","err","length","warn","relative","knownFunctions","forEach","f","apiRoute","map","file","dir","name","parse","compiledFunctionName","compiledPath","finalName","push","originalFilePath","relativeCompiledFilePath","absoluteCompiledFilePath","matchPath","dispatch","internalActions","setFunctions","fs","writeFileSync","JSON","stringify","nodeEnv","NODE_ENV","defaultNodeEnv","configEnv","GATSBY_ACTIVE_ENV","envFile","parsed","dotenv","readFileSync","encoding","code","report","error","envObject","Object","keys","reduce","acc","key","varsFromProcessEnv","PUBLIC_DIR","mergedEnvVars","assign","processEnvVars","entries","filePath","parsedFile","compiledNameWithoutExtension","config","entry","output","filename","libraryTarget","target","mode","module","rules","test","exclude","use","loader","options","presets","plugins","webpack","DefinePlugin","onPreBootstrap","activity","activityTimer","start","program","directory","getState","functionsDirectoryPath","verbose","ensureDir","callback","stats","rawMessages","toJson","moduleTrace","warnings","errors","compilation","formated","e","message","success","run","compiler","watch","chokidar","ignoreInitial","on","event","includes","log","close","panic","end","onCreateDevServer","app","none","express","urlencoded","extended","req","res","next","cookies","headers","cookie","text","json","raw","pathFragment","params","functions","functionObj","find","some","exp","exec","matches","match","slice","newParams","index","Date","now","pathToFunction","require","cache","fn","fnToExecute","default","headersSent","status","send"],"mappings":"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","sourcesContent":["import fs from \"fs-extra\"\nimport glob from \"glob\"\nimport path from \"path\"\nimport webpack from \"webpack\"\nimport multer from \"multer\"\nimport * as express from \"express\"\nimport { urlResolve, getMatchPath } from \"gatsby-core-utils\"\nimport { ParentSpanPluginArgs, CreateDevServerArgs } from \"gatsby\"\nimport { internalActions } from \"../../redux/actions\"\nimport { reportWebpackWarnings } from \"../../utils/webpack-error-utils\"\nimport formatWebpackMessages from \"react-dev-utils/formatWebpackMessages\"\nimport dotenv from \"dotenv\"\nimport chokidar from \"chokidar\"\nimport pathToRegexp from \"path-to-regexp\"\nimport cookie from \"cookie\"\n\nconst isProductionEnv = process.env.gatsby_executing_command !== `develop`\n\ninterface IFunctionData {\n  /** The route in the browser to access the function **/\n  apiRoute: string\n  /** The relative path to the original function **/\n  originalFilePath: string\n  /** The relative path to the compiled function (always ends with .js) **/\n  relativeCompiledFilePath: string\n  /** The absolute path to the compiled function (doesn't transfer across machines) **/\n  absoluteCompiledFilePath: string\n  /** The matchPath regex created by path-to-regexp. Only created if the function is dynamic. **/\n  matchPath: string\n}\n\nconst createWebpackConfig = async ({\n  siteDirectoryPath,\n  functionsDirectory,\n  store,\n  reporter,\n}): Promise<webpack.Configuration> => {\n  const compiledFunctionsDir = path.join(\n    siteDirectoryPath,\n    `.cache`,\n    `functions`\n  )\n\n  const files = await new Promise((resolve, reject) => {\n    glob(`**/*.{js,ts}`, { cwd: functionsDirectory }, (err, files) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(files)\n      }\n    })\n  })\n\n  if (files?.length === 0) {\n    reporter.warn(\n      `No functions found in directory: ${path.relative(\n        siteDirectoryPath,\n        functionsDirectory\n      )}`\n    )\n  }\n\n  const knownFunctions: Array<IFunctionData> = []\n  knownFunctions.forEach(f => f.apiRoute)\n  files.map(file => {\n    const { dir, name } = path.parse(file)\n    // Ignore the original extension as all compiled functions now end with js.\n    const compiledFunctionName = path.join(dir, name + `.js`)\n    const compiledPath = path.join(compiledFunctionsDir, compiledFunctionName)\n    const finalName = urlResolve(dir, name === `index` ? `` : name)\n\n    knownFunctions.push({\n      apiRoute: finalName,\n      originalFilePath: file,\n      relativeCompiledFilePath: compiledFunctionName,\n      absoluteCompiledFilePath: compiledPath,\n      matchPath: getMatchPath(finalName),\n    })\n  })\n\n  store.dispatch(internalActions.setFunctions(knownFunctions))\n\n  // Write out manifest for use by `gatsby serve` and plugins\n  fs.writeFileSync(\n    path.join(compiledFunctionsDir, `manifest.json`),\n    JSON.stringify(knownFunctions, null, 4)\n  )\n\n  // Load environment variables from process.env.GATSBY_* and .env.* files.\n  // Logic is shared with webpack.config.js\n\n  // node env should be DEVELOPMENT | PRODUCTION as these are commonly used in node land\n  const nodeEnv = process.env.NODE_ENV || `${defaultNodeEnv}`\n  // config env is dependent on the env that it's run, this can be anything from staging-production\n  // this allows you to set use different .env environments or conditions in gatsby files\n  const configEnv = process.env.GATSBY_ACTIVE_ENV || nodeEnv\n  const envFile = path.join(siteDirectoryPath, `./.env.${configEnv}`)\n  let parsed = {}\n  try {\n    parsed = dotenv.parse(fs.readFileSync(envFile, { encoding: `utf8` }))\n  } catch (err) {\n    if (err.code !== `ENOENT`) {\n      report.error(\n        `There was a problem processing the .env file (${envFile})`,\n        err\n      )\n    }\n  }\n\n  const envObject = Object.keys(parsed).reduce((acc, key) => {\n    acc[key] = JSON.stringify(parsed[key])\n    return acc\n  }, {})\n\n  const varsFromProcessEnv = Object.keys(process.env).reduce((acc, key) => {\n    acc[key] = JSON.stringify(process.env[key])\n    return acc\n  }, {})\n\n  // Don't allow overwriting of NODE_ENV, PUBLIC_DIR as to not break gatsby things\n  envObject.NODE_ENV = JSON.stringify(nodeEnv)\n  envObject.PUBLIC_DIR = JSON.stringify(`${siteDirectoryPath}/public`)\n\n  const mergedEnvVars = Object.assign(envObject, varsFromProcessEnv)\n\n  const processEnvVars = Object.keys(mergedEnvVars).reduce(\n    (acc, key) => {\n      acc[`process.env.${key}`] = mergedEnvVars[key]\n      return acc\n    },\n    {\n      \"process.env\": `({})`,\n    }\n  )\n\n  const entries = {}\n  knownFunctions.forEach(({ originalFilePath }) => {\n    const filePath = path.join(functionsDirectory, originalFilePath)\n\n    // Get path without the extension (as it could be ts or js)\n    const parsedFile = path.parse(originalFilePath)\n    const compiledNameWithoutExtension = path.join(\n      parsedFile.dir,\n      parsedFile.name\n    )\n\n    entries[compiledNameWithoutExtension] = filePath\n  })\n\n  const config = {\n    entry: entries,\n    output: {\n      path: compiledFunctionsDir,\n      filename: `[name].js`,\n      libraryTarget: `commonjs2`,\n    },\n    target: `node`,\n\n    mode: isProductionEnv ? `production` : `development`,\n    // watch: !isProductionEnv,\n    module: {\n      rules: [\n        {\n          test: [/.js$/, /.ts$/],\n          exclude: /node_modules/,\n          use: {\n            loader: `babel-loader`,\n            options: {\n              presets: [`@babel/typescript`],\n            },\n          },\n        },\n      ],\n    },\n    plugins: [new webpack.DefinePlugin(processEnvVars)],\n  }\n\n  return config\n}\n\nexport async function onPreBootstrap({\n  reporter,\n  store,\n}: ParentSpanPluginArgs): Promise<void> {\n  const activity = reporter.activityTimer(`Compiling Gatsby Functions`)\n  activity.start()\n\n  const {\n    program: { directory: siteDirectoryPath },\n  } = store.getState()\n\n  const functionsDirectoryPath = path.join(siteDirectoryPath, `src/api`)\n\n  const functionsDirectory = path.resolve(\n    siteDirectoryPath,\n    functionsDirectoryPath as string\n  )\n\n  reporter.verbose(`Attaching functions to development server`)\n  const compiledFunctionsDir = path.join(\n    siteDirectoryPath,\n    `.cache`,\n    `functions`\n  )\n\n  await fs.ensureDir(compiledFunctionsDir)\n\n  try {\n    // We do this ungainly thing as we need to make accessible\n    // the resolve/reject functions to our shared callback function\n    // eslint-disable-next-line\n    await new Promise(async (resolve, reject) => {\n      const config = await createWebpackConfig({\n        siteDirectoryPath,\n        functionsDirectory,\n        store,\n        reporter,\n      })\n\n      function callback(err, stats): any {\n        const rawMessages = stats.toJson({ moduleTrace: false })\n        if (rawMessages.warnings.length > 0) {\n          reportWebpackWarnings(rawMessages.warnings, reporter)\n        }\n\n        if (err) return reject(err)\n        const errors = stats.compilation.errors || []\n\n        // If there's errors, reject in production and print to the console\n        // in development.\n        if (isProductionEnv) {\n          if (errors.length > 0) return reject(stats.compilation.errors)\n        } else {\n          const formated = formatWebpackMessages({\n            errors: rawMessages.errors.map(e => e.message),\n            warnings: [],\n          })\n          reporter.error(formated.errors)\n        }\n\n        // Log success in dev\n        if (!isProductionEnv) {\n          reporter.success(`Re-building functions`)\n        }\n\n        return resolve()\n      }\n\n      if (isProductionEnv) {\n        webpack(config).run(callback)\n      } else {\n        // When in watch mode, you call things differently\n        let compiler = webpack(config).watch({}, callback)\n\n        // Watch for env files to change and restart the webpack watcher.\n        chokidar\n          .watch(\n            [`${siteDirectoryPath}/.env*`, `${siteDirectoryPath}/src/api/**/*`],\n            { ignoreInitial: true }\n          )\n          .on(`all`, (event, path) => {\n            // Ignore change events from the API directory\n            if (event === `change` && path.includes(`/src/api/`)) {\n              return\n            }\n\n            reporter.log(\n              `Restarting function watcher due to change to \"${path}\"`\n            )\n\n            // Otherwise, restart the watcher\n            compiler.close(async () => {\n              const config = await createWebpackConfig({\n                siteDirectoryPath,\n                functionsDirectory,\n                store,\n                reporter,\n              })\n              compiler = webpack(config).watch({}, callback)\n            })\n          })\n      }\n    })\n  } catch (e) {\n    activity.panic(`Failed to compile Gatsby Functions.`, e)\n  }\n\n  activity.end()\n}\n\nexport async function onCreateDevServer({\n  reporter,\n  app,\n  store,\n}: CreateDevServerArgs): Promise<void> {\n  reporter.verbose(`Attaching functions to development server`)\n\n  app.use(\n    `/api/*`,\n    multer().none(),\n    express.urlencoded({ extended: true }),\n    (req, res, next) => {\n      const cookies = req.headers.cookie\n\n      if (!cookies) {\n        return next()\n      }\n\n      req.cookies = cookie.parse(cookies)\n\n      return next()\n    },\n    express.text(),\n    express.json(),\n    express.raw(),\n    async (req, res, next) => {\n      const { \"0\": pathFragment } = req.params\n\n      const {\n        functions,\n      }: { functions: Array<IFunctionData> } = store.getState()\n\n      // Check first for exact matches.\n      let functionObj = functions.find(\n        ({ apiRoute }) => apiRoute === pathFragment\n      )\n\n      if (!functionObj) {\n        // Check if there's any matchPaths that match.\n        // We loop until we find the first match.\n        functions.some(f => {\n          let exp\n          const keys = []\n          if (f.matchPath) {\n            exp = pathToRegexp(f.matchPath, keys)\n          }\n          if (exp && exp.exec(pathFragment) !== null) {\n            functionObj = f\n            const matches = [...pathFragment.match(exp)].slice(1)\n            const newParams = {}\n            matches.forEach(\n              (match, index) => (newParams[keys[index].name] = match)\n            )\n            req.params = newParams\n\n            return true\n          } else {\n            return false\n          }\n        })\n      }\n\n      if (functionObj) {\n        reporter.verbose(`Running ${functionObj.apiRoute}`)\n        const start = Date.now()\n        const pathToFunction = functionObj.absoluteCompiledFilePath\n\n        try {\n          delete require.cache[require.resolve(pathToFunction)]\n          const fn = require(pathToFunction)\n\n          const fnToExecute = (fn && fn.default) || fn\n\n          await Promise.resolve(fnToExecute(req, res))\n        } catch (e) {\n          reporter.error(e)\n          // Don't send the error if that would cause another error.\n          if (!res.headersSent) {\n            res\n              .status(500)\n              .send(\n                `Error when executing function \"${functionObj.originalFilePath}\": \"${e.message}\"`\n              )\n          }\n        }\n\n        const end = Date.now()\n        reporter.log(\n          `Executed function \"/api/${functionObj.apiRoute}\" in ${end - start}ms`\n        )\n      } else {\n        next()\n      }\n    }\n  )\n}\n"],"file":"gatsby-node.js"}