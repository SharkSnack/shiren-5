{"version":3,"sources":["../../src/swift/language.js"],"names":["classDeclaration","structDeclaration","propertyDeclaration","propertyDeclarations","protocolDeclaration","protocolPropertyDeclaration","protocolPropertyDeclarations","escapeIdentifierIfNeeded","printDescription","generator","description","split","forEach","printOnNewline","line","trim","closure","className","modifiers","superClass","adoptedProtocols","properties","printNewlineIfNeeded","printNewline","print","pushScope","typeName","withinBlock","popScope","structName","propertyName","property","protocolName","reservedKeywords","identifier","has"],"mappings":"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","file":"language.js","sourcesContent":["import {\n  join,\n  wrap,\n} from '../utilities/printing';\n\nfunction printDescription(generator, description) {\n  description && description.split('\\n')\n    .forEach(line => {\n      generator.printOnNewline(`/// ${line.trim()}`);\n    });\n}\n\nexport function classDeclaration(generator, { className, modifiers, superClass, adoptedProtocols = [], properties }, closure) {\n  generator.printNewlineIfNeeded();\n  generator.printNewline();\n  generator.print(wrap('', join(modifiers, ' '), ' '));\n  generator.print(`class ${ className }`);\n  generator.print(wrap(': ', join([superClass, ...adoptedProtocols], ', ')));\n  generator.pushScope({ typeName: className });\n  generator.withinBlock(closure);\n  generator.popScope();\n}\n\nexport function structDeclaration(generator, { structName, description, adoptedProtocols = [] }, closure) {\n  generator.printNewlineIfNeeded();\n  printDescription(generator, description);\n  generator.printOnNewline(`public struct ${structName}`);\n  generator.print(wrap(': ', join(adoptedProtocols, ', ')));\n  generator.pushScope({ typeName: structName });\n  generator.withinBlock(closure);\n  generator.popScope();\n}\n\nexport function propertyDeclaration(generator, { propertyName, typeName, description }) {\n  printDescription(generator, description);\n  generator.printOnNewline(`public let ${propertyName}: ${typeName}`);\n}\n\nexport function propertyDeclarations(generator, properties) {\n  if (!properties) return;\n  properties.forEach(property => propertyDeclaration(generator, property));\n}\n\nexport function protocolDeclaration(generator, { protocolName, adoptedProtocols, properties }, closure) {\n  generator.printNewlineIfNeeded();\n  generator.printOnNewline(`public protocol ${protocolName}`);\n  generator.print(wrap(': ', join(adoptedProtocols, ', ')));\n  generator.pushScope({ typeName: protocolName });\n  generator.withinBlock(closure);\n  generator.popScope();\n}\n\nexport function protocolPropertyDeclaration(generator, { propertyName, typeName }) {\n  generator.printOnNewline(`var ${propertyName}: ${typeName} { get }`);\n}\n\nexport function protocolPropertyDeclarations(generator, properties) {\n  if (!properties) return;\n  properties.forEach(property => protocolPropertyDeclaration(generator, property));\n}\n\nconst reservedKeywords = new Set(['associatedtype', 'class', 'deinit', 'enum', 'extension',\n  'fileprivate', 'func', 'import', 'init', 'inout', 'internal', 'let', 'open',\n  'operator', 'private', 'protocol', 'public', 'static', 'struct', 'subscript',\n  'typealias', 'var', 'break', 'case', 'continue', 'default', 'defer', 'do',\n  'else', 'fallthrough', 'for', 'guard', 'if', 'in', 'repeat', 'return',\n  'switch', 'where', 'while', 'as', 'Any', 'catch', 'false', 'is', 'nil',\n  'rethrows', 'super', 'self', 'Self', 'throw', 'throws', 'true', 'try',\n  'associativity', 'convenience', 'dynamic', 'didSet', 'final', 'get', 'infix',\n  'indirect', 'lazy', 'left', 'mutating', 'none', 'nonmutating', 'optional',\n  'override', 'postfix', 'precedence', 'prefix', 'Protocol', 'required', 'right',\n  'set', 'Type', 'unowned', 'weak', 'willSet']);\n\nexport function escapeIdentifierIfNeeded(identifier) {\n  if (reservedKeywords.has(identifier)) {\n    return '`' + identifier + '`';\n  } else {\n    return identifier;\n  }\n}\n"]}