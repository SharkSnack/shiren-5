import type * as uWS from 'uWebSockets.js';
import { ServerOptions } from '../server';
/**
 * The extra that will be put in the `Context`.
 *
 * @category Server/uWebSockets
 */
export interface Extra {
    /**
     * The actual socket connection between the server and the client.
     */
    readonly socket: uWS.WebSocket;
    /**
     * The initial HTTP request before the actual
     * socket and connection is established.
     */
    readonly request: uWS.HttpRequest;
}
/**
 * Make the behaviour for using a [uWebSockets.js](https://github.com/uNetworking/uWebSockets.js) WebSocket server.
 * This is a basic starter, feel free to copy the code over and adjust it to your needs
 *
 * @category Server/uWebSockets
 */
export declare function makeBehavior(options: ServerOptions<Extra>, behavior?: uWS.WebSocketBehavior, 
/**
 * The timout between dispatched keep-alive messages. Internally uses the [ws Ping and Pongs]((https://developer.mozilla.org/en-US/docs/Web/API/wss_API/Writing_ws_servers#Pings_and_Pongs_The_Heartbeat_of_wss))
 * to check that the link between the clients and the server is operating and to prevent the link
 * from being broken due to idling.
 *
 * @default 12 * 1000 // 12 seconds
 */
keepAlive?: number): uWS.WebSocketBehavior;
