{"version":3,"file":"buble.umd.js","sources":["../node_modules/acorn/dist/acorn.mjs","../node_modules/acorn-jsx/xhtml.js","../node_modules/acorn-jsx/index.js","../node_modules/acorn-dynamic-import/lib/index.js","../node_modules/acorn-class-fields/index.js","../node_modules/sourcemap-codec/dist/sourcemap-codec.es.js","../node_modules/magic-string/dist/magic-string.es.js","../src/program/Node.js","../src/program/extractNames.js","../src/utils/reserved.js","../src/program/Scope.js","../src/utils/locate.js","../src/utils/getSnippet.js","../src/utils/CompileError.js","../src/utils/array.js","../src/utils/destructure.js","../src/program/BlockStatement.js","../src/utils/spread.js","../src/program/types/ArrayExpression.js","../src/utils/removeTrailingComma.js","../src/program/types/ArrowFunctionExpression.js","../src/utils/checkConst.js","../src/program/types/AssignmentExpression.js","../src/program/types/AwaitExpression.js","../src/program/types/BinaryExpression.js","../src/utils/patterns.js","../src/program/types/BreakStatement.js","../src/program/types/CallExpression.js","../src/program/types/ClassBody.js","../src/program/types/ClassDeclaration.js","../src/utils/deindent.js","../src/program/types/ClassExpression.js","../src/program/types/ContinueStatement.js","../src/program/types/ExportDefaultDeclaration.js","../src/program/types/ExportNamedDeclaration.js","../src/program/types/shared/LoopStatement.js","../src/program/types/ForStatement.js","../src/program/types/ForInStatement.js","../src/program/types/ForOfStatement.js","../src/program/types/FunctionDeclaration.js","../src/program/types/FunctionExpression.js","../src/program/types/Identifier.js","../src/utils/isReference.js","../src/program/types/IfStatement.js","../src/program/types/Import.js","../src/program/types/ImportDeclaration.js","../src/program/types/ImportDefaultSpecifier.js","../src/program/types/ImportSpecifier.js","../src/program/types/JSXAttribute.js","../src/program/types/JSXClosingElement.js","../src/program/types/JSXClosingFragment.js","../src/program/types/JSXElement.js","../src/program/types/Literal.js","../src/program/types/index.js","../src/program/types/JSXExpressionContainer.js","../src/program/types/JSXFragment.js","../src/program/types/JSXOpeningElement.js","../src/program/types/JSXOpeningFragment.js","../src/program/types/JSXSpreadAttribute.js","../src/program/types/MemberExpression.js","../src/program/types/NewExpression.js","../src/program/types/ObjectExpression.js","../src/program/types/Property.js","../src/program/types/ReturnStatement.js","../src/program/types/Super.js","../src/program/types/TaggedTemplateExpression.js","../src/program/types/TemplateElement.js","../src/program/types/TemplateLiteral.js","../src/program/types/ThisExpression.js","../src/program/types/UpdateExpression.js","../src/program/types/VariableDeclaration.js","../src/program/types/VariableDeclarator.js","../src/program/keys.js","../src/program/wrap.js","../src/program/Program.js","../src/index.js"],"sourcesContent":["// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,190,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,26,230,43,117,63,32,0,257,0,11,39,8,0,22,0,12,39,3,3,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,68,12,0,67,12,65,1,31,6129,15,754,9486,286,82,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,280,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true};\nvar startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords$1 = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options)\n}\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code, ecma2019String) {\n  return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\nfunction wordsRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (2015), 7 (2016), 8 (2017), 9 (2018), or 10\n  // (2019). This influences support for strict mode, the set of\n  // reserved words, and support for new syntax features. The default\n  // is 9.\n  ecmaVersion: 9,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // the position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion >= 2015)\n    { options.ecmaVersion -= 2009; }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Each scope gets a bitset that may contain these flags\nvar SCOPE_TOP = 1;\nvar SCOPE_FUNCTION = 2;\nvar SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION;\nvar SCOPE_ASYNC = 4;\nvar SCOPE_GENERATOR = 8;\nvar SCOPE_ARROW = 16;\nvar SCOPE_SIMPLE_CATCH = 32;\nvar SCOPE_SUPER = 64;\nvar SCOPE_DIRECT_SUPER = 128;\n\nfunction functionFlags(async, generator) {\n  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n}\n\n// Used in checkLVal and declareName to determine the type of a binding\nvar BIND_NONE = 0;\nvar BIND_VAR = 1;\nvar BIND_LEXICAL = 2;\nvar BIND_FUNCTION = 3;\nvar BIND_SIMPLE_CATCH = 4;\nvar BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n  var reserved = \"\";\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--)\n      { if (reserved = reservedWords[v]) { break } }\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = wordsRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = wordsRegexp(reservedStrict);\n  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n  // Labels in scope.\n  this.labels = [];\n  // Thus-far undefined exports.\n  this.undefinedExports = {};\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterScope(SCOPE_TOP);\n\n  // For RegExp validation\n  this.regexpState = null;\n};\n\nvar prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true } };\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nprototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\nprototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\nprototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\nprototypeAccessors.allowSuper.get = function () { return (this.currentThisScope().flags & SCOPE_SUPER) > 0 };\nprototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\nprototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n// Switch to a getter for 7.0.0.\nParser.prototype.inNonArrowFunction = function inNonArrowFunction () { return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0 };\n\nParser.extend = function extend () {\n    var plugins = [], len = arguments.length;\n    while ( len-- ) plugins[ len ] = arguments[ len ];\n\n  var cls = this;\n  for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n  return cls\n};\n\nParser.parse = function parse (input, options) {\n  return new this(options, input).parse()\n};\n\nParser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n  var parser = new this(options, input, pos);\n  parser.nextToken();\n  return parser.parseExpression()\n};\n\nParser.tokenizer = function tokenizer (input, options) {\n  return new this(options, input)\n};\n\nObject.defineProperties( Parser.prototype, prototypeAccessors );\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\")/;\npp.strictDirective = function(start) {\n  var this$1 = this;\n\n  for (;;) {\n    // Try to find string literal.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    var match = literal.exec(this$1.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") { return true }\n    start += match[0].length;\n\n    // Skip semicolon, if any.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    if (this$1.input[start] === \";\")\n      { start++; }\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === types.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === types.eof ||\n    this.type === types.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n}\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n};\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var this$1 = this;\n\n  var exports = {};\n  if (!node.body) { node.body = []; }\n  while (this.type !== types.eof) {\n    var stmt = this$1.parseStatement(null, true, exports);\n    node.body.push(stmt);\n  }\n  if (this.inModule)\n    { for (var i = 0, list = Object.keys(this$1.undefinedExports); i < list.length; i += 1)\n      {\n        var name = list[i];\n\n        this$1.raiseRecoverable(this$1.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n      } }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"};\nvar switchLabel = {kind: \"switch\"};\n\npp$1.isLet = function(context) {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  // For ambiguous cases, determine if a LexicalDeclaration (or only a\n  // Statement) is allowed here. If context is not empty then only a Statement\n  // is allowed. However, `let [` is an explicit negative lookahead for\n  // ExpressionStatement, so special-case it first.\n  if (nextCh === 91) { return true } // '['\n  if (context) { return false }\n\n  if (nextCh === 123) { return true } // '{'\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(context, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet(context)) {\n    starttype = types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types._debugger: return this.parseDebuggerStatement(node)\n  case types._do: return this.parseDoStatement(node)\n  case types._for: return this.parseForStatement(node)\n  case types._function:\n    // Function as sole body of either an if statement or a labeled statement\n    // works, but not when it is part of a labeled statement that is the sole\n    // body of an if statement.\n    if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false, !context)\n  case types._class:\n    if (context) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types._if: return this.parseIfStatement(node)\n  case types._return: return this.parseReturnStatement(node)\n  case types._switch: return this.parseSwitchStatement(node)\n  case types._throw: return this.parseThrowStatement(node)\n  case types._try: return this.parseTryStatement(node)\n  case types._const: case types._var:\n    kind = kind || this.value;\n    if (context && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types._while: return this.parseWhileStatement(node)\n  case types._with: return this.parseWithStatement(node)\n  case types.braceL: return this.parseBlock(true, node)\n  case types.semi: return this.parseEmptyStatement(node)\n  case types._export:\n  case types._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (context) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true, !context)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr, context) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var this$1 = this;\n\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$1.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"do\");\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterScope(0);\n  this.expect(types.parenL);\n  if (this.type === types.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1 &&\n        !(kind !== \"var\" && init$1.declarations[0].init)) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLVal(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n  this.next();\n  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n};\n\npp$1.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(\"if\");\n  node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$1.parseSwitchStatement = function(node) {\n  var this$1 = this;\n\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterScope(0);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types.braceR;) {\n    if (this$1.type === types._case || this$1.type === types._default) {\n      var isCase = this$1.type === types._case;\n      if (cur) { this$1.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this$1.startNode());\n      cur.consequent = [];\n      this$1.next();\n      if (isCase) {\n        cur.test = this$1.parseExpression();\n      } else {\n        if (sawDefault) { this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this$1.expect(types.colon);\n    } else {\n      if (!cur) { this$1.unexpected(); }\n      cur.consequent.push(this$1.parseStatement(null));\n    }\n  }\n  this.exitScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$1.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types.parenL)) {\n      clause.param = this.parseBindingAtom();\n      var simple = clause.param.type === \"Identifier\";\n      this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n      this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n      this.expect(types.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterScope(0);\n    }\n    clause.body = this.parseBlock(false);\n    this.exitScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$1.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"while\");\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(\"with\");\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$1.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$1.parseLabeledStatement = function(node, maybeName, expr, context) {\n  var this$1 = this;\n\n  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this$1.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this$1.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope, node) {\n  var this$1 = this;\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n  if ( node === void 0 ) node = this.startNode();\n\n  node.body = [];\n  this.expect(types.braceL);\n  if (createNewLexicalScope) { this.enterScope(0); }\n  while (!this.eat(types.braceR)) {\n    var stmt = this$1.parseStatement(null);\n    node.body.push(stmt);\n  }\n  if (createNewLexicalScope) { this.exitScope(); }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var type = this.type === types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  if (type === \"ForInStatement\") {\n    if (init.type === \"AssignmentPattern\" ||\n      (init.type === \"VariableDeclaration\" && init.declarations[0].init != null &&\n       (this.strict || init.declarations[0].id.type !== \"Identifier\")))\n      { this.raise(init.start, \"Invalid assignment in for-in loop head\"); }\n  }\n  node.left = init;\n  node.right = type === \"ForInStatement\" ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, type)\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  var this$1 = this;\n\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this$1.startNode();\n    this$1.parseVarId(decl, kind);\n    if (this$1.eat(types.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this$1.type === types._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\")))) {\n      this$1.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this$1.type === types._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n    if (!this$1.eat(types.comma)) { break }\n  }\n  return node\n};\n\npp$1.parseVarId = function(decl, kind) {\n  if ((kind === \"const\" || kind === \"let\") && this.isContextual(\"let\")) {\n    this.raiseRecoverable(this.start, \"let is disallowed as a lexically bound name\");\n  }\n  decl.id = this.parseBindingAtom();\n  this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n};\n\nvar FUNC_STATEMENT = 1;\nvar FUNC_HANGING_STATEMENT = 2;\nvar FUNC_NULLABLE_ID = 4;\n\n// Parse a function declaration or literal (depending on the\n// `statement & FUNC_STATEMENT`).\n\n// Remove `allowExpressionBody` for 7.0.0, as it is only called with false\npp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    if (this.type === types.star && (statement & FUNC_HANGING_STATEMENT))\n      { this.unexpected(); }\n    node.generator = this.eat(types.star);\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (statement & FUNC_STATEMENT) {\n    node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.name ? null : this.parseIdent();\n    if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n      // If it is a regular function declaration in sloppy mode, then it is\n      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n      // mode depends on properties of the current scope (see\n      // treatFunctionsAsVar).\n      { this.checkLVal(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n  }\n\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(node.async, node.generator));\n\n  if (!(statement & FUNC_STATEMENT))\n    { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  var this$1 = this;\n\n  this.next();\n\n  // ecma-262 14.6 Class Definitions\n  // A class definition is always strict mode code.\n  var oldStrict = this.strict;\n  this.strict = true;\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    var element = this$1.parseClassElement(node.superClass !== null);\n    if (element) {\n      classBody.body.push(element);\n      if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n        if (hadConstructor) { this$1.raise(element.start, \"Duplicate constructor in the same class\"); }\n        hadConstructor = true;\n      }\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  this.strict = oldStrict;\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$1.parseClassElement = function(constructorAllowsSuper) {\n  var this$1 = this;\n\n  if (this.eat(types.semi)) { return null }\n\n  var method = this.startNode();\n  var tryContextual = function (k, noLineBreak) {\n    if ( noLineBreak === void 0 ) noLineBreak = false;\n\n    var start = this$1.start, startLoc = this$1.startLoc;\n    if (!this$1.eatContextual(k)) { return false }\n    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n    if (method.key) { this$1.unexpected(); }\n    method.computed = false;\n    method.key = this$1.startNodeAt(start, startLoc);\n    method.key.name = k;\n    this$1.finishNode(method.key, \"Identifier\");\n    return false\n  };\n\n  method.kind = \"method\";\n  method.static = tryContextual(\"static\");\n  var isGenerator = this.eat(types.star);\n  var isAsync = false;\n  if (!isGenerator) {\n    if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    } else if (tryContextual(\"get\")) {\n      method.kind = \"get\";\n    } else if (tryContextual(\"set\")) {\n      method.kind = \"set\";\n    }\n  }\n  if (!method.key) { this.parsePropertyName(method); }\n  var key = method.key;\n  var allowsDirectSuper = false;\n  if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n      key.type === \"Literal\" && key.value === \"constructor\")) {\n    if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    method.kind = \"constructor\";\n    allowsDirectSuper = constructorAllowsSuper;\n  } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n  this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n  if (method.kind === \"get\" && method.value.params.length !== 0)\n    { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && method.value.params.length !== 1)\n    { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n  return method\n};\n\npp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n  method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n  return this.finishNode(method, \"MethodDefinition\")\n};\n\npp$1.parseClassId = function(node, isStatement) {\n  if (this.type === types.name) {\n    node.id = this.parseIdent();\n    if (isStatement)\n      { this.checkLVal(node.id, BIND_LEXICAL, false); }\n  } else {\n    if (isStatement === true)\n      { this.unexpected(); }\n    node.id = null;\n  }\n};\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  var this$1 = this;\n\n  this.next();\n  // export * from '...'\n  if (this.eat(types.star)) {\n    this.expectContextual(\"from\");\n    if (this.type !== types.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(null);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        // check for keywords used as local names\n        var spec = list[i];\n\n        this$1.checkUnreserved(spec.local);\n        // check if export is defined\n        this$1.checkLocalExport(spec.local);\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (has(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function(exports, pat) {\n  var this$1 = this;\n\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat.name, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this$1.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this$1.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$1.checkVariableExport = function(exports, decls) {\n  var this$1 = this;\n\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this$1.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node = this$1.startNode();\n    node.local = this$1.parseIdent(true);\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local;\n    this$1.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types.comma)) { return nodes }\n  }\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this$1.startNode();\n    node$2.imported = this$1.parseIdent(true);\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent();\n    } else {\n      this$1.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this$1.checkLVal(node$2.local, BIND_LEXICAL);\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$1.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$1.isDirectiveCandidate = function(statement) {\n  return (\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this$1.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this$1.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      // falls through to AssignmentPattern\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var this$1 = this;\n\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this$1.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$2.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this$1.expect(types.comma); }\n    if (allowEmpty && this$1.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break\n    } else if (this$1.type === types.ellipsis) {\n      var rest = this$1.parseRestBinding();\n      this$1.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n      this$1.expect(close);\n      break\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);\n      this$1.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$2.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  var this$1 = this;\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n      checkClashes[expr.name] = true;\n    }\n    if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1)\n      {\n    var prop = list[i];\n\n    this$1.checkLVal(prop, bindingType, checkClashes);\n  }\n    break\n\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLVal(expr.value, bindingType, checkClashes);\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this$1.checkLVal(elem, bindingType, checkClashes); }\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes);\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes);\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) { refDestructuringErrors.doubleProto = key.start; }\n        // Backwards-compat kludge. Can be removed in version 6.0\n        else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.isContextual(\"yield\")) {\n    if (this.inGenerator) { return this.parseYield(noIn) }\n    // The tokenizer will assume an expression is allowed after\n    // `yield`, but this isn't that kind of yield\n    else { this.exprAllowed = false; }\n  }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldShorthandAssign = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    oldShorthandAssign = refDestructuringErrors.shorthandAssign;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.shorthandAssign = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types.parenL || this.type === types.name)\n    { this.potentialArrowAt = this.start; }\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n    if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }\n    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  if (oldShorthandAssign > -1) { refDestructuringErrors.shorthandAssign = oldShorthandAssign; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n};\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLVal(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.operator = this$1.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this$1.checkLVal(expr);\n      this$1.next();\n      expr = this$1.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar))\n    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n  else\n    { return expr }\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n  }\n  return result\n};\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n  while (true) {\n    var element = this$1.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow);\n    if (element === base || element.type === \"ArrowFunctionExpression\") { return element }\n    base = element;\n  }\n};\n\npp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n  var computed = this.eat(types.bracketL);\n  if (computed || this.eat(types.dot)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.property = computed ? this.parseExpression() : this.parseIdent(true);\n    node.computed = !!computed;\n    if (computed) { this.expect(types.bracketR); }\n    base = this.finishNode(node, \"MemberExpression\");\n  } else if (!noCalls && this.eat(types.parenL)) {\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n    if (maybeAsyncArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (this.awaitIdentPos > 0)\n        { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos;\n      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true)\n    }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n    var node$1 = this.startNodeAt(startPos, startLoc);\n    node$1.callee = base;\n    node$1.arguments = exprList;\n    base = this.finishNode(node$1, \"CallExpression\");\n  } else if (this.type === types.backQuote) {\n    var node$2 = this.startNodeAt(startPos, startLoc);\n    node$2.tag = base;\n    node$2.quasi = this.parseTemplate({isTagged: true});\n    base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n  }\n  return base\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  // If a division operator appears in an expression position, the\n  // tokenizer got confused, and we force it to read a regexp instead.\n  if (this.type === types.slash) { this.readRegexp(); }\n\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types._super:\n    if (!this.allowSuper)\n      { this.raise(this.start, \"'super' keyword outside a method\"); }\n    node = this.startNode();\n    this.next();\n    if (this.type === types.parenL && !this.allowDirectSuper)\n      { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super Arguments\n    if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(false);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n      { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true) }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n        id = this.parseIdent(false);\n        if (this.canInsertSemicolon() || !this.eat(types.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case types.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types.num: case types.string:\n    return this.parseLiteral(this.value)\n\n  case types._null: case types._true: case types._false:\n    node = this.startNode();\n    node.value = this.type === types._null ? null : this.type === types._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, 0)\n\n  case types._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types._new:\n    return this.parseNew()\n\n  case types.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$3.parseParenExpression = function() {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val\n};\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    // Do not save awaitIdentPos to allow checking awaits nested in parameters\n    while (this.type !== types.parenR) {\n      first ? first = false : this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this$1.type === types.ellipsis) {\n        spreadStart = this$1.start;\n        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));\n        if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$3.parseParenItem = function(item) {\n  return item\n};\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = [];\n\npp$3.parseNew = function() {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\" || containsEsc)\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n    if (!this.inNonArrowFunction())\n      { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty$1; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$3.parseTemplate = function(ref) {\n  var this$1 = this;\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this$1.type === types.eof) { this$1.raise(this$1.pos, \"Unterminated template literal\"); }\n    this$1.expect(types.dollarBraceL);\n    node.expressions.push(this$1.parseExpression());\n    this$1.expect(types.braceR);\n    node.quasis.push(curElt = this$1.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$3.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this$1.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // To disallow parenthesized identifier via `this.toAssignable()`.\n    if (this.type === types.parenL && refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0) {\n        refDestructuringErrors.parenthesizedAssign = this.start;\n      }\n      if (refDestructuringErrors.parenthesizedBind < 0) {\n        refDestructuringErrors.parenthesizedBind = this.start;\n      }\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types.comma && this.type !== types.braceR)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.checkUnreserved(prop.key);\n    if (prop.key.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = startPos; }\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true)\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n  if (this.options.ecmaVersion >= 8) { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false, true);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n    node.body = this.parseBlock(false);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitScope();\n\n  // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n  if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }\n  this.strict = oldStrict;\n};\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var this$1 = this;\n\n  var nameHash = {};\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this$1.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this$1.type === types.comma)\n      { elt = null; }\n    else if (this$1.type === types.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this$1.start; }\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$3.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n  if (this.keywords.test(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved === \"never\") { liberal = false; }\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) {\n    this.checkUnreserved(node);\n    if (node.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = node.start; }\n  }\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function(noIn) {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign(noIn);\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$5 = Parser.prototype;\n\nvar Scope = function Scope(flags) {\n  this.flags = flags;\n  // A list of var-declared names in the current lexical scope\n  this.var = [];\n  // A list of lexically-declared names in the current lexical scope\n  this.lexical = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  this.functions = [];\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterScope = function(flags) {\n  this.scopeStack.push(new Scope(flags));\n};\n\npp$5.exitScope = function() {\n  this.scopeStack.pop();\n};\n\n// The spec says:\n// > At the top level of a function, or script, function declarations are\n// > treated like var declarations rather than like lexical declarations.\npp$5.treatFunctionsAsVarInScope = function(scope) {\n  return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n};\n\npp$5.declareName = function(name, bindingType, pos) {\n  var this$1 = this;\n\n  var redeclared = false;\n  if (bindingType === BIND_LEXICAL) {\n    var scope = this.currentScope();\n    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    scope.lexical.push(name);\n    if (this.inModule && (scope.flags & SCOPE_TOP))\n      { delete this.undefinedExports[name]; }\n  } else if (bindingType === BIND_SIMPLE_CATCH) {\n    var scope$1 = this.currentScope();\n    scope$1.lexical.push(name);\n  } else if (bindingType === BIND_FUNCTION) {\n    var scope$2 = this.currentScope();\n    if (this.treatFunctionsAsVar)\n      { redeclared = scope$2.lexical.indexOf(name) > -1; }\n    else\n      { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n    scope$2.functions.push(name);\n  } else {\n    for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n      var scope$3 = this$1.scopeStack[i];\n      if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n          !this$1.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n        redeclared = true;\n        break\n      }\n      scope$3.var.push(name);\n      if (this$1.inModule && (scope$3.flags & SCOPE_TOP))\n        { delete this$1.undefinedExports[name]; }\n      if (scope$3.flags & SCOPE_VAR) { break }\n    }\n  }\n  if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n};\n\npp$5.checkLocalExport = function(id) {\n  // scope.functions must be empty as Module code is always strict.\n  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1) {\n    this.undefinedExports[id.name] = id;\n  }\n};\n\npp$5.currentScope = function() {\n  return this.scopeStack[this.scopeStack.length - 1]\n};\n\npp$5.currentVarScope = function() {\n  var this$1 = this;\n\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this$1.scopeStack[i];\n    if (scope.flags & SCOPE_VAR) { return scope }\n  }\n};\n\n// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\npp$5.currentThisScope = function() {\n  var this$1 = this;\n\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this$1.scopeStack[i];\n    if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n  }\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function() {\n  return [types$1.b_stat]\n};\n\npp$7.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types$1.f_expr || parent === types$1.f_stat)\n    { return true }\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types._return || prevType === types.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n    { return true }\n  if (prevType === types.braceL)\n    { return parent === types$1.b_stat }\n  if (prevType === types._var || prevType === types._const || prevType === types.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$7.inGeneratorContext = function() {\n  var this$1 = this;\n\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this$1.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function() {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n      !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n    { this.context.push(types$1.f_expr); }\n  else\n    { this.context.push(types$1.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function() {\n  if (this.curContext() === types$1.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types$1.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function(prevType) {\n  if (prevType === types._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types$1.f_expr)\n      { this.context[index] = types$1.f_expr_gen; }\n    else\n      { this.context[index] = types$1.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\n// This file contains Unicode properties extracted from the ECMAScript\n// specification. The lists are extracted like so:\n// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n// #table-binary-unicode-properties\nvar ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\nvar unicodeBinaryProperties = {\n  9: ecma9BinaryProperties,\n  10: ecma9BinaryProperties + \" Extended_Pictographic\"\n};\n\n// #table-unicode-general-category-values\nvar unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n// #table-unicode-script-values\nvar ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\nvar unicodeScriptValues = {\n  9: ecma9ScriptValues,\n  10: ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\"\n};\n\nvar data = {};\nfunction buildUnicodeData(ecmaVersion) {\n  var d = data[ecmaVersion] = {\n    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n    nonBinary: {\n      General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n    }\n  };\n  d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n  d.nonBinary.gc = d.nonBinary.General_Category;\n  d.nonBinary.sc = d.nonBinary.Script;\n  d.nonBinary.scx = d.nonBinary.Script_Extensions;\n}\nbuildUnicodeData(9);\nbuildUnicodeData(10);\n\nvar pp$9 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n  this.unicodeProperties = data[parser.options.ecmaVersion >= 10 ? 10 : parser.options.ecmaVersion];\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current () {\n  return this.at(this.pos)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead () {\n  return this.at(this.nextIndex(this.pos))\n};\n\nRegExpValidationState.prototype.advance = function advance () {\n  this.pos = this.nextIndex(this.pos);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch) {\n  if (this.current() === ch) {\n    this.advance();\n    return true\n  }\n  return false\n};\n\nfunction codePointToString$1(ch) {\n  if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n  ch -= 0x10000;\n  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n}\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpFlags = function(state) {\n  var this$1 = this;\n\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this$1.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this$1.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$9.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* [ */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$9.regexp_disjunction = function(state) {\n  var this$1 = this;\n\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this$1.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$9.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    {  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$9.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$9.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$9.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$9.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$9.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$9.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$9.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$9.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$9.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$9.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$9.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$9.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier[U] ::\n//   [empty]\n//   `?` GroupName[?U]\npp$9.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName[U] ::\n//   `<` RegExpIdentifierName[?U] `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName[U] ::\n//   RegExpIdentifierStart[?U]\n//   RegExpIdentifierName[?U] RegExpIdentifierPart[?U]\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString$1(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString$1(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart[U] ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\npp$9.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart[U] ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\n//   <ZWNJ>\n//   <ZWJ>\npp$9.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$9.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$9.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$9.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$9.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$9.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$9.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$9.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      state.switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$9.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$9.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$9.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$9.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$9.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!has(state.unicodeProperties.nonBinary, name))\n    { state.raise(\"Invalid property name\"); }\n  if (!state.unicodeProperties.nonBinary[name].test(value))\n    { state.raise(\"Invalid property value\"); }\n};\npp$9.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (!state.unicodeProperties.binary.test(nameOrValue))\n    { state.raise(\"Invalid property name\"); }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$9.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$9.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* [ */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$9.regexp_classRanges = function(state) {\n  var this$1 = this;\n\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this$1.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$9.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* [ */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$9.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$9.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$9.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$9.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$9.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$9.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp$8 = Parser.prototype;\n\n// Move to the next token\n\npp$8.next = function() {\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$8.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp$8[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$8.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$8.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp$8.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp$8.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00\n};\n\npp$8.skipBlockComment = function() {\n  var this$1 = this;\n\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine;\n      this$1.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp$8.skipLineComment = function(startSkip) {\n  var this$1 = this;\n\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this$1.input.charCodeAt(++this$1.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$8.skipSpace = function() {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this$1.pos;\n      break\n    case 13:\n      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n        ++this$1.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this$1.pos;\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n      case 42: // '*'\n        this$1.skipBlockComment();\n        break\n      case 47:\n        this$1.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this$1.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$8.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$8.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot)\n  }\n};\n\npp$8.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.slash, 1)\n};\n\npp$8.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp$8.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n};\n\npp$8.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.bitwiseXOR, 1)\n};\n\npp$8.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.plusMin, 1)\n};\n\npp$8.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(types.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types.relational, size)\n};\n\npp$8.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow)\n  }\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n};\n\npp$8.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types.parenL)\n  case 41: ++this.pos; return this.finishToken(types.parenR)\n  case 59: ++this.pos; return this.finishToken(types.semi)\n  case 44: ++this.pos; return this.finishToken(types.comma)\n  case 91: ++this.pos; return this.finishToken(types.bracketL)\n  case 93: ++this.pos; return this.finishToken(types.bracketR)\n  case 123: ++this.pos; return this.finishToken(types.braceL)\n  case 125: ++this.pos; return this.finishToken(types.braceR)\n  case 58: ++this.pos; return this.finishToken(types.colon)\n  case 63: ++this.pos; return this.finishToken(types.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(types.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp$8.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp$8.readRegexp = function() {\n  var this$1 = this;\n\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(start, \"Unterminated regular expression\"); }\n    var ch = this$1.input.charAt(this$1.pos);\n    if (lineBreak.test(ch)) { this$1.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this$1.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$8.readInt = function(radix, len) {\n  var this$1 = this;\n\n  var start = this.pos, total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos), val = (void 0);\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    ++this$1.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\npp$8.readRadixNumber = function(radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp$8.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var str = this.input.slice(start, this.pos);\n  var val = octal ? parseInt(str, 8) : parseFloat(str);\n  return this.finishToken(types.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp$8.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$8.readString = function(quote) {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(false);\n      chunkStart = this$1.pos;\n    } else {\n      if (isNewLine(ch, this$1.options.ecmaVersion >= 10)) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n      ++this$1.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$8.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$8.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$8.readTmplToken = function() {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated template\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'\n      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this$1.pos += 2;\n          return this$1.finishToken(types.dollarBraceL)\n        } else {\n          ++this$1.pos;\n          return this$1.finishToken(types.backQuote)\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      return this$1.finishToken(types.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(true);\n      chunkStart = this$1.pos;\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      ++this$1.pos;\n      switch (ch) {\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos) === 10) { ++this$1.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      chunkStart = this$1.pos;\n    } else {\n      ++this$1.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp$8.readInvalidTemplateToken = function() {\n  var this$1 = this;\n\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this$1.input[this$1.pos]) {\n    case \"\\\\\":\n      ++this$1.pos;\n      break\n\n    case \"$\":\n      if (this$1.input[this$1.pos + 1] !== \"{\") {\n        break\n      }\n    // falls through\n\n    case \"`\":\n      return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp$8.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    if (isNewLine(ch)) {\n      // Unicode new line characters after \\ get removed from output in both\n      // template literals and strings\n      return \"\"\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$8.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$8.readWord1 = function() {\n  var this$1 = this;\n\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this$1.containsEsc = true;\n      word += this$1.input.slice(chunkStart, this$1.pos);\n      var escStart = this$1.pos;\n      if (this$1.input.charCodeAt(++this$1.pos) !== 117) // \"u\"\n        { this$1.invalidStringToken(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this$1.pos;\n      var esc = this$1.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this$1.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this$1.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$8.readWord = function() {\n  var word = this.readWord1();\n  var type = types.name;\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word); }\n    type = keywords$1[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n//\n// [walk]: util/walk.js\n\nvar version = \"6.1.1\";\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return Parser.parse(input, options)\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  return Parser.parseExpressionAt(input, pos, options)\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return Parser.tokenizer(input, options)\n}\n\nexport { version, parse, parseExpressionAt, tokenizer, Parser, defaultOptions, Position, SourceLocation, getLineInfo, Node, TokenType, types as tokTypes, keywords$1 as keywordTypes, TokContext, types$1 as tokContexts, isIdentifierChar, isIdentifierStart, Token, isNewLine, lineBreak, lineBreakG, nonASCIIwhitespace };\n//# sourceMappingURL=acorn.mjs.map\n","module.exports = {\n  quot: '\\u0022',\n  amp: '&',\n  apos: '\\u0027',\n  lt: '<',\n  gt: '>',\n  nbsp: '\\u00A0',\n  iexcl: '\\u00A1',\n  cent: '\\u00A2',\n  pound: '\\u00A3',\n  curren: '\\u00A4',\n  yen: '\\u00A5',\n  brvbar: '\\u00A6',\n  sect: '\\u00A7',\n  uml: '\\u00A8',\n  copy: '\\u00A9',\n  ordf: '\\u00AA',\n  laquo: '\\u00AB',\n  not: '\\u00AC',\n  shy: '\\u00AD',\n  reg: '\\u00AE',\n  macr: '\\u00AF',\n  deg: '\\u00B0',\n  plusmn: '\\u00B1',\n  sup2: '\\u00B2',\n  sup3: '\\u00B3',\n  acute: '\\u00B4',\n  micro: '\\u00B5',\n  para: '\\u00B6',\n  middot: '\\u00B7',\n  cedil: '\\u00B8',\n  sup1: '\\u00B9',\n  ordm: '\\u00BA',\n  raquo: '\\u00BB',\n  frac14: '\\u00BC',\n  frac12: '\\u00BD',\n  frac34: '\\u00BE',\n  iquest: '\\u00BF',\n  Agrave: '\\u00C0',\n  Aacute: '\\u00C1',\n  Acirc: '\\u00C2',\n  Atilde: '\\u00C3',\n  Auml: '\\u00C4',\n  Aring: '\\u00C5',\n  AElig: '\\u00C6',\n  Ccedil: '\\u00C7',\n  Egrave: '\\u00C8',\n  Eacute: '\\u00C9',\n  Ecirc: '\\u00CA',\n  Euml: '\\u00CB',\n  Igrave: '\\u00CC',\n  Iacute: '\\u00CD',\n  Icirc: '\\u00CE',\n  Iuml: '\\u00CF',\n  ETH: '\\u00D0',\n  Ntilde: '\\u00D1',\n  Ograve: '\\u00D2',\n  Oacute: '\\u00D3',\n  Ocirc: '\\u00D4',\n  Otilde: '\\u00D5',\n  Ouml: '\\u00D6',\n  times: '\\u00D7',\n  Oslash: '\\u00D8',\n  Ugrave: '\\u00D9',\n  Uacute: '\\u00DA',\n  Ucirc: '\\u00DB',\n  Uuml: '\\u00DC',\n  Yacute: '\\u00DD',\n  THORN: '\\u00DE',\n  szlig: '\\u00DF',\n  agrave: '\\u00E0',\n  aacute: '\\u00E1',\n  acirc: '\\u00E2',\n  atilde: '\\u00E3',\n  auml: '\\u00E4',\n  aring: '\\u00E5',\n  aelig: '\\u00E6',\n  ccedil: '\\u00E7',\n  egrave: '\\u00E8',\n  eacute: '\\u00E9',\n  ecirc: '\\u00EA',\n  euml: '\\u00EB',\n  igrave: '\\u00EC',\n  iacute: '\\u00ED',\n  icirc: '\\u00EE',\n  iuml: '\\u00EF',\n  eth: '\\u00F0',\n  ntilde: '\\u00F1',\n  ograve: '\\u00F2',\n  oacute: '\\u00F3',\n  ocirc: '\\u00F4',\n  otilde: '\\u00F5',\n  ouml: '\\u00F6',\n  divide: '\\u00F7',\n  oslash: '\\u00F8',\n  ugrave: '\\u00F9',\n  uacute: '\\u00FA',\n  ucirc: '\\u00FB',\n  uuml: '\\u00FC',\n  yacute: '\\u00FD',\n  thorn: '\\u00FE',\n  yuml: '\\u00FF',\n  OElig: '\\u0152',\n  oelig: '\\u0153',\n  Scaron: '\\u0160',\n  scaron: '\\u0161',\n  Yuml: '\\u0178',\n  fnof: '\\u0192',\n  circ: '\\u02C6',\n  tilde: '\\u02DC',\n  Alpha: '\\u0391',\n  Beta: '\\u0392',\n  Gamma: '\\u0393',\n  Delta: '\\u0394',\n  Epsilon: '\\u0395',\n  Zeta: '\\u0396',\n  Eta: '\\u0397',\n  Theta: '\\u0398',\n  Iota: '\\u0399',\n  Kappa: '\\u039A',\n  Lambda: '\\u039B',\n  Mu: '\\u039C',\n  Nu: '\\u039D',\n  Xi: '\\u039E',\n  Omicron: '\\u039F',\n  Pi: '\\u03A0',\n  Rho: '\\u03A1',\n  Sigma: '\\u03A3',\n  Tau: '\\u03A4',\n  Upsilon: '\\u03A5',\n  Phi: '\\u03A6',\n  Chi: '\\u03A7',\n  Psi: '\\u03A8',\n  Omega: '\\u03A9',\n  alpha: '\\u03B1',\n  beta: '\\u03B2',\n  gamma: '\\u03B3',\n  delta: '\\u03B4',\n  epsilon: '\\u03B5',\n  zeta: '\\u03B6',\n  eta: '\\u03B7',\n  theta: '\\u03B8',\n  iota: '\\u03B9',\n  kappa: '\\u03BA',\n  lambda: '\\u03BB',\n  mu: '\\u03BC',\n  nu: '\\u03BD',\n  xi: '\\u03BE',\n  omicron: '\\u03BF',\n  pi: '\\u03C0',\n  rho: '\\u03C1',\n  sigmaf: '\\u03C2',\n  sigma: '\\u03C3',\n  tau: '\\u03C4',\n  upsilon: '\\u03C5',\n  phi: '\\u03C6',\n  chi: '\\u03C7',\n  psi: '\\u03C8',\n  omega: '\\u03C9',\n  thetasym: '\\u03D1',\n  upsih: '\\u03D2',\n  piv: '\\u03D6',\n  ensp: '\\u2002',\n  emsp: '\\u2003',\n  thinsp: '\\u2009',\n  zwnj: '\\u200C',\n  zwj: '\\u200D',\n  lrm: '\\u200E',\n  rlm: '\\u200F',\n  ndash: '\\u2013',\n  mdash: '\\u2014',\n  lsquo: '\\u2018',\n  rsquo: '\\u2019',\n  sbquo: '\\u201A',\n  ldquo: '\\u201C',\n  rdquo: '\\u201D',\n  bdquo: '\\u201E',\n  dagger: '\\u2020',\n  Dagger: '\\u2021',\n  bull: '\\u2022',\n  hellip: '\\u2026',\n  permil: '\\u2030',\n  prime: '\\u2032',\n  Prime: '\\u2033',\n  lsaquo: '\\u2039',\n  rsaquo: '\\u203A',\n  oline: '\\u203E',\n  frasl: '\\u2044',\n  euro: '\\u20AC',\n  image: '\\u2111',\n  weierp: '\\u2118',\n  real: '\\u211C',\n  trade: '\\u2122',\n  alefsym: '\\u2135',\n  larr: '\\u2190',\n  uarr: '\\u2191',\n  rarr: '\\u2192',\n  darr: '\\u2193',\n  harr: '\\u2194',\n  crarr: '\\u21B5',\n  lArr: '\\u21D0',\n  uArr: '\\u21D1',\n  rArr: '\\u21D2',\n  dArr: '\\u21D3',\n  hArr: '\\u21D4',\n  forall: '\\u2200',\n  part: '\\u2202',\n  exist: '\\u2203',\n  empty: '\\u2205',\n  nabla: '\\u2207',\n  isin: '\\u2208',\n  notin: '\\u2209',\n  ni: '\\u220B',\n  prod: '\\u220F',\n  sum: '\\u2211',\n  minus: '\\u2212',\n  lowast: '\\u2217',\n  radic: '\\u221A',\n  prop: '\\u221D',\n  infin: '\\u221E',\n  ang: '\\u2220',\n  and: '\\u2227',\n  or: '\\u2228',\n  cap: '\\u2229',\n  cup: '\\u222A',\n  'int': '\\u222B',\n  there4: '\\u2234',\n  sim: '\\u223C',\n  cong: '\\u2245',\n  asymp: '\\u2248',\n  ne: '\\u2260',\n  equiv: '\\u2261',\n  le: '\\u2264',\n  ge: '\\u2265',\n  sub: '\\u2282',\n  sup: '\\u2283',\n  nsub: '\\u2284',\n  sube: '\\u2286',\n  supe: '\\u2287',\n  oplus: '\\u2295',\n  otimes: '\\u2297',\n  perp: '\\u22A5',\n  sdot: '\\u22C5',\n  lceil: '\\u2308',\n  rceil: '\\u2309',\n  lfloor: '\\u230A',\n  rfloor: '\\u230B',\n  lang: '\\u2329',\n  rang: '\\u232A',\n  loz: '\\u25CA',\n  spades: '\\u2660',\n  clubs: '\\u2663',\n  hearts: '\\u2665',\n  diams: '\\u2666'\n};\n","'use strict';\n\nconst XHTMLEntities = require('./xhtml');\n\nconst hexNumber = /^[\\da-fA-F]+$/;\nconst decimalNumber = /^\\d+$/;\n\nconst acorn = require(\"acorn\");\nconst tt = acorn.tokTypes;\nconst TokContext = acorn.TokContext;\nconst tokContexts = acorn.tokContexts;\nconst TokenType = acorn.TokenType;\nconst isNewLine = acorn.isNewLine;\nconst isIdentifierStart = acorn.isIdentifierStart;\nconst isIdentifierChar = acorn.isIdentifierChar;\n\nconst tc_oTag = new TokContext('<tag', false);\nconst tc_cTag = new TokContext('</tag', false);\nconst tc_expr = new TokContext('<tag>...</tag>', true, true);\n\nconst tok = {\n  jsxName: new TokenType('jsxName'),\n  jsxText: new TokenType('jsxText', {beforeExpr: true}),\n  jsxTagStart: new TokenType('jsxTagStart'),\n  jsxTagEnd: new TokenType('jsxTagEnd')\n}\n\ntok.jsxTagStart.updateContext = function() {\n  this.context.push(tc_expr); // treat as beginning of JSX expression\n  this.context.push(tc_oTag); // start opening tag context\n  this.exprAllowed = false;\n};\ntok.jsxTagEnd.updateContext = function(prevType) {\n  let out = this.context.pop();\n  if (out === tc_oTag && prevType === tt.slash || out === tc_cTag) {\n    this.context.pop();\n    this.exprAllowed = this.curContext() === tc_expr;\n  } else {\n    this.exprAllowed = true;\n  }\n};\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(object) {\n  if (!object)\n    return object;\n\n  if (object.type === 'JSXIdentifier')\n    return object.name;\n\n  if (object.type === 'JSXNamespacedName')\n    return object.namespace.name + ':' + object.name.name;\n\n  if (object.type === 'JSXMemberExpression')\n    return getQualifiedJSXName(object.object) + '.' +\n    getQualifiedJSXName(object.property);\n}\n\nmodule.exports = function(options) {\n  options = options || {};\n  return function(Parser) {\n    return plugin({\n      allowNamespaces: options.allowNamespaces !== false,\n      allowNamespacedObjects: !!options.allowNamespacedObjects\n    }, Parser);\n  }\n};\nmodule.exports.tokTypes = tok;\n\nfunction plugin(options, Parser) {\n  return class extends Parser {\n    // Reads inline JSX contents token.\n    jsx_readToken() {\n      let out = '', chunkStart = this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated JSX contents');\n        let ch = this.input.charCodeAt(this.pos);\n\n        switch (ch) {\n        case 60: // '<'\n        case 123: // '{'\n          if (this.pos === this.start) {\n            if (ch === 60 && this.exprAllowed) {\n              ++this.pos;\n              return this.finishToken(tok.jsxTagStart);\n            }\n            return this.getTokenFromCode(ch);\n          }\n          out += this.input.slice(chunkStart, this.pos);\n          return this.finishToken(tok.jsxText, out);\n\n        case 38: // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n          break;\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.pos);\n            out += this.jsx_readNewLine(true);\n            chunkStart = this.pos;\n          } else {\n            ++this.pos;\n          }\n        }\n      }\n    }\n\n    jsx_readNewLine(normalizeCRLF) {\n      let ch = this.input.charCodeAt(this.pos);\n      let out;\n      ++this.pos;\n      if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {\n        ++this.pos;\n        out = normalizeCRLF ? '\\n' : '\\r\\n';\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n\n      return out;\n    }\n\n    jsx_readString(quote) {\n      let out = '', chunkStart = ++this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated string constant');\n        let ch = this.input.charCodeAt(this.pos);\n        if (ch === quote) break;\n        if (ch === 38) { // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readNewLine(false);\n          chunkStart = this.pos;\n        } else {\n          ++this.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsx_readEntity() {\n      let str = '', count = 0, entity;\n      let ch = this.input[this.pos];\n      if (ch !== '&')\n        this.raise(this.pos, 'Entity must start with an ampersand');\n      let startPos = ++this.pos;\n      while (this.pos < this.input.length && count++ < 10) {\n        ch = this.input[this.pos++];\n        if (ch === ';') {\n          if (str[0] === '#') {\n            if (str[1] === 'x') {\n              str = str.substr(2);\n              if (hexNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 16));\n            } else {\n              str = str.substr(1);\n              if (decimalNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 10));\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.pos = startPos;\n        return '&';\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can't contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsx_readWord() {\n      let ch, start = this.pos;\n      do {\n        ch = this.input.charCodeAt(++this.pos);\n      } while (isIdentifierChar(ch) || ch === 45); // '-'\n      return this.finishToken(tok.jsxName, this.input.slice(start, this.pos));\n    }\n\n    // Parse next token as JSX identifier\n\n    jsx_parseIdentifier() {\n      let node = this.startNode();\n      if (this.type === tok.jsxName)\n        node.name = this.value;\n      else if (this.type.keyword)\n        node.name = this.type.keyword;\n      else\n        this.unexpected();\n      this.next();\n      return this.finishNode(node, 'JSXIdentifier');\n    }\n\n    // Parse namespaced identifier.\n\n    jsx_parseNamespacedName() {\n      let startPos = this.start, startLoc = this.startLoc;\n      let name = this.jsx_parseIdentifier();\n      if (!options.allowNamespaces || !this.eat(tt.colon)) return name;\n      var node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsx_parseIdentifier();\n      return this.finishNode(node, 'JSXNamespacedName');\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsx_parseElementName() {\n      if (this.type === tok.jsxTagEnd) return '';\n      let startPos = this.start, startLoc = this.startLoc;\n      let node = this.jsx_parseNamespacedName();\n      if (this.type === tt.dot && node.type === 'JSXNamespacedName' && !options.allowNamespacedObjects) {\n        this.unexpected();\n      }\n      while (this.eat(tt.dot)) {\n        let newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsx_parseIdentifier();\n        node = this.finishNode(newNode, 'JSXMemberExpression');\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsx_parseAttributeValue() {\n      switch (this.type) {\n      case tt.braceL:\n        let node = this.jsx_parseExpressionContainer();\n        if (node.expression.type === 'JSXEmptyExpression')\n          this.raise(node.start, 'JSX attributes must only be assigned a non-empty expression');\n        return node;\n\n      case tok.jsxTagStart:\n      case tt.string:\n        return this.parseExprAtom();\n\n      default:\n        this.raise(this.start, 'JSX value should be either an expression or a quoted JSX text');\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsx_parseEmptyExpression() {\n      let node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);\n      return this.finishNodeAt(node, 'JSXEmptyExpression', this.start, this.startLoc);\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsx_parseExpressionContainer() {\n      let node = this.startNode();\n      this.next();\n      node.expression = this.type === tt.braceR\n        ? this.jsx_parseEmptyExpression()\n        : this.parseExpression();\n      this.expect(tt.braceR);\n      return this.finishNode(node, 'JSXExpressionContainer');\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsx_parseAttribute() {\n      let node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssign();\n        this.expect(tt.braceR);\n        return this.finishNode(node, 'JSXSpreadAttribute');\n      }\n      node.name = this.jsx_parseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;\n      return this.finishNode(node, 'JSXAttribute');\n    }\n\n    // Parses JSX opening tag starting after '<'.\n\n    jsx_parseOpeningElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      node.attributes = [];\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      while (this.type !== tt.slash && this.type !== tok.jsxTagEnd)\n        node.attributes.push(this.jsx_parseAttribute());\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXOpeningElement' : 'JSXOpeningFragment');\n    }\n\n    // Parses JSX closing tag starting after '</'.\n\n    jsx_parseClosingElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXClosingElement' : 'JSXClosingFragment');\n    }\n\n    // Parses entire JSX element, including it's opening tag\n    // (starting after '<'), attributes, contents and closing tag.\n\n    jsx_parseElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let children = [];\n      let openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.type) {\n          case tok.jsxTagStart:\n            startPos = this.start; startLoc = this.startLoc;\n            this.next();\n            if (this.eat(tt.slash)) {\n              closingElement = this.jsx_parseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n            children.push(this.jsx_parseElementAt(startPos, startLoc));\n            break;\n\n          case tok.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case tt.braceL:\n            children.push(this.jsx_parseExpressionContainer());\n            break;\n\n          default:\n            this.unexpected();\n          }\n        }\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(\n            closingElement.start,\n            'Expected corresponding JSX closing tag for <' + getQualifiedJSXName(openingElement.name) + '>');\n        }\n      }\n      let fragmentOrElement = openingElement.name ? 'Element' : 'Fragment';\n\n      node['opening' + fragmentOrElement] = openingElement;\n      node['closing' + fragmentOrElement] = closingElement;\n      node.children = children;\n      if (this.type === tt.relational && this.value === \"<\") {\n        this.raise(this.start, \"Adjacent JSX elements must be wrapped in an enclosing tag\");\n      }\n      return this.finishNode(node, 'JSX' + fragmentOrElement);\n    }\n\n    // Parse JSX text\n\n    jsx_parseText(value) {\n      let node = this.parseLiteral(value);\n      node.type = \"JSXText\";\n      return node;\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsx_parseElement() {\n      let startPos = this.start, startLoc = this.startLoc;\n      this.next();\n      return this.jsx_parseElementAt(startPos, startLoc);\n    }\n\n    parseExprAtom(refShortHandDefaultPos) {\n      if (this.type === tok.jsxText)\n        return this.jsx_parseText(this.value);\n      else if (this.type === tok.jsxTagStart)\n        return this.jsx_parseElement();\n      else\n        return super.parseExprAtom(refShortHandDefaultPos);\n    }\n\n    readToken(code) {\n      let context = this.curContext();\n\n      if (context === tc_expr) return this.jsx_readToken();\n\n      if (context === tc_oTag || context === tc_cTag) {\n        if (isIdentifierStart(code)) return this.jsx_readWord();\n\n        if (code == 62) {\n          ++this.pos;\n          return this.finishToken(tok.jsxTagEnd);\n        }\n\n        if ((code === 34 || code === 39) && context == tc_oTag)\n          return this.jsx_readString(code);\n      }\n\n      if (code === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33) {\n        ++this.pos;\n        return this.finishToken(tok.jsxTagStart);\n      }\n      return super.readToken(code)\n    }\n\n    updateContext(prevType) {\n      if (this.type == tt.braceL) {\n        var curContext = this.curContext();\n        if (curContext == tc_oTag) this.context.push(tokContexts.b_expr);\n        else if (curContext == tc_expr) this.context.push(tokContexts.b_tmpl);\n        else super.updateContext(prevType)\n        this.exprAllowed = true;\n      } else if (this.type === tt.slash && prevType === tok.jsxTagStart) {\n        this.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.context.push(tc_cTag); // reconsider as closing tag context\n        this.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DynamicImportKey = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function () {\n  function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } }\n\n  return get;\n}();\n\nexports['default'] = dynamicImport;\n\nvar _acorn = require('acorn');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-underscore-dangle */\n\n\nvar DynamicImportKey = exports.DynamicImportKey = 'Import';\n\n// NOTE: This allows `yield import()` to parse correctly.\n_acorn.tokTypes._import.startsExpr = true;\n\nfunction parseDynamicImport() {\n  var node = this.startNode();\n  this.next();\n  if (this.type !== _acorn.tokTypes.parenL) {\n    this.unexpected();\n  }\n  return this.finishNode(node, DynamicImportKey);\n}\n\nfunction parenAfter() {\n  return (/^(\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*\\(/.test(this.input.slice(this.pos))\n  );\n}\n\nfunction dynamicImport(Parser) {\n  return function (_Parser) {\n    _inherits(_class, _Parser);\n\n    function _class() {\n      _classCallCheck(this, _class);\n\n      return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    _createClass(_class, [{\n      key: 'parseStatement',\n      value: function () {\n        function parseStatement(context, topLevel, exports) {\n          if (this.type === _acorn.tokTypes._import && parenAfter.call(this)) {\n            return this.parseExpressionStatement(this.startNode(), this.parseExpression());\n          }\n          return _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'parseStatement', this).call(this, context, topLevel, exports);\n        }\n\n        return parseStatement;\n      }()\n    }, {\n      key: 'parseExprAtom',\n      value: function () {\n        function parseExprAtom(refDestructuringErrors) {\n          if (this.type === _acorn.tokTypes._import) {\n            return parseDynamicImport.call(this);\n          }\n          return _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'parseExprAtom', this).call(this, refDestructuringErrors);\n        }\n\n        return parseExprAtom;\n      }()\n    }]);\n\n    return _class;\n  }(Parser);\n}","\"use strict\"\n\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g\n\nconst acorn = require(\"acorn\")\nconst tt = acorn.tokTypes\nconst TokenType = acorn.TokenType\n\nfunction maybeParseFieldValue(field) {\n  if (this.eat(tt.eq)) {\n    const oldInFieldValue = this._inFieldValue\n    this._inFieldValue = true\n    field.value = this.parseExpression()\n    this._inFieldValue = oldInFieldValue\n  } else field.value = null\n}\n\nfunction parsePrivateName() {\n  const node = this.startNode()\n  node.name = this.value\n  this.next()\n  this.finishNode(node, \"PrivateName\")\n  if (this.options.allowReserved == \"never\") this.checkUnreserved(node)\n  return node\n}\n\nconst privateNameToken = new TokenType(\"privateName\")\n\nmodule.exports = function(Parser) {\n  return class extends Parser {\n    // Parse # token\n    getTokenFromCode(code) {\n      if (code === 35) {\n        ++this.pos\n        const word = this.readWord1()\n        return this.finishToken(privateNameToken, word)\n      }\n      return super.getTokenFromCode(code)\n    }\n\n    // Manage stacks and check for undeclared private names\n    parseClass(node, isStatement) {\n      this._privateBoundNamesStack = this._privateBoundNamesStack || []\n      const privateBoundNames = Object.create(this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1] || null)\n      this._privateBoundNamesStack.push(privateBoundNames)\n      this._unresolvedPrivateNamesStack = this._unresolvedPrivateNamesStack || []\n      const unresolvedPrivateNames = Object.create(null)\n      this._unresolvedPrivateNamesStack.push(unresolvedPrivateNames)\n      const _return = super.parseClass(node, isStatement)\n      this._privateBoundNamesStack.pop()\n      this._unresolvedPrivateNamesStack.pop()\n      if (!this._unresolvedPrivateNamesStack.length) {\n        const names = Object.keys(unresolvedPrivateNames)\n        if (names.length) {\n          names.sort((n1, n2) => unresolvedPrivateNames[n1] - unresolvedPrivateNames[n2])\n          this.raise(unresolvedPrivateNames[names[0]], \"Usage of undeclared private name\")\n        }\n      } else Object.assign(this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1], unresolvedPrivateNames)\n      return _return\n    }\n\n    // Parse private fields\n    parseClassElement(_constructorAllowsSuper) {\n      if (this.eat(tt.semi)) return null\n      const node = this.startNode()\n      if (!(this.options.ecmaVersion >= 8) || this.type != privateNameToken) {\n        // Special-case for `async`, since `parseClassMember` currently looks\n        // for `(` to determine whether `async` is a method name\n        if (this.isContextual(\"async\")) {\n          skipWhiteSpace.lastIndex = this.pos\n          let skip = skipWhiteSpace.exec(this.input)\n          let next = this.input.charAt(this.pos + skip[0].length)\n          if (next === \";\" || next === \"=\") {\n            node.key = this.parseIdent(true)\n            node.computed = false\n            maybeParseFieldValue.call(this, node)\n            this.finishNode(node, \"FieldDefinition\")\n            this.semicolon()\n            return node\n          }\n        }\n        return super.parseClassElement.apply(this, arguments)\n      }\n      node.key = parsePrivateName.call(this)\n      node.computed = false\n      if (node.key.name == \"constructor\") this.raise(node.start, \"Classes may not have a field named constructor\")\n      if (Object.prototype.hasOwnProperty.call(this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1], node.key.name)) this.raise(node.start, \"Duplicate private element\")\n      this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1][node.key.name] = true\n      delete this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1][node.key.name]\n      maybeParseFieldValue.call(this, node)\n      this.finishNode(node, \"FieldDefinition\")\n      this.semicolon()\n      return node\n    }\n\n    // Parse public fields\n    parseClassMethod(method, isGenerator, isAsync, _allowsDirectSuper) {\n      if (isGenerator || isAsync || method.kind != \"method\" || method.static || this.options.ecmaVersion < 8 || this.type == tt.parenL) {\n        return super.parseClassMethod.apply(this, arguments)\n      }\n      maybeParseFieldValue.call(this, method)\n      delete method.kind\n      delete method.static\n      method = this.finishNode(method, \"FieldDefinition\")\n      this.semicolon()\n      return method\n    }\n\n    // Parse private element access\n    parseSubscripts(base, startPos, startLoc, noCalls) {\n      for (let computed; ;) {\n        if ((computed = this.eat(tt.bracketL)) || this.eat(tt.dot)) {\n          let node = this.startNodeAt(startPos, startLoc)\n          node.object = base\n          if (computed) {\n            node.property = this.parseExpression()\n          } else if (this.type == privateNameToken) {\n            node.property = parsePrivateName.call(this)\n            if (!this._privateBoundNamesStack.length || !this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1][node.property.name]) {\n              this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1][node.property.name] = node.property.start\n            }\n          } else {\n            node.property = this.parseIdent(true)\n          }\n          node.computed = Boolean(computed)\n          if (computed) this.expect(tt.bracketR)\n          base = this.finishNode(node, \"MemberExpression\")\n        } else {\n          return super.parseSubscripts(base, startPos, startLoc, noCalls)\n        }\n      }\n    }\n\n    // Prohibit delete of private class elements\n    parseMaybeUnary(refDestructuringErrors, sawUnary) {\n      const _return = super.parseMaybeUnary(refDestructuringErrors, sawUnary)\n      if (_return.operator == \"delete\") {\n        if (_return.argument.type == \"MemberExpression\" && _return.argument.property.type == \"PrivateName\") {\n          this.raise(_return.start, \"Private elements may not be deleted\")\n        }\n      }\n      return _return\n    }\n\n    // Prohibit arguments in class field initializers\n    parseIdent(liberal, isBinding) {\n      const ident = super.parseIdent(liberal, isBinding)\n      if (this._inFieldValue && ident.name == \"arguments\") this.raise(ident.start, \"A class field initializer may not contain arguments\")\n      return ident\n    }\n\n    // Prohibit super in class field initializers\n    // FIXME: This is not necessary in acorn >= 6.0.3\n    parseExprAtom(refDestructuringErrors) {\n      const atom = super.parseExprAtom(refDestructuringErrors)\n      if (this._inFieldValue && atom.type == \"Super\") this.raise(atom.start, \"A class field initializer may not contain super\")\n      return atom\n    }\n  }\n}\n","var charToInteger = {};\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nfor (var i = 0; i < chars.length; i++) {\n    charToInteger[chars.charCodeAt(i)] = i;\n}\nfunction decode(mappings) {\n    var generatedCodeColumn = 0; // first field\n    var sourceFileIndex = 0; // second field\n    var sourceCodeLine = 0; // third field\n    var sourceCodeColumn = 0; // fourth field\n    var nameIndex = 0; // fifth field\n    var decoded = [];\n    var line = [];\n    var segment = [];\n    for (var i = 0, j = 0, shift = 0, value = 0, len = mappings.length; i < len; i++) {\n        var c = mappings.charCodeAt(i);\n        if (c === 44) { // \",\"\n            if (segment.length)\n                line.push(new Int32Array(segment));\n            segment = [];\n            j = 0;\n        }\n        else if (c === 59) { // \";\"\n            if (segment.length)\n                line.push(new Int32Array(segment));\n            segment = [];\n            j = 0;\n            decoded.push(line);\n            line = [];\n            generatedCodeColumn = 0;\n        }\n        else {\n            var integer = charToInteger[c];\n            if (integer === undefined) {\n                throw new Error('Invalid character (' + String.fromCharCode(c) + ')');\n            }\n            var hasContinuationBit = integer & 32;\n            integer &= 31;\n            value += integer << shift;\n            if (hasContinuationBit) {\n                shift += 5;\n            }\n            else {\n                var shouldNegate = value & 1;\n                value >>= 1;\n                var num = shouldNegate ? -value : value;\n                if (j == 0) {\n                    generatedCodeColumn += num;\n                    segment.push(generatedCodeColumn);\n                }\n                else if (j === 1) {\n                    sourceFileIndex += num;\n                    segment.push(sourceFileIndex);\n                }\n                else if (j === 2) {\n                    sourceCodeLine += num;\n                    segment.push(sourceCodeLine);\n                }\n                else if (j === 3) {\n                    sourceCodeColumn += num;\n                    segment.push(sourceCodeColumn);\n                }\n                else if (j === 4) {\n                    nameIndex += num;\n                    segment.push(nameIndex);\n                }\n                j++;\n                value = shift = 0; // reset\n            }\n        }\n    }\n    if (segment.length)\n        line.push(new Int32Array(segment));\n    decoded.push(line);\n    return decoded;\n}\nfunction encode(decoded) {\n    var sourceFileIndex = 0; // second field\n    var sourceCodeLine = 0; // third field\n    var sourceCodeColumn = 0; // fourth field\n    var nameIndex = 0; // fifth field\n    var mappings = '';\n    for (var i = 0; i < decoded.length; i++) {\n        var line = decoded[i];\n        if (i > 0)\n            mappings += ';';\n        if (line.length === 0)\n            continue;\n        var generatedCodeColumn = 0; // first field\n        var lineMappings = [];\n        for (var _i = 0, line_1 = line; _i < line_1.length; _i++) {\n            var segment = line_1[_i];\n            var segmentMappings = encodeInteger(segment[0] - generatedCodeColumn);\n            generatedCodeColumn = segment[0];\n            if (segment.length > 1) {\n                segmentMappings +=\n                    encodeInteger(segment[1] - sourceFileIndex) +\n                        encodeInteger(segment[2] - sourceCodeLine) +\n                        encodeInteger(segment[3] - sourceCodeColumn);\n                sourceFileIndex = segment[1];\n                sourceCodeLine = segment[2];\n                sourceCodeColumn = segment[3];\n            }\n            if (segment.length === 5) {\n                segmentMappings += encodeInteger(segment[4] - nameIndex);\n                nameIndex = segment[4];\n            }\n            lineMappings.push(segmentMappings);\n        }\n        mappings += lineMappings.join(',');\n    }\n    return mappings;\n}\nfunction encodeInteger(num) {\n    var result = '';\n    num = num < 0 ? (-num << 1) | 1 : num << 1;\n    do {\n        var clamped = num & 31;\n        num >>= 5;\n        if (num > 0) {\n            clamped |= 32;\n        }\n        result += chars[clamped];\n    } while (num > 0);\n    return result;\n}\n\nexport { decode, encode };\n//# sourceMappingURL=sourcemap-codec.es.js.map\n","import { encode } from 'sourcemap-codec';\n\nvar Chunk = function Chunk(start, end, content) {\n\tthis.start = start;\n\tthis.end = end;\n\tthis.original = content;\n\n\tthis.intro = '';\n\tthis.outro = '';\n\n\tthis.content = content;\n\tthis.storeName = false;\n\tthis.edited = false;\n\n\t// we make these non-enumerable, for sanity while debugging\n\tObject.defineProperties(this, {\n\t\tprevious: { writable: true, value: null },\n\t\tnext:     { writable: true, value: null }\n\t});\n};\n\nChunk.prototype.appendLeft = function appendLeft (content) {\n\tthis.outro += content;\n};\n\nChunk.prototype.appendRight = function appendRight (content) {\n\tthis.intro = this.intro + content;\n};\n\nChunk.prototype.clone = function clone () {\n\tvar chunk = new Chunk(this.start, this.end, this.original);\n\n\tchunk.intro = this.intro;\n\tchunk.outro = this.outro;\n\tchunk.content = this.content;\n\tchunk.storeName = this.storeName;\n\tchunk.edited = this.edited;\n\n\treturn chunk;\n};\n\nChunk.prototype.contains = function contains (index) {\n\treturn this.start < index && index < this.end;\n};\n\nChunk.prototype.eachNext = function eachNext (fn) {\n\tvar chunk = this;\n\twhile (chunk) {\n\t\tfn(chunk);\n\t\tchunk = chunk.next;\n\t}\n};\n\nChunk.prototype.eachPrevious = function eachPrevious (fn) {\n\tvar chunk = this;\n\twhile (chunk) {\n\t\tfn(chunk);\n\t\tchunk = chunk.previous;\n\t}\n};\n\nChunk.prototype.edit = function edit (content, storeName, contentOnly) {\n\tthis.content = content;\n\tif (!contentOnly) {\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\t}\n\tthis.storeName = storeName;\n\n\tthis.edited = true;\n\n\treturn this;\n};\n\nChunk.prototype.prependLeft = function prependLeft (content) {\n\tthis.outro = content + this.outro;\n};\n\nChunk.prototype.prependRight = function prependRight (content) {\n\tthis.intro = content + this.intro;\n};\n\nChunk.prototype.split = function split (index) {\n\tvar sliceIndex = index - this.start;\n\n\tvar originalBefore = this.original.slice(0, sliceIndex);\n\tvar originalAfter = this.original.slice(sliceIndex);\n\n\tthis.original = originalBefore;\n\n\tvar newChunk = new Chunk(index, this.end, originalAfter);\n\tnewChunk.outro = this.outro;\n\tthis.outro = '';\n\n\tthis.end = index;\n\n\tif (this.edited) {\n\t\t// TODO is this block necessary?...\n\t\tnewChunk.edit('', false);\n\t\tthis.content = '';\n\t} else {\n\t\tthis.content = originalBefore;\n\t}\n\n\tnewChunk.next = this.next;\n\tif (newChunk.next) { newChunk.next.previous = newChunk; }\n\tnewChunk.previous = this;\n\tthis.next = newChunk;\n\n\treturn newChunk;\n};\n\nChunk.prototype.toString = function toString () {\n\treturn this.intro + this.content + this.outro;\n};\n\nChunk.prototype.trimEnd = function trimEnd (rx) {\n\tthis.outro = this.outro.replace(rx, '');\n\tif (this.outro.length) { return true; }\n\n\tvar trimmed = this.content.replace(rx, '');\n\n\tif (trimmed.length) {\n\t\tif (trimmed !== this.content) {\n\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\n\t\t}\n\t\treturn true;\n\n\t} else {\n\t\tthis.edit('', undefined, true);\n\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) { return true; }\n\t}\n};\n\nChunk.prototype.trimStart = function trimStart (rx) {\n\tthis.intro = this.intro.replace(rx, '');\n\tif (this.intro.length) { return true; }\n\n\tvar trimmed = this.content.replace(rx, '');\n\n\tif (trimmed.length) {\n\t\tif (trimmed !== this.content) {\n\t\t\tthis.split(this.end - trimmed.length);\n\t\t\tthis.edit('', undefined, true);\n\t\t}\n\t\treturn true;\n\n\t} else {\n\t\tthis.edit('', undefined, true);\n\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) { return true; }\n\t}\n};\n\nvar btoa = function () {\n\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n};\nif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n\tbtoa = function (str) { return window.btoa(unescape(encodeURIComponent(str))); };\n} else if (typeof Buffer === 'function') {\n\tbtoa = function (str) { return Buffer.from(str, 'utf-8').toString('base64'); };\n}\n\nvar SourceMap = function SourceMap(properties) {\n\tthis.version = 3;\n\tthis.file = properties.file;\n\tthis.sources = properties.sources;\n\tthis.sourcesContent = properties.sourcesContent;\n\tthis.names = properties.names;\n\tthis.mappings = encode(properties.mappings);\n};\n\nSourceMap.prototype.toString = function toString () {\n\treturn JSON.stringify(this);\n};\n\nSourceMap.prototype.toUrl = function toUrl () {\n\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\n};\n\nfunction guessIndent(code) {\n\tvar lines = code.split('\\n');\n\n\tvar tabbed = lines.filter(function (line) { return /^\\t+/.test(line); });\n\tvar spaced = lines.filter(function (line) { return /^ {2,}/.test(line); });\n\n\tif (tabbed.length === 0 && spaced.length === 0) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif (tabbed.length >= spaced.length) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tvar min = spaced.reduce(function (previous, current) {\n\t\tvar numSpaces = /^ +/.exec(current)[0].length;\n\t\treturn Math.min(numSpaces, previous);\n\t}, Infinity);\n\n\treturn new Array(min + 1).join(' ');\n}\n\nfunction getRelativePath(from, to) {\n\tvar fromParts = from.split(/[/\\\\]/);\n\tvar toParts = to.split(/[/\\\\]/);\n\n\tfromParts.pop(); // get dirname\n\n\twhile (fromParts[0] === toParts[0]) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif (fromParts.length) {\n\t\tvar i = fromParts.length;\n\t\twhile (i--) { fromParts[i] = '..'; }\n\t}\n\n\treturn fromParts.concat(toParts).join('/');\n}\n\nvar toString = Object.prototype.toString;\n\nfunction isObject(thing) {\n\treturn toString.call(thing) === '[object Object]';\n}\n\nfunction getLocator(source) {\n\tvar originalLines = source.split('\\n');\n\tvar lineOffsets = [];\n\n\tfor (var i = 0, pos = 0; i < originalLines.length; i++) {\n\t\tlineOffsets.push(pos);\n\t\tpos += originalLines[i].length + 1;\n\t}\n\n\treturn function locate(index) {\n\t\tvar i = 0;\n\t\tvar j = lineOffsets.length;\n\t\twhile (i < j) {\n\t\t\tvar m = (i + j) >> 1;\n\t\t\tif (index < lineOffsets[m]) {\n\t\t\t\tj = m;\n\t\t\t} else {\n\t\t\t\ti = m + 1;\n\t\t\t}\n\t\t}\n\t\tvar line = i - 1;\n\t\tvar column = index - lineOffsets[line];\n\t\treturn { line: line, column: column };\n\t};\n}\n\nvar Mappings = function Mappings(hires) {\n\tthis.hires = hires;\n\tthis.generatedCodeLine = 0;\n\tthis.generatedCodeColumn = 0;\n\tthis.raw = [];\n\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\n\tthis.pending = null;\n};\n\nMappings.prototype.addEdit = function addEdit (sourceIndex, content, loc, nameIndex) {\n\tif (content.length) {\n\t\tvar segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\tif (nameIndex >= 0) {\n\t\t\tsegment.push(nameIndex);\n\t\t}\n\t\tthis.rawSegments.push(segment);\n\t} else if (this.pending) {\n\t\tthis.rawSegments.push(this.pending);\n\t}\n\n\tthis.advance(content);\n\tthis.pending = null;\n};\n\nMappings.prototype.addUneditedChunk = function addUneditedChunk (sourceIndex, chunk, original, loc, sourcemapLocations) {\n\tvar originalCharIndex = chunk.start;\n\tvar first = true;\n\n\twhile (originalCharIndex < chunk.end) {\n\t\tif (this.hires || first || sourcemapLocations[originalCharIndex]) {\n\t\t\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\n\t\t}\n\n\t\tif (original[originalCharIndex] === '\\n') {\n\t\t\tloc.line += 1;\n\t\t\tloc.column = 0;\n\t\t\tthis.generatedCodeLine += 1;\n\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\tthis.generatedCodeColumn = 0;\n\t\t} else {\n\t\t\tloc.column += 1;\n\t\t\tthis.generatedCodeColumn += 1;\n\t\t}\n\n\t\toriginalCharIndex += 1;\n\t\tfirst = false;\n\t}\n\n\tthis.pending = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n};\n\nMappings.prototype.advance = function advance (str) {\n\tif (!str) { return; }\n\n\tvar lines = str.split('\\n');\n\n\tif (lines.length > 1) {\n\t\tfor (var i = 0; i < lines.length - 1; i++) {\n\t\t\tthis.generatedCodeLine++;\n\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t}\n\t\tthis.generatedCodeColumn = 0;\n\t}\n\n\tthis.generatedCodeColumn += lines[lines.length - 1].length;\n};\n\nvar n = '\\n';\n\nvar warned = {\n\tinsertLeft: false,\n\tinsertRight: false,\n\tstoreName: false\n};\n\nvar MagicString = function MagicString(string, options) {\n\tif ( options === void 0 ) options = {};\n\n\tvar chunk = new Chunk(0, string.length, string);\n\n\tObject.defineProperties(this, {\n\t\toriginal:              { writable: true, value: string },\n\t\toutro:                 { writable: true, value: '' },\n\t\tintro:                 { writable: true, value: '' },\n\t\tfirstChunk:            { writable: true, value: chunk },\n\t\tlastChunk:             { writable: true, value: chunk },\n\t\tlastSearchedChunk:     { writable: true, value: chunk },\n\t\tbyStart:               { writable: true, value: {} },\n\t\tbyEnd:                 { writable: true, value: {} },\n\t\tfilename:              { writable: true, value: options.filename },\n\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\tsourcemapLocations:    { writable: true, value: {} },\n\t\tstoredNames:           { writable: true, value: {} },\n\t\tindentStr:             { writable: true, value: guessIndent(string) }\n\t});\n\n\tthis.byStart[0] = chunk;\n\tthis.byEnd[string.length] = chunk;\n};\n\nMagicString.prototype.addSourcemapLocation = function addSourcemapLocation (char) {\n\tthis.sourcemapLocations[char] = true;\n};\n\nMagicString.prototype.append = function append (content) {\n\tif (typeof content !== 'string') { throw new TypeError('outro content must be a string'); }\n\n\tthis.outro += content;\n\treturn this;\n};\n\nMagicString.prototype.appendLeft = function appendLeft (index, content) {\n\tif (typeof content !== 'string') { throw new TypeError('inserted content must be a string'); }\n\n\tthis._split(index);\n\n\tvar chunk = this.byEnd[index];\n\n\tif (chunk) {\n\t\tchunk.appendLeft(content);\n\t} else {\n\t\tthis.intro += content;\n\t}\n\treturn this;\n};\n\nMagicString.prototype.appendRight = function appendRight (index, content) {\n\tif (typeof content !== 'string') { throw new TypeError('inserted content must be a string'); }\n\n\tthis._split(index);\n\n\tvar chunk = this.byStart[index];\n\n\tif (chunk) {\n\t\tchunk.appendRight(content);\n\t} else {\n\t\tthis.outro += content;\n\t}\n\treturn this;\n};\n\nMagicString.prototype.clone = function clone () {\n\tvar cloned = new MagicString(this.original, { filename: this.filename });\n\n\tvar originalChunk = this.firstChunk;\n\tvar clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\n\n\twhile (originalChunk) {\n\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\n\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\n\n\t\tvar nextOriginalChunk = originalChunk.next;\n\t\tvar nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\tif (nextClonedChunk) {\n\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\tclonedChunk = nextClonedChunk;\n\t\t}\n\n\t\toriginalChunk = nextOriginalChunk;\n\t}\n\n\tcloned.lastChunk = clonedChunk;\n\n\tif (this.indentExclusionRanges) {\n\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n\t}\n\n\tObject.keys(this.sourcemapLocations).forEach(function (loc) {\n\t\tcloned.sourcemapLocations[loc] = true;\n\t});\n\n\treturn cloned;\n};\n\nMagicString.prototype.generateDecodedMap = function generateDecodedMap (options) {\n\t\tvar this$1 = this;\n\n\toptions = options || {};\n\n\tvar sourceIndex = 0;\n\tvar names = Object.keys(this.storedNames);\n\tvar mappings = new Mappings(options.hires);\n\n\tvar locate = getLocator(this.original);\n\n\tif (this.intro) {\n\t\tmappings.advance(this.intro);\n\t}\n\n\tthis.firstChunk.eachNext(function (chunk) {\n\t\tvar loc = locate(chunk.start);\n\n\t\tif (chunk.intro.length) { mappings.advance(chunk.intro); }\n\n\t\tif (chunk.edited) {\n\t\t\tmappings.addEdit(\n\t\t\t\tsourceIndex,\n\t\t\t\tchunk.content,\n\t\t\t\tloc,\n\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t);\n\t\t} else {\n\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this$1.original, loc, this$1.sourcemapLocations);\n\t\t}\n\n\t\tif (chunk.outro.length) { mappings.advance(chunk.outro); }\n\t});\n\n\treturn {\n\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : null,\n\t\tsources: [options.source ? getRelativePath(options.file || '', options.source) : null],\n\t\tsourcesContent: options.includeContent ? [this.original] : [null],\n\t\tnames: names,\n\t\tmappings: mappings.raw\n\t};\n};\n\nMagicString.prototype.generateMap = function generateMap (options) {\n\treturn new SourceMap(this.generateDecodedMap(options));\n};\n\nMagicString.prototype.getIndentString = function getIndentString () {\n\treturn this.indentStr === null ? '\\t' : this.indentStr;\n};\n\nMagicString.prototype.indent = function indent (indentStr, options) {\n\tvar pattern = /^[^\\r\\n]/gm;\n\n\tif (isObject(indentStr)) {\n\t\toptions = indentStr;\n\t\tindentStr = undefined;\n\t}\n\n\tindentStr = indentStr !== undefined ? indentStr : this.indentStr || '\\t';\n\n\tif (indentStr === '') { return this; } // noop\n\n\toptions = options || {};\n\n\t// Process exclusion ranges\n\tvar isExcluded = {};\n\n\tif (options.exclude) {\n\t\tvar exclusions =\n\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n\t\texclusions.forEach(function (exclusion) {\n\t\t\tfor (var i = exclusion[0]; i < exclusion[1]; i += 1) {\n\t\t\t\tisExcluded[i] = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tvar shouldIndentNextCharacter = options.indentStart !== false;\n\tvar replacer = function (match) {\n\t\tif (shouldIndentNextCharacter) { return (\"\" + indentStr + match); }\n\t\tshouldIndentNextCharacter = true;\n\t\treturn match;\n\t};\n\n\tthis.intro = this.intro.replace(pattern, replacer);\n\n\tvar charIndex = 0;\n\tvar chunk = this.firstChunk;\n\n\twhile (chunk) {\n\t\tvar end = chunk.end;\n\n\t\tif (chunk.edited) {\n\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\n\n\t\t\t\tif (chunk.content.length) {\n\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tcharIndex = chunk.start;\n\n\t\t\twhile (charIndex < end) {\n\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\tvar char = this.original[charIndex];\n\n\t\t\t\t\tif (char === '\\n') {\n\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\n\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\tif (charIndex === chunk.start) {\n\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\n\t\t\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcharIndex += 1;\n\t\t\t}\n\t\t}\n\n\t\tcharIndex = chunk.end;\n\t\tchunk = chunk.next;\n\t}\n\n\tthis.outro = this.outro.replace(pattern, replacer);\n\n\treturn this;\n};\n\nMagicString.prototype.insert = function insert () {\n\tthrow new Error('magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)');\n};\n\nMagicString.prototype.insertLeft = function insertLeft (index, content) {\n\tif (!warned.insertLeft) {\n\t\tconsole.warn('magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'); // eslint-disable-line no-console\n\t\twarned.insertLeft = true;\n\t}\n\n\treturn this.appendLeft(index, content);\n};\n\nMagicString.prototype.insertRight = function insertRight (index, content) {\n\tif (!warned.insertRight) {\n\t\tconsole.warn('magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'); // eslint-disable-line no-console\n\t\twarned.insertRight = true;\n\t}\n\n\treturn this.prependRight(index, content);\n};\n\nMagicString.prototype.move = function move (start, end, index) {\n\tif (index >= start && index <= end) { throw new Error('Cannot move a selection inside itself'); }\n\n\tthis._split(start);\n\tthis._split(end);\n\tthis._split(index);\n\n\tvar first = this.byStart[start];\n\tvar last = this.byEnd[end];\n\n\tvar oldLeft = first.previous;\n\tvar oldRight = last.next;\n\n\tvar newRight = this.byStart[index];\n\tif (!newRight && last === this.lastChunk) { return this; }\n\tvar newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\tif (oldLeft) { oldLeft.next = oldRight; }\n\tif (oldRight) { oldRight.previous = oldLeft; }\n\n\tif (newLeft) { newLeft.next = first; }\n\tif (newRight) { newRight.previous = last; }\n\n\tif (!first.previous) { this.firstChunk = last.next; }\n\tif (!last.next) {\n\t\tthis.lastChunk = first.previous;\n\t\tthis.lastChunk.next = null;\n\t}\n\n\tfirst.previous = newLeft;\n\tlast.next = newRight || null;\n\n\tif (!newLeft) { this.firstChunk = first; }\n\tif (!newRight) { this.lastChunk = last; }\n\treturn this;\n};\n\nMagicString.prototype.overwrite = function overwrite (start, end, content, options) {\n\tif (typeof content !== 'string') { throw new TypeError('replacement content must be a string'); }\n\n\twhile (start < 0) { start += this.original.length; }\n\twhile (end < 0) { end += this.original.length; }\n\n\tif (end > this.original.length) { throw new Error('end is out of bounds'); }\n\tif (start === end)\n\t\t{ throw new Error('Cannot overwrite a zero-length range – use appendLeft or prependRight instead'); }\n\n\tthis._split(start);\n\tthis._split(end);\n\n\tif (options === true) {\n\t\tif (!warned.storeName) {\n\t\t\tconsole.warn('The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'); // eslint-disable-line no-console\n\t\t\twarned.storeName = true;\n\t\t}\n\n\t\toptions = { storeName: true };\n\t}\n\tvar storeName = options !== undefined ? options.storeName : false;\n\tvar contentOnly = options !== undefined ? options.contentOnly : false;\n\n\tif (storeName) {\n\t\tvar original = this.original.slice(start, end);\n\t\tthis.storedNames[original] = true;\n\t}\n\n\tvar first = this.byStart[start];\n\tvar last = this.byEnd[end];\n\n\tif (first) {\n\t\tif (end > first.end && first.next !== this.byStart[first.end]) {\n\t\t\tthrow new Error('Cannot overwrite across a split point');\n\t\t}\n\n\t\tfirst.edit(content, storeName, contentOnly);\n\n\t\tif (first !== last) {\n\t\t\tvar chunk = first.next;\n\t\t\twhile (chunk !== last) {\n\t\t\t\tchunk.edit('', false);\n\t\t\t\tchunk = chunk.next;\n\t\t\t}\n\n\t\t\tchunk.edit('', false);\n\t\t}\n\t} else {\n\t\t// must be inserting at the end\n\t\tvar newChunk = new Chunk(start, end, '').edit(content, storeName);\n\n\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\tlast.next = newChunk;\n\t\tnewChunk.previous = last;\n\t}\n\treturn this;\n};\n\nMagicString.prototype.prepend = function prepend (content) {\n\tif (typeof content !== 'string') { throw new TypeError('outro content must be a string'); }\n\n\tthis.intro = content + this.intro;\n\treturn this;\n};\n\nMagicString.prototype.prependLeft = function prependLeft (index, content) {\n\tif (typeof content !== 'string') { throw new TypeError('inserted content must be a string'); }\n\n\tthis._split(index);\n\n\tvar chunk = this.byEnd[index];\n\n\tif (chunk) {\n\t\tchunk.prependLeft(content);\n\t} else {\n\t\tthis.intro = content + this.intro;\n\t}\n\treturn this;\n};\n\nMagicString.prototype.prependRight = function prependRight (index, content) {\n\tif (typeof content !== 'string') { throw new TypeError('inserted content must be a string'); }\n\n\tthis._split(index);\n\n\tvar chunk = this.byStart[index];\n\n\tif (chunk) {\n\t\tchunk.prependRight(content);\n\t} else {\n\t\tthis.outro = content + this.outro;\n\t}\n\treturn this;\n};\n\nMagicString.prototype.remove = function remove (start, end) {\n\twhile (start < 0) { start += this.original.length; }\n\twhile (end < 0) { end += this.original.length; }\n\n\tif (start === end) { return this; }\n\n\tif (start < 0 || end > this.original.length) { throw new Error('Character is out of bounds'); }\n\tif (start > end) { throw new Error('end must be greater than start'); }\n\n\tthis._split(start);\n\tthis._split(end);\n\n\tvar chunk = this.byStart[start];\n\n\twhile (chunk) {\n\t\tchunk.intro = '';\n\t\tchunk.outro = '';\n\t\tchunk.edit('');\n\n\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t}\n\treturn this;\n};\n\nMagicString.prototype.lastChar = function lastChar () {\n\tif (this.outro.length)\n\t\t{ return this.outro[this.outro.length - 1]; }\n\tvar chunk = this.lastChunk;\n\tdo {\n\t\tif (chunk.outro.length)\n\t\t\t{ return chunk.outro[chunk.outro.length - 1]; }\n\t\tif (chunk.content.length)\n\t\t\t{ return chunk.content[chunk.content.length - 1]; }\n\t\tif (chunk.intro.length)\n\t\t\t{ return chunk.intro[chunk.intro.length - 1]; }\n\t} while (chunk = chunk.previous);\n\tif (this.intro.length)\n\t\t{ return this.intro[this.intro.length - 1]; }\n\treturn '';\n};\n\nMagicString.prototype.lastLine = function lastLine () {\n\tvar lineIndex = this.outro.lastIndexOf(n);\n\tif (lineIndex !== -1)\n\t\t{ return this.outro.substr(lineIndex + 1); }\n\tvar lineStr = this.outro;\n\tvar chunk = this.lastChunk;\n\tdo {\n\t\tif (chunk.outro.length > 0) {\n\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\n\t\t\tif (lineIndex !== -1)\n\t\t\t\t{ return chunk.outro.substr(lineIndex + 1) + lineStr; }\n\t\t\tlineStr = chunk.outro + lineStr;\n\t\t}\n\n\t\tif (chunk.content.length > 0) {\n\t\t\tlineIndex = chunk.content.lastIndexOf(n);\n\t\t\tif (lineIndex !== -1)\n\t\t\t\t{ return chunk.content.substr(lineIndex + 1) + lineStr; }\n\t\t\tlineStr = chunk.content + lineStr;\n\t\t}\n\n\t\tif (chunk.intro.length > 0) {\n\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\n\t\t\tif (lineIndex !== -1)\n\t\t\t\t{ return chunk.intro.substr(lineIndex + 1) + lineStr; }\n\t\t\tlineStr = chunk.intro + lineStr;\n\t\t}\n\t} while (chunk = chunk.previous);\n\tlineIndex = this.intro.lastIndexOf(n);\n\tif (lineIndex !== -1)\n\t\t{ return this.intro.substr(lineIndex + 1) + lineStr; }\n\treturn this.intro + lineStr;\n};\n\nMagicString.prototype.slice = function slice (start, end) {\n\t\tif ( start === void 0 ) start = 0;\n\t\tif ( end === void 0 ) end = this.original.length;\n\n\twhile (start < 0) { start += this.original.length; }\n\twhile (end < 0) { end += this.original.length; }\n\n\tvar result = '';\n\n\t// find start chunk\n\tvar chunk = this.firstChunk;\n\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\n\t\t// found end chunk before start\n\t\tif (chunk.start < end && chunk.end >= end) {\n\t\t\treturn result;\n\t\t}\n\n\t\tchunk = chunk.next;\n\t}\n\n\tif (chunk && chunk.edited && chunk.start !== start)\n\t\t{ throw new Error((\"Cannot use replaced character \" + start + \" as slice start anchor.\")); }\n\n\tvar startChunk = chunk;\n\twhile (chunk) {\n\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n\t\t\tresult += chunk.intro;\n\t\t}\n\n\t\tvar containsEnd = chunk.start < end && chunk.end >= end;\n\t\tif (containsEnd && chunk.edited && chunk.end !== end)\n\t\t\t{ throw new Error((\"Cannot use replaced character \" + end + \" as slice end anchor.\")); }\n\n\t\tvar sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\tvar sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\n\n\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\n\t\t\tresult += chunk.outro;\n\t\t}\n\n\t\tif (containsEnd) {\n\t\t\tbreak;\n\t\t}\n\n\t\tchunk = chunk.next;\n\t}\n\n\treturn result;\n};\n\n// TODO deprecate this? not really very useful\nMagicString.prototype.snip = function snip (start, end) {\n\tvar clone = this.clone();\n\tclone.remove(0, start);\n\tclone.remove(end, clone.original.length);\n\n\treturn clone;\n};\n\nMagicString.prototype._split = function _split (index) {\n\tif (this.byStart[index] || this.byEnd[index]) { return; }\n\n\tvar chunk = this.lastSearchedChunk;\n\tvar searchForward = index > chunk.end;\n\n\twhile (chunk) {\n\t\tif (chunk.contains(index)) { return this._splitChunk(chunk, index); }\n\n\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n\t}\n};\n\nMagicString.prototype._splitChunk = function _splitChunk (chunk, index) {\n\tif (chunk.edited && chunk.content.length) {\n\t\t// zero-length edited chunks are a special case (overlapping replacements)\n\t\tvar loc = getLocator(this.original)(index);\n\t\tthrow new Error(\n\t\t\t(\"Cannot split a chunk that has already been edited (\" + (loc.line) + \":\" + (loc.column) + \" – \\\"\" + (chunk.original) + \"\\\")\")\n\t\t);\n\t}\n\n\tvar newChunk = chunk.split(index);\n\n\tthis.byEnd[index] = chunk;\n\tthis.byStart[index] = newChunk;\n\tthis.byEnd[newChunk.end] = newChunk;\n\n\tif (chunk === this.lastChunk) { this.lastChunk = newChunk; }\n\n\tthis.lastSearchedChunk = chunk;\n\treturn true;\n};\n\nMagicString.prototype.toString = function toString () {\n\tvar str = this.intro;\n\n\tvar chunk = this.firstChunk;\n\twhile (chunk) {\n\t\tstr += chunk.toString();\n\t\tchunk = chunk.next;\n\t}\n\n\treturn str + this.outro;\n};\n\nMagicString.prototype.isEmpty = function isEmpty () {\n\tvar chunk = this.firstChunk;\n\tdo {\n\t\tif (chunk.intro.length && chunk.intro.trim() ||\n\t\t\t\tchunk.content.length && chunk.content.trim() ||\n\t\t\t\tchunk.outro.length && chunk.outro.trim())\n\t\t\t{ return false; }\n\t} while (chunk = chunk.next);\n\treturn true;\n};\n\nMagicString.prototype.length = function length () {\n\tvar chunk = this.firstChunk;\n\tvar length = 0;\n\tdo {\n\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\n\t} while (chunk = chunk.next);\n\treturn length;\n};\n\nMagicString.prototype.trimLines = function trimLines () {\n\treturn this.trim('[\\\\r\\\\n]');\n};\n\nMagicString.prototype.trim = function trim (charType) {\n\treturn this.trimStart(charType).trimEnd(charType);\n};\n\nMagicString.prototype.trimEndAborted = function trimEndAborted (charType) {\n\tvar rx = new RegExp((charType || '\\\\s') + '+$');\n\n\tthis.outro = this.outro.replace(rx, '');\n\tif (this.outro.length) { return true; }\n\n\tvar chunk = this.lastChunk;\n\n\tdo {\n\t\tvar end = chunk.end;\n\t\tvar aborted = chunk.trimEnd(rx);\n\n\t\t// if chunk was trimmed, we have a new lastChunk\n\t\tif (chunk.end !== end) {\n\t\t\tif (this.lastChunk === chunk) {\n\t\t\t\tthis.lastChunk = chunk.next;\n\t\t\t}\n\n\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t}\n\n\t\tif (aborted) { return true; }\n\t\tchunk = chunk.previous;\n\t} while (chunk);\n\n\treturn false;\n};\n\nMagicString.prototype.trimEnd = function trimEnd (charType) {\n\tthis.trimEndAborted(charType);\n\treturn this;\n};\nMagicString.prototype.trimStartAborted = function trimStartAborted (charType) {\n\tvar rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\n\tthis.intro = this.intro.replace(rx, '');\n\tif (this.intro.length) { return true; }\n\n\tvar chunk = this.firstChunk;\n\n\tdo {\n\t\tvar end = chunk.end;\n\t\tvar aborted = chunk.trimStart(rx);\n\n\t\tif (chunk.end !== end) {\n\t\t\t// special case...\n\t\t\tif (chunk === this.lastChunk) { this.lastChunk = chunk.next; }\n\n\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t}\n\n\t\tif (aborted) { return true; }\n\t\tchunk = chunk.next;\n\t} while (chunk);\n\n\treturn false;\n};\n\nMagicString.prototype.trimStart = function trimStart (charType) {\n\tthis.trimStartAborted(charType);\n\treturn this;\n};\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\n\nvar Bundle = function Bundle(options) {\n\tif ( options === void 0 ) options = {};\n\n\tthis.intro = options.intro || '';\n\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\tthis.sources = [];\n\tthis.uniqueSources = [];\n\tthis.uniqueSourceIndexByFilename = {};\n};\n\nBundle.prototype.addSource = function addSource (source) {\n\tif (source instanceof MagicString) {\n\t\treturn this.addSource({\n\t\t\tcontent: source,\n\t\t\tfilename: source.filename,\n\t\t\tseparator: this.separator\n\t\t});\n\t}\n\n\tif (!isObject(source) || !source.content) {\n\t\tthrow new Error('bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`');\n\t}\n\n\t['filename', 'indentExclusionRanges', 'separator'].forEach(function (option) {\n\t\tif (!hasOwnProp.call(source, option)) { source[option] = source.content[option]; }\n\t});\n\n\tif (source.separator === undefined) {\n\t\t// TODO there's a bunch of this sort of thing, needs cleaning up\n\t\tsource.separator = this.separator;\n\t}\n\n\tif (source.filename) {\n\t\tif (!hasOwnProp.call(this.uniqueSourceIndexByFilename, source.filename)) {\n\t\t\tthis.uniqueSourceIndexByFilename[source.filename] = this.uniqueSources.length;\n\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t} else {\n\t\t\tvar uniqueSource = this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];\n\t\t\tif (source.content.original !== uniqueSource.content) {\n\t\t\t\tthrow new Error((\"Illegal source: same filename (\" + (source.filename) + \"), different contents\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.sources.push(source);\n\treturn this;\n};\n\nBundle.prototype.append = function append (str, options) {\n\tthis.addSource({\n\t\tcontent: new MagicString(str),\n\t\tseparator: (options && options.separator) || ''\n\t});\n\n\treturn this;\n};\n\nBundle.prototype.clone = function clone () {\n\tvar bundle = new Bundle({\n\t\tintro: this.intro,\n\t\tseparator: this.separator\n\t});\n\n\tthis.sources.forEach(function (source) {\n\t\tbundle.addSource({\n\t\t\tfilename: source.filename,\n\t\t\tcontent: source.content.clone(),\n\t\t\tseparator: source.separator\n\t\t});\n\t});\n\n\treturn bundle;\n};\n\nBundle.prototype.generateDecodedMap = function generateDecodedMap (options) {\n\t\tvar this$1 = this;\n\t\tif ( options === void 0 ) options = {};\n\n\tvar names = [];\n\tthis.sources.forEach(function (source) {\n\t\tObject.keys(source.content.storedNames).forEach(function (name) {\n\t\t\tif (!~names.indexOf(name)) { names.push(name); }\n\t\t});\n\t});\n\n\tvar mappings = new Mappings(options.hires);\n\n\tif (this.intro) {\n\t\tmappings.advance(this.intro);\n\t}\n\n\tthis.sources.forEach(function (source, i) {\n\t\tif (i > 0) {\n\t\t\tmappings.advance(this$1.separator);\n\t\t}\n\n\t\tvar sourceIndex = source.filename ? this$1.uniqueSourceIndexByFilename[source.filename] : -1;\n\t\tvar magicString = source.content;\n\t\tvar locate = getLocator(magicString.original);\n\n\t\tif (magicString.intro) {\n\t\t\tmappings.advance(magicString.intro);\n\t\t}\n\n\t\tmagicString.firstChunk.eachNext(function (chunk) {\n\t\t\tvar loc = locate(chunk.start);\n\n\t\t\tif (chunk.intro.length) { mappings.advance(chunk.intro); }\n\n\t\t\tif (source.filename) {\n\t\t\t\tif (chunk.edited) {\n\t\t\t\t\tmappings.addEdit(\n\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\tchunk.content,\n\t\t\t\t\t\tloc,\n\t\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tmappings.addUneditedChunk(\n\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tmagicString.original,\n\t\t\t\t\t\tloc,\n\t\t\t\t\t\tmagicString.sourcemapLocations\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmappings.advance(chunk.content);\n\t\t\t}\n\n\t\t\tif (chunk.outro.length) { mappings.advance(chunk.outro); }\n\t\t});\n\n\t\tif (magicString.outro) {\n\t\t\tmappings.advance(magicString.outro);\n\t\t}\n\t});\n\n\treturn {\n\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : null,\n\t\tsources: this.uniqueSources.map(function (source) {\n\t\t\treturn options.file ? getRelativePath(options.file, source.filename) : source.filename;\n\t\t}),\n\t\tsourcesContent: this.uniqueSources.map(function (source) {\n\t\t\treturn options.includeContent ? source.content : null;\n\t\t}),\n\t\tnames: names,\n\t\tmappings: mappings.raw\n\t};\n};\n\nBundle.prototype.generateMap = function generateMap (options) {\n\treturn new SourceMap(this.generateDecodedMap(options));\n};\n\nBundle.prototype.getIndentString = function getIndentString () {\n\tvar indentStringCounts = {};\n\n\tthis.sources.forEach(function (source) {\n\t\tvar indentStr = source.content.indentStr;\n\n\t\tif (indentStr === null) { return; }\n\n\t\tif (!indentStringCounts[indentStr]) { indentStringCounts[indentStr] = 0; }\n\t\tindentStringCounts[indentStr] += 1;\n\t});\n\n\treturn (\n\t\tObject.keys(indentStringCounts).sort(function (a, b) {\n\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t})[0] || '\\t'\n\t);\n};\n\nBundle.prototype.indent = function indent (indentStr) {\n\t\tvar this$1 = this;\n\n\tif (!arguments.length) {\n\t\tindentStr = this.getIndentString();\n\t}\n\n\tif (indentStr === '') { return this; } // noop\n\n\tvar trailingNewline = !this.intro || this.intro.slice(-1) === '\\n';\n\n\tthis.sources.forEach(function (source, i) {\n\t\tvar separator = source.separator !== undefined ? source.separator : this$1.separator;\n\t\tvar indentStart = trailingNewline || (i > 0 && /\\r?\\n$/.test(separator));\n\n\t\tsource.content.indent(indentStr, {\n\t\t\texclude: source.indentExclusionRanges,\n\t\t\tindentStart: indentStart //: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t});\n\n\t\ttrailingNewline = source.content.lastChar() === '\\n';\n\t});\n\n\tif (this.intro) {\n\t\tthis.intro =\n\t\t\tindentStr +\n\t\t\tthis.intro.replace(/^[^\\n]/gm, function (match, index) {\n\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t});\n\t}\n\n\treturn this;\n};\n\nBundle.prototype.prepend = function prepend (str) {\n\tthis.intro = str + this.intro;\n\treturn this;\n};\n\nBundle.prototype.toString = function toString () {\n\t\tvar this$1 = this;\n\n\tvar body = this.sources\n\t\t.map(function (source, i) {\n\t\t\tvar separator = source.separator !== undefined ? source.separator : this$1.separator;\n\t\t\tvar str = (i > 0 ? separator : '') + source.content.toString();\n\n\t\t\treturn str;\n\t\t})\n\t\t.join('');\n\n\treturn this.intro + body;\n};\n\nBundle.prototype.isEmpty = function isEmpty () {\n\tif (this.intro.length && this.intro.trim())\n\t\t{ return false; }\n\tif (this.sources.some(function (source) { return !source.content.isEmpty(); }))\n\t\t{ return false; }\n\treturn true;\n};\n\nBundle.prototype.length = function length () {\n\treturn this.sources.reduce(function (length, source) { return length + source.content.length(); }, this.intro.length);\n};\n\nBundle.prototype.trimLines = function trimLines () {\n\treturn this.trim('[\\\\r\\\\n]');\n};\n\nBundle.prototype.trim = function trim (charType) {\n\treturn this.trimStart(charType).trimEnd(charType);\n};\n\nBundle.prototype.trimStart = function trimStart (charType) {\n\tvar rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\tthis.intro = this.intro.replace(rx, '');\n\n\tif (!this.intro) {\n\t\tvar source;\n\t\tvar i = 0;\n\n\t\tdo {\n\t\t\tsource = this.sources[i++];\n\t\t\tif (!source) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (!source.content.trimStartAborted(charType));\n\t}\n\n\treturn this;\n};\n\nBundle.prototype.trimEnd = function trimEnd (charType) {\n\tvar rx = new RegExp((charType || '\\\\s') + '+$');\n\n\tvar source;\n\tvar i = this.sources.length - 1;\n\n\tdo {\n\t\tsource = this.sources[i--];\n\t\tif (!source) {\n\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\tbreak;\n\t\t}\n\t} while (!source.content.trimEndAborted(charType));\n\n\treturn this;\n};\n\nexport default MagicString;\nexport { Bundle, SourceMap };\n//# sourceMappingURL=magic-string.es.js.map\n","// used for debugging, without the noise created by\n// circular references\nfunction toJSON(node) {\n\tconst obj = {};\n\n\tObject.keys(node).forEach(key => {\n\t\tif (\n\t\t\tkey === 'parent' ||\n\t\t\tkey === 'program' ||\n\t\t\tkey === 'keys' ||\n\t\t\tkey === '__wrapped'\n\t\t)\n\t\t\treturn;\n\n\t\tif (Array.isArray(node[key])) {\n\t\t\tobj[key] = node[key].map(toJSON);\n\t\t} else if (node[key] && node[key].toJSON) {\n\t\t\tobj[key] = node[key].toJSON();\n\t\t} else {\n\t\t\tobj[key] = node[key];\n\t\t}\n\t});\n\n\treturn obj;\n}\n\nexport default class Node {\n\tancestor(level) {\n\t\tlet node = this;\n\t\twhile (level--) {\n\t\t\tnode = node.parent;\n\t\t\tif (!node) return null;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tcontains(node) {\n\t\twhile (node) {\n\t\t\tif (node === this) return true;\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfindLexicalBoundary() {\n\t\treturn this.parent.findLexicalBoundary();\n\t}\n\n\tfindNearest(type) {\n\t\tif (typeof type === 'string') type = new RegExp(`^${type}$`);\n\t\tif (type.test(this.type)) return this;\n\t\treturn this.parent.findNearest(type);\n\t}\n\n\tunparenthesizedParent() {\n\t\tlet node = this.parent;\n\t\twhile (node && node.type === 'ParenthesizedExpression') {\n\t\t\tnode = node.parent;\n\t\t}\n\t\treturn node;\n\t}\n\n\tunparenthesize() {\n\t\tlet node = this;\n\t\twhile (node.type === 'ParenthesizedExpression') {\n\t\t\tnode = node.expression;\n\t\t}\n\t\treturn node;\n\t}\n\n\tfindScope(functionScope) {\n\t\treturn this.parent.findScope(functionScope);\n\t}\n\n\tgetIndentation() {\n\t\treturn this.parent.getIndentation();\n\t}\n\n\tinitialise(transforms) {\n\t\tfor (const key of this.keys) {\n\t\t\tconst value = this[key];\n\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tvalue.forEach(node => node && node.initialise(transforms));\n\t\t\t} else if (value && typeof value === 'object') {\n\t\t\t\tvalue.initialise(transforms);\n\t\t\t}\n\t\t}\n\t}\n\n\ttoJSON() {\n\t\treturn toJSON(this);\n\t}\n\n\ttoString() {\n\t\treturn this.program.magicString.original.slice(this.start, this.end);\n\t}\n\n\ttranspile(code, transforms) {\n\t\tfor (const key of this.keys) {\n\t\t\tconst value = this[key];\n\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tvalue.forEach(node => node && node.transpile(code, transforms));\n\t\t\t} else if (value && typeof value === 'object') {\n\t\t\t\tvalue.transpile(code, transforms);\n\t\t\t}\n\t\t}\n\t}\n}\n","export default function extractNames(node) {\n\tconst names = [];\n\textractors[node.type](names, node);\n\treturn names;\n}\n\nconst extractors = {\n\tIdentifier(names, node) {\n\t\tnames.push(node);\n\t},\n\n\tObjectPattern(names, node) {\n\t\tfor (const prop of node.properties) {\n\t\t\textractors[prop.type](names, prop);\n\t\t}\n\t},\n\n\tProperty(names, node) {\n\t\textractors[node.value.type](names, node.value);\n\t},\n\n\tArrayPattern(names, node) {\n\t\tfor (const element of node.elements) {\n\t\t\tif (element) extractors[element.type](names, element);\n\t\t}\n\t},\n\n\tRestElement(names, node) {\n\t\textractors[node.argument.type](names, node.argument);\n\t},\n\n\tAssignmentPattern(names, node) {\n\t\textractors[node.left.type](names, node.left);\n\t}\n};\n","const reserved = Object.create(null);\n'do if in for let new try var case else enum eval null this true void with await break catch class const false super throw while yield delete export import public return static switch typeof default extends finally package private continue debugger function arguments interface protected implements instanceof'\n\t.split(' ')\n\t.forEach(word => (reserved[word] = true));\n\nexport default reserved;\n","import extractNames from './extractNames.js';\nimport reserved from '../utils/reserved.js';\n\nexport default function Scope(options) {\n\toptions = options || {};\n\n\tthis.parent = options.parent;\n\tthis.isBlockScope = !!options.block;\n\tthis.createDeclarationCallback = options.declare;\n\n\tlet scope = this;\n\twhile (scope.isBlockScope) scope = scope.parent;\n\tthis.functionScope = scope;\n\n\tthis.identifiers = [];\n\tthis.declarations = Object.create(null);\n\tthis.references = Object.create(null);\n\tthis.blockScopedDeclarations = this.isBlockScope ? null : Object.create(null);\n\tthis.aliases = Object.create(null);\n}\n\nScope.prototype = {\n\taddDeclaration(node, kind) {\n\t\tfor (const identifier of extractNames(node)) {\n\t\t\tconst name = identifier.name;\n\n\t\t\tconst declaration = { name, node: identifier, kind, instances: [] };\n\t\t\tthis.declarations[name] = declaration;\n\n\t\t\tif (this.isBlockScope) {\n\t\t\t\tif (!this.functionScope.blockScopedDeclarations[name])\n\t\t\t\t\tthis.functionScope.blockScopedDeclarations[name] = [];\n\t\t\t\tthis.functionScope.blockScopedDeclarations[name].push(declaration);\n\t\t\t}\n\t\t}\n\t},\n\n\taddReference(identifier) {\n\t\tif (this.consolidated) {\n\t\t\tthis.consolidateReference(identifier);\n\t\t} else {\n\t\t\tthis.identifiers.push(identifier);\n\t\t}\n\t},\n\n\tconsolidate() {\n\t\tfor (let i = 0; i < this.identifiers.length; i += 1) {\n\t\t\t// we might push to the array during consolidation, so don't cache length\n\t\t\tconst identifier = this.identifiers[i];\n\t\t\tthis.consolidateReference(identifier);\n\t\t}\n\n\t\tthis.consolidated = true; // TODO understand why this is necessary... seems bad\n\t},\n\n\tconsolidateReference(identifier) {\n\t\tconst declaration = this.declarations[identifier.name];\n\t\tif (declaration) {\n\t\t\tdeclaration.instances.push(identifier);\n\t\t} else {\n\t\t\tthis.references[identifier.name] = true;\n\t\t\tif (this.parent) this.parent.addReference(identifier);\n\t\t}\n\t},\n\n\tcontains(name) {\n\t\treturn (\n\t\t\tthis.declarations[name] ||\n\t\t\t(this.parent ? this.parent.contains(name) : false)\n\t\t);\n\t},\n\n\tcreateIdentifier(base) {\n\t\tif (typeof base === 'number') base = base.toString();\n\n\t\tbase = base\n\t\t\t.replace(/\\s/g, '')\n\t\t\t.replace(/\\[([^\\]]+)\\]/g, '_$1')\n\t\t\t.replace(/[^a-zA-Z0-9_$]/g, '_')\n\t\t\t.replace(/_{2,}/, '_');\n\n\t\tlet name = base;\n\t\tlet counter = 1;\n\n\t\twhile (\n\t\t\tthis.declarations[name] ||\n\t\t\tthis.references[name] ||\n\t\t\tthis.aliases[name] ||\n\t\t\tname in reserved\n\t\t) {\n\t\t\tname = `${base}$${counter++}`;\n\t\t}\n\n\t\tthis.aliases[name] = true;\n\t\treturn name;\n\t},\n\n\tcreateDeclaration(base) {\n\t\tconst id = this.createIdentifier(base);\n\t\tthis.createDeclarationCallback(id);\n\t\treturn id;\n\t},\n\n\tfindDeclaration(name) {\n\t\treturn (\n\t\t\tthis.declarations[name] ||\n\t\t\t(this.parent && this.parent.findDeclaration(name))\n\t\t);\n\t},\n\n\t// Sometimes, block scope declarations change name during transpilation\n\tresolveName(name) {\n\t\tconst declaration = this.findDeclaration(name);\n\t\treturn declaration ? declaration.name : name;\n\t}\n};\n","export default function locate(source, index) {\n\tconst lines = source.split('\\n');\n\tconst len = lines.length;\n\n\tlet lineStart = 0;\n\tlet i;\n\n\tfor (i = 0; i < len; i += 1) {\n\t\tconst line = lines[i];\n\t\tconst lineEnd = lineStart + line.length + 1; // +1 for newline\n\n\t\tif (lineEnd > index) {\n\t\t\treturn { line: i + 1, column: index - lineStart, char: i };\n\t\t}\n\n\t\tlineStart = lineEnd;\n\t}\n\n\tthrow new Error('Could not determine location of character');\n}\n","function pad(num, len) {\n\tconst result = String(num);\n\treturn result + repeat(' ', len - result.length);\n}\n\nfunction repeat(str, times) {\n\tlet result = '';\n\twhile (times--) result += str;\n\treturn result;\n}\n\nexport default function getSnippet(source, loc, length = 1) {\n\tconst first = Math.max(loc.line - 5, 0);\n\tconst last = loc.line;\n\n\tconst numDigits = String(last).length;\n\n\tconst lines = source.split('\\n').slice(first, last);\n\n\tconst lastLine = lines[lines.length - 1];\n\tconst offset = lastLine.slice(0, loc.column).replace(/\\t/g, '  ').length;\n\n\tlet snippet = lines\n\t\t.map((line, i) => `${pad(i + first + 1, numDigits)} : ${line.replace(/\\t/g, '  ')}`)\n\t\t.join('\\n');\n\n\tsnippet += '\\n' + repeat(' ', numDigits + 3 + offset) + repeat('^', length);\n\n\treturn snippet;\n}\n","import locate from './locate.js';\nimport getSnippet from './getSnippet.js';\n\nexport default class CompileError extends Error {\n\tconstructor(message, node) {\n\t\tsuper(message);\n\n\t\tthis.name = 'CompileError';\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst source = node.program.magicString.original;\n\t\tconst loc = locate(source, node.start);\n\n\t\tthis.message = message + ` (${loc.line}:${loc.column})`;\n\n\t\tthis.stack = new Error().stack.replace(\n\t\t\tnew RegExp(`.+new ${this.name}.+\\\\n`, 'm'),\n\t\t\t''\n\t\t);\n\n\t\tthis.loc = loc;\n\t\tthis.snippet = getSnippet(source, loc, node.end - node.start);\n\t}\n\n\ttoString() {\n\t\treturn `${this.name}: ${this.message}\\n${this.snippet}`;\n\t}\n\n\tstatic missingTransform(feature, transformKey, node, dangerousKey = null) {\n\t\tconst maybeDangerous = dangerousKey ? `, or \\`transforms: { ${dangerousKey}: true }\\` if you know what you're doing` : '';\n\t\tthrow new CompileError(`Transforming ${feature} is not ${dangerousKey ? \"fully supported\" : \"implemented\"}. Use \\`transforms: { ${transformKey}: false }\\` to skip transformation and disable this error${maybeDangerous}.`, node);\n\t}\n}\n","export function findIndex(array, fn) {\n\tfor (let i = 0; i < array.length; i += 1) {\n\t\tif (fn(array[i], i)) return i;\n\t}\n\n\treturn -1;\n}\n\nexport function find(array, fn) {\n\treturn array[findIndex(array, fn)];\n}\n","import CompileError from '../utils/CompileError.js';\nimport { findIndex } from './array.js';\n\nconst handlers = {\n\tIdentifier: destructureIdentifier,\n\tAssignmentPattern: destructureAssignmentPattern,\n\tArrayPattern: destructureArrayPattern,\n\tObjectPattern: destructureObjectPattern\n};\n\nexport default function destructure(\n\tcode,\n\tcreateIdentifier,\n\tresolveName,\n\tnode,\n\tref,\n\tinline,\n\tstatementGenerators\n) {\n\thandlers[node.type](code, createIdentifier, resolveName, node, ref, inline, statementGenerators);\n}\n\nfunction destructureIdentifier(\n\tcode,\n\tcreateIdentifier,\n\tresolveName,\n\tnode,\n\tref,\n\tinline,\n\tstatementGenerators\n) {\n\tstatementGenerators.push((start, prefix, suffix) => {\n\t\tcode.overwrite(node.start, node.end, (inline ? prefix : `${prefix}var `) + resolveName(node) + ` = ${ref}${suffix}`);\n\t\tcode.move(node.start, node.end, start);\n\t});\n}\n\nfunction destructureMemberExpression(\n\tcode,\n\tcreateIdentifier,\n\tresolveName,\n\tnode,\n\tref,\n\tinline,\n\tstatementGenerators\n) {\n\tstatementGenerators.push((start, prefix, suffix) => {\n\t\tcode.prependRight(node.start, inline ? prefix : `${prefix}var `);\n\t\tcode.appendLeft(node.end, ` = ${ref}${suffix}`);\n\t\tcode.move(node.start, node.end, start);\n\t});\n}\n\nfunction destructureAssignmentPattern(\n\tcode,\n\tcreateIdentifier,\n\tresolveName,\n\tnode,\n\tref,\n\tinline,\n\tstatementGenerators\n) {\n\tconst isIdentifier = node.left.type === 'Identifier';\n\tconst name = isIdentifier ? node.left.name : ref;\n\n\tif (!inline) {\n\t\tstatementGenerators.push((start, prefix, suffix) => {\n\t\t\tcode.prependRight(\n\t\t\t\tnode.left.end,\n\t\t\t\t`${prefix}if ( ${name} === void 0 ) ${name}`\n\t\t\t);\n\t\t\tcode.move(node.left.end, node.right.end, start);\n\t\t\tcode.appendLeft(node.right.end, suffix);\n\t\t});\n\t}\n\n\tif (!isIdentifier) {\n\t\tdestructure(code, createIdentifier, resolveName, node.left, ref, inline, statementGenerators);\n\t}\n}\n\nfunction destructureArrayPattern(\n\tcode,\n\tcreateIdentifier,\n\tresolveName,\n\tnode,\n\tref,\n\tinline,\n\tstatementGenerators\n) {\n\tlet c = node.start;\n\n\tnode.elements.forEach((element, i) => {\n\t\tif (!element) return;\n\n\t\tif (element.type === 'RestElement') {\n\t\t\thandleProperty(\n\t\t\t\tcode,\n\t\t\t\tcreateIdentifier,\n\t\t\t\tresolveName,\n\t\t\t\tc,\n\t\t\t\telement.argument,\n\t\t\t\t`${ref}.slice(${i})`,\n\t\t\t\tinline,\n\t\t\t\tstatementGenerators\n\t\t\t);\n\t\t} else {\n\t\t\thandleProperty(\n\t\t\t\tcode,\n\t\t\t\tcreateIdentifier,\n\t\t\t\tresolveName,\n\t\t\t\tc,\n\t\t\t\telement,\n\t\t\t\t`${ref}[${i}]`,\n\t\t\t\tinline,\n\t\t\t\tstatementGenerators\n\t\t\t);\n\t\t}\n\t\tc = element.end;\n\t});\n\n\tcode.remove(c, node.end);\n}\n\nfunction destructureObjectPattern(\n\tcode,\n\tcreateIdentifier,\n\tresolveName,\n\tnode,\n\tref,\n\tinline,\n\tstatementGenerators\n) {\n\tlet c = node.start;\n\n\tconst nonRestKeys = [];\n\tnode.properties.forEach(prop => {\n\t\tlet value;\n\t\tlet content;\n\t\tif (prop.type === 'Property') {\n\t\t\tcontent = prop.value;\n\t\t\tif (!prop.computed && prop.key.type === 'Identifier') {\n\t\t\t\tvalue = `${ref}.${prop.key.name}`;\n\t\t\t\tnonRestKeys.push(`\"${prop.key.name}\"`);\n\t\t\t} else if (!prop.computed && prop.key.type === 'Literal') {\n\t\t\t\tvalue = `${ref}[${prop.key.raw}]`;\n\t\t\t\tnonRestKeys.push(JSON.stringify(String(prop.key.value)));\n\t\t\t} else {\n\t\t\t\tconst expr = code.slice(prop.key.start, prop.key.end);\n\t\t\t\tvalue = `${ref}[${expr}]`;\n\t\t\t\tnonRestKeys.push(`String(${expr})`);\n\t\t\t}\n\t\t} else if (prop.type === 'RestElement') {\n\t\t\tcontent = prop.argument;\n\t\t\tvalue = createIdentifier('rest');\n\t\t\tstatementGenerators.push((start, prefix, suffix) => {\n\t\t\t\tconst helper = prop.program.getObjectWithoutPropertiesHelper(code);\n\t\t\t\tcode.overwrite(\n\t\t\t\t\tprop.start,\n\t\t\t\t\t(c = prop.argument.start),\n\t\t\t\t\t(inline ? prefix : `${prefix}var `) + `${value} = ${helper}( ${ref}, [${nonRestKeys.join(', ')}] )${suffix}`\n\t\t\t\t);\n\t\t\t\tcode.move(prop.start, c, start);\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new CompileError(\n\t\t\t\tthis,\n\t\t\t\t`Unexpected node of type ${prop.type} in object pattern`\n\t\t\t);\n\t\t}\n\t\thandleProperty(code, createIdentifier, resolveName, c, content, value, inline, statementGenerators);\n\t\tc = prop.end;\n\t});\n\n\tcode.remove(c, node.end);\n}\n\nfunction handleProperty(\n\tcode,\n\tcreateIdentifier,\n\tresolveName,\n\tc,\n\tnode,\n\tvalue,\n\tinline,\n\tstatementGenerators\n) {\n\tswitch (node.type) {\n\t\tcase 'Identifier': {\n\t\t\tcode.remove(c, node.start);\n\t\t\tdestructureIdentifier(\n\t\t\t\tcode,\n\t\t\t\tcreateIdentifier,\n\t\t\t\tresolveName,\n\t\t\t\tnode,\n\t\t\t\tvalue,\n\t\t\t\tinline,\n\t\t\t\tstatementGenerators\n\t\t\t);\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'MemberExpression':\n\t\t\tcode.remove(c, node.start);\n\t\t\tdestructureMemberExpression(\n\t\t\t\tcode,\n\t\t\t\tcreateIdentifier,\n\t\t\t\tresolveName,\n\t\t\t\tnode,\n\t\t\t\tvalue,\n\t\t\t\ttrue,\n\t\t\t\tstatementGenerators\n\t\t\t);\n\t\t\tbreak;\n\n\t\tcase 'AssignmentPattern': {\n\t\t\tlet name;\n\n\t\t\tconst isIdentifier = node.left.type === 'Identifier';\n\n\t\t\tif (isIdentifier) {\n\t\t\t\tname = resolveName(node.left);\n\t\t\t} else {\n\t\t\t\tname = createIdentifier(value);\n\t\t\t}\n\n\t\t\tstatementGenerators.push((start, prefix, suffix) => {\n\t\t\t\tif (inline) {\n\t\t\t\t\tcode.prependRight(\n\t\t\t\t\t\tnode.right.start,\n\t\t\t\t\t\t`${name} = ${value}, ${name} = ${name} === void 0 ? `\n\t\t\t\t\t);\n\t\t\t\t\tcode.appendLeft(node.right.end, ` : ${name}${suffix}`);\n\t\t\t\t} else {\n\t\t\t\t\tcode.prependRight(\n\t\t\t\t\t\tnode.right.start,\n\t\t\t\t\t\t`${prefix}var ${name} = ${value}; if ( ${name} === void 0 ) ${name} = `\n\t\t\t\t\t);\n\t\t\t\t\tcode.appendLeft(node.right.end, suffix);\n\t\t\t\t}\n\n\t\t\t\tcode.move(node.right.start, node.right.end, start);\n\t\t\t});\n\n\t\t\tif (isIdentifier) {\n\t\t\t\tcode.remove(c, node.right.start);\n\t\t\t} else {\n\t\t\t\tcode.remove(c, node.left.start);\n\t\t\t\tcode.remove(node.left.end, node.right.start);\n\t\t\t\thandleProperty(\n\t\t\t\t\tcode,\n\t\t\t\t\tcreateIdentifier,\n\t\t\t\t\tresolveName,\n\t\t\t\t\tc,\n\t\t\t\t\tnode.left,\n\t\t\t\t\tname,\n\t\t\t\t\tinline,\n\t\t\t\t\tstatementGenerators\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'ObjectPattern': {\n\t\t\tcode.remove(c, (c = node.start));\n\n\t\t\tlet ref = value;\n\t\t\tif (node.properties.length > 1) {\n\t\t\t\tref = createIdentifier(value);\n\n\t\t\t\tstatementGenerators.push((start, prefix, suffix) => {\n\t\t\t\t\t// this feels a tiny bit hacky, but we can't do a\n\t\t\t\t\t// straightforward appendLeft and keep correct order...\n\t\t\t\t\tcode.prependRight(node.start, (inline ? '' : `${prefix}var `) + `${ref} = `);\n\t\t\t\t\tcode.overwrite(node.start, (c = node.start + 1), value);\n\t\t\t\t\tcode.appendLeft(c, suffix);\n\n\t\t\t\t\tcode.overwrite(\n\t\t\t\t\t\tnode.start,\n\t\t\t\t\t\t(c = node.start + 1),\n\t\t\t\t\t\t(inline ? '' : `${prefix}var `) + `${ref} = ${value}${suffix}`\n\t\t\t\t\t);\n\t\t\t\t\tcode.move(node.start, c, start);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tdestructureObjectPattern(\n\t\t\t\tcode,\n\t\t\t\tcreateIdentifier,\n\t\t\t\tresolveName,\n\t\t\t\tnode,\n\t\t\t\tref,\n\t\t\t\tinline,\n\t\t\t\tstatementGenerators\n\t\t\t);\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'ArrayPattern': {\n\t\t\tcode.remove(c, (c = node.start));\n\n\t\t\tif (node.elements.filter(Boolean).length > 1) {\n\t\t\t\tconst ref = createIdentifier(value);\n\n\t\t\t\tstatementGenerators.push((start, prefix, suffix) => {\n\t\t\t\t\tcode.prependRight(node.start, (inline ? '' : `${prefix}var `) + `${ref} = `);\n\t\t\t\t\tcode.overwrite(node.start, (c = node.start + 1), value, {\n\t\t\t\t\t\tcontentOnly: true\n\t\t\t\t\t});\n\t\t\t\t\tcode.appendLeft(c, suffix);\n\n\t\t\t\t\tcode.move(node.start, c, start);\n\t\t\t\t});\n\n\t\t\t\tnode.elements.forEach((element, i) => {\n\t\t\t\t\tif (!element) return;\n\n\t\t\t\t\tif (element.type === 'RestElement') {\n\t\t\t\t\t\thandleProperty(\n\t\t\t\t\t\t\tcode,\n\t\t\t\t\t\t\tcreateIdentifier,\n\t\t\t\t\t\t\tresolveName,\n\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\telement.argument,\n\t\t\t\t\t\t\t`${ref}.slice(${i})`,\n\t\t\t\t\t\t\tinline,\n\t\t\t\t\t\t\tstatementGenerators\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandleProperty(\n\t\t\t\t\t\t\tcode,\n\t\t\t\t\t\t\tcreateIdentifier,\n\t\t\t\t\t\t\tresolveName,\n\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\t`${ref}[${i}]`,\n\t\t\t\t\t\t\tinline,\n\t\t\t\t\t\t\tstatementGenerators\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tc = element.end;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst index = findIndex(node.elements, Boolean);\n\t\t\t\tconst element = node.elements[index];\n\t\t\t\tif (element.type === 'RestElement') {\n\t\t\t\t\thandleProperty(\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tcreateIdentifier,\n\t\t\t\t\t\tresolveName,\n\t\t\t\t\t\tc,\n\t\t\t\t\t\telement.argument,\n\t\t\t\t\t\t`${value}.slice(${index})`,\n\t\t\t\t\t\tinline,\n\t\t\t\t\t\tstatementGenerators\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\thandleProperty(\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tcreateIdentifier,\n\t\t\t\t\t\tresolveName,\n\t\t\t\t\t\tc,\n\t\t\t\t\t\telement,\n\t\t\t\t\t\t`${value}[${index}]`,\n\t\t\t\t\t\tinline,\n\t\t\t\t\t\tstatementGenerators\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tc = element.end;\n\t\t\t}\n\n\t\t\tcode.remove(c, node.end);\n\t\t\tbreak;\n\t\t}\n\n\t\tdefault: {\n\t\t\tthrow new Error(`Unexpected node type in destructuring (${node.type})`);\n\t\t}\n\t}\n}\n","import Node from './Node.js';\nimport Scope from './Scope.js';\nimport destructure from '../utils/destructure.js';\n\nfunction isUseStrict(node) {\n\tif (!node) return false;\n\tif (node.type !== 'ExpressionStatement') return false;\n\tif (node.expression.type !== 'Literal') return false;\n\treturn node.expression.value === 'use strict';\n}\n\nexport default class BlockStatement extends Node {\n\tcreateScope() {\n\t\tthis.parentIsFunction = /Function/.test(this.parent.type);\n\t\tthis.isFunctionBlock = this.parentIsFunction || this.parent.type === 'Root';\n\t\tthis.scope = new Scope({\n\t\t\tblock: !this.isFunctionBlock,\n\t\t\tparent: this.parent.findScope(false),\n\t\t\tdeclare: id => this.createdDeclarations.push(id)\n\t\t});\n\n\t\tif (this.parentIsFunction) {\n\t\t\tthis.parent.params.forEach(node => {\n\t\t\t\tthis.scope.addDeclaration(node, 'param');\n\t\t\t});\n\t\t}\n\t}\n\n\tinitialise(transforms) {\n\t\tthis.thisAlias = null;\n\t\tthis.argumentsAlias = null;\n\t\tthis.defaultParameters = [];\n\t\tthis.createdDeclarations = [];\n\n\t\t// normally the scope gets created here, during initialisation,\n\t\t// but in some cases (e.g. `for` statements), we need to create\n\t\t// the scope early, as it pertains to both the init block and\n\t\t// the body of the statement\n\t\tif (!this.scope) this.createScope();\n\n\t\tthis.body.forEach(node => node.initialise(transforms));\n\n\t\tthis.scope.consolidate();\n\t}\n\n\tfindLexicalBoundary() {\n\t\tif (this.type === 'Program') return this;\n\t\tif (/^Function/.test(this.parent.type)) return this;\n\n\t\treturn this.parent.findLexicalBoundary();\n\t}\n\n\tfindScope(functionScope) {\n\t\tif (functionScope && !this.isFunctionBlock)\n\t\t\treturn this.parent.findScope(functionScope);\n\t\treturn this.scope;\n\t}\n\n\tgetArgumentsAlias() {\n\t\tif (!this.argumentsAlias) {\n\t\t\tthis.argumentsAlias = this.scope.createIdentifier('arguments');\n\t\t}\n\n\t\treturn this.argumentsAlias;\n\t}\n\n\tgetArgumentsArrayAlias() {\n\t\tif (!this.argumentsArrayAlias) {\n\t\t\tthis.argumentsArrayAlias = this.scope.createIdentifier('argsArray');\n\t\t}\n\n\t\treturn this.argumentsArrayAlias;\n\t}\n\n\tgetThisAlias() {\n\t\tif (!this.thisAlias) {\n\t\t\tthis.thisAlias = this.scope.createIdentifier('this');\n\t\t}\n\n\t\treturn this.thisAlias;\n\t}\n\n\tgetIndentation() {\n\t\tif (this.indentation === undefined) {\n\t\t\tconst source = this.program.magicString.original;\n\n\t\t\tconst useOuter = this.synthetic || !this.body.length;\n\t\t\tlet c = useOuter ? this.start : this.body[0].start;\n\n\t\t\twhile (c && source[c] !== '\\n') c -= 1;\n\n\t\t\tthis.indentation = '';\n\n\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\twhile (true) {\n\t\t\t\tc += 1;\n\t\t\t\tconst char = source[c];\n\n\t\t\t\tif (char !== ' ' && char !== '\\t') break;\n\n\t\t\t\tthis.indentation += char;\n\t\t\t}\n\n\t\t\tconst indentString = this.program.magicString.getIndentString();\n\n\t\t\t// account for dedented class constructors\n\t\t\tlet parent = this.parent;\n\t\t\twhile (parent) {\n\t\t\t\tif (parent.kind === 'constructor' && !parent.parent.parent.superClass) {\n\t\t\t\t\tthis.indentation = this.indentation.replace(indentString, '');\n\t\t\t\t}\n\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\n\t\t\tif (useOuter) this.indentation += indentString;\n\t\t}\n\n\t\treturn this.indentation;\n\t}\n\n\ttranspile(code, transforms) {\n\t\tconst indentation = this.getIndentation();\n\n\t\tconst introStatementGenerators = [];\n\n\t\tif (this.argumentsAlias) {\n\t\t\tintroStatementGenerators.push((start, prefix, suffix) => {\n\t\t\t\tconst assignment = `${prefix}var ${this.argumentsAlias} = arguments${\n\t\t\t\t\tsuffix\n\t\t\t\t}`;\n\t\t\t\tcode.appendLeft(start, assignment);\n\t\t\t});\n\t\t}\n\n\t\tif (this.thisAlias) {\n\t\t\tintroStatementGenerators.push((start, prefix, suffix) => {\n\t\t\t\tconst assignment = `${prefix}var ${this.thisAlias} = this${suffix}`;\n\t\t\t\tcode.appendLeft(start, assignment);\n\t\t\t});\n\t\t}\n\n\t\tif (this.argumentsArrayAlias) {\n\t\t\tintroStatementGenerators.push((start, prefix, suffix) => {\n\t\t\t\tconst i = this.scope.createIdentifier('i');\n\t\t\t\tconst assignment = `${prefix}var ${i} = arguments.length, ${\n\t\t\t\t\tthis.argumentsArrayAlias\n\t\t\t\t} = Array(${i});\\n${indentation}while ( ${i}-- ) ${\n\t\t\t\t\tthis.argumentsArrayAlias\n\t\t\t\t}[${i}] = arguments[${i}]${suffix}`;\n\t\t\t\tcode.appendLeft(start, assignment);\n\t\t\t});\n\t\t}\n\n\t\tif (/Function/.test(this.parent.type)) {\n\t\t\tthis.transpileParameters(\n\t\t\t\tthis.parent.params,\n\t\t\t\tcode,\n\t\t\t\ttransforms,\n\t\t\t\tindentation,\n\t\t\t\tintroStatementGenerators\n\t\t\t);\n\t\t} else if ('CatchClause' === this.parent.type) {\n\t\t\tthis.transpileParameters(\n\t\t\t\t[this.parent.param],\n\t\t\t\tcode,\n\t\t\t\ttransforms,\n\t\t\t\tindentation,\n\t\t\t\tintroStatementGenerators\n\t\t\t);\n\t\t}\n\n\t\tif (transforms.letConst && this.isFunctionBlock) {\n\t\t\tthis.transpileBlockScopedIdentifiers(code);\n\t\t}\n\n\t\tsuper.transpile(code, transforms);\n\n\t\tif (this.createdDeclarations.length) {\n\t\t\tintroStatementGenerators.push((start, prefix, suffix) => {\n\t\t\t\tconst assignment = `${prefix}var ${this.createdDeclarations.join(', ')}${suffix}`;\n\t\t\t\tcode.appendLeft(start, assignment);\n\t\t\t});\n\t\t}\n\n\t\tif (this.synthetic) {\n\t\t\tif (this.parent.type === 'ArrowFunctionExpression') {\n\t\t\t\tconst expr = this.body[0];\n\n\t\t\t\tif (introStatementGenerators.length) {\n\t\t\t\t\tcode\n\t\t\t\t\t\t.appendLeft(this.start, `{`)\n\t\t\t\t\t\t.prependRight(this.end, `${this.parent.getIndentation()}}`);\n\n\t\t\t\t\tcode.prependRight(expr.start, `\\n${indentation}return `);\n\t\t\t\t\tcode.appendLeft(expr.end, `;\\n`);\n\t\t\t\t} else if (transforms.arrow) {\n\t\t\t\t\tcode.prependRight(expr.start, `{ return `);\n\t\t\t\t\tcode.appendLeft(expr.end, `; }`);\n\t\t\t\t}\n\t\t\t} else if (introStatementGenerators.length) {\n\t\t\t\tcode.prependRight(this.start, `{`).appendLeft(this.end, `}`);\n\t\t\t}\n\t\t}\n\n\t\tlet start;\n\t\tif (isUseStrict(this.body[0])) {\n\t\t\tstart = this.body[0].end;\n\t\t} else if (this.synthetic || this.parent.type === 'Root') {\n\t\t\tstart = this.start;\n\t\t} else {\n\t\t\tstart = this.start + 1;\n\t\t}\n\n\t\tconst prefix = `\\n${indentation}`;\n\t\tlet suffix = ';';\n\t\tintroStatementGenerators.forEach((fn, i) => {\n\t\t\tif (i === introStatementGenerators.length - 1) suffix = `;\\n`;\n\t\t\tfn(start, prefix, suffix);\n\t\t});\n\t}\n\n\ttranspileParameters(params, code, transforms, indentation, introStatementGenerators) {\n\t\tparams.forEach(param => {\n\t\t\tif (\n\t\t\t\tparam.type === 'AssignmentPattern' &&\n\t\t\t\tparam.left.type === 'Identifier'\n\t\t\t) {\n\t\t\t\tif (transforms.defaultParameter) {\n\t\t\t\t\tintroStatementGenerators.push((start, prefix, suffix) => {\n\t\t\t\t\t\tconst lhs = `${prefix}if ( ${param.left.name} === void 0 ) ${\n\t\t\t\t\t\t\tparam.left.name\n\t\t\t\t\t\t}`;\n\n\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t.prependRight(param.left.end, lhs)\n\t\t\t\t\t\t\t.move(param.left.end, param.right.end, start)\n\t\t\t\t\t\t\t.appendLeft(param.right.end, suffix);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (param.type === 'RestElement') {\n\t\t\t\tif (transforms.spreadRest) {\n\t\t\t\t\tintroStatementGenerators.push((start, prefix, suffix) => {\n\t\t\t\t\t\tconst penultimateParam = params[params.length - 2];\n\n\t\t\t\t\t\tif (penultimateParam) {\n\t\t\t\t\t\t\tcode.remove(\n\t\t\t\t\t\t\t\tpenultimateParam ? penultimateParam.end : param.start,\n\t\t\t\t\t\t\t\tparam.end\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet start = param.start,\n\t\t\t\t\t\t\t\tend = param.end; // TODO https://gitlab.com/Rich-Harris/buble/issues/8\n\n\t\t\t\t\t\t\twhile (/\\s/.test(code.original[start - 1])) start -= 1;\n\t\t\t\t\t\t\twhile (/\\s/.test(code.original[end])) end += 1;\n\n\t\t\t\t\t\t\tcode.remove(start, end);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst name = param.argument.name;\n\t\t\t\t\t\tconst len = this.scope.createIdentifier('len');\n\t\t\t\t\t\tconst count = params.length - 1;\n\n\t\t\t\t\t\tif (count) {\n\t\t\t\t\t\t\tcode.prependRight(\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\t`${prefix}var ${name} = [], ${len} = arguments.length - ${\n\t\t\t\t\t\t\t\t\tcount\n\t\t\t\t\t\t\t\t};\\n${indentation}while ( ${len}-- > 0 ) ${name}[ ${\n\t\t\t\t\t\t\t\t\tlen\n\t\t\t\t\t\t\t\t} ] = arguments[ ${len} + ${count} ]${suffix}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode.prependRight(\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\t`${prefix}var ${name} = [], ${len} = arguments.length;\\n${\n\t\t\t\t\t\t\t\t\tindentation\n\t\t\t\t\t\t\t\t}while ( ${len}-- ) ${name}[ ${len} ] = arguments[ ${len} ]${\n\t\t\t\t\t\t\t\t\tsuffix\n\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (param.type !== 'Identifier') {\n\t\t\t\tif (transforms.parameterDestructuring) {\n\t\t\t\t\tconst ref = this.scope.createIdentifier('ref');\n\t\t\t\t\tdestructure(\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tid => this.scope.createIdentifier(id),\n\t\t\t\t\t\t({ name }) => this.scope.resolveName(name),\n\t\t\t\t\t\tparam,\n\t\t\t\t\t\tref,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tintroStatementGenerators\n\t\t\t\t\t);\n\t\t\t\t\tcode.prependRight(param.start, ref);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\ttranspileBlockScopedIdentifiers(code) {\n\t\tObject.keys(this.scope.blockScopedDeclarations).forEach(name => {\n\t\t\tconst declarations = this.scope.blockScopedDeclarations[name];\n\n\t\t\tfor (const declaration of declarations) {\n\t\t\t\tlet cont = false; // TODO implement proper continue...\n\n\t\t\t\tif (declaration.kind === 'for.let') {\n\t\t\t\t\t// special case\n\t\t\t\t\tconst forStatement = declaration.node.findNearest('ForStatement');\n\n\t\t\t\t\tif (forStatement.shouldRewriteAsFunction) {\n\t\t\t\t\t\tconst outerAlias = this.scope.createIdentifier(name);\n\t\t\t\t\t\tconst innerAlias = forStatement.reassigned[name]\n\t\t\t\t\t\t\t? this.scope.createIdentifier(name)\n\t\t\t\t\t\t\t: name;\n\n\t\t\t\t\t\tdeclaration.name = outerAlias;\n\t\t\t\t\t\tcode.overwrite(\n\t\t\t\t\t\t\tdeclaration.node.start,\n\t\t\t\t\t\t\tdeclaration.node.end,\n\t\t\t\t\t\t\touterAlias,\n\t\t\t\t\t\t\t{ storeName: true }\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tforStatement.aliases[name] = {\n\t\t\t\t\t\t\touter: outerAlias,\n\t\t\t\t\t\t\tinner: innerAlias\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tfor (const identifier of declaration.instances) {\n\t\t\t\t\t\t\tconst alias = forStatement.body.contains(identifier)\n\t\t\t\t\t\t\t\t? innerAlias\n\t\t\t\t\t\t\t\t: outerAlias;\n\n\t\t\t\t\t\t\tif (name !== alias) {\n\t\t\t\t\t\t\t\tcode.overwrite(identifier.start, identifier.end, alias, {\n\t\t\t\t\t\t\t\t\tstoreName: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcont = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!cont) {\n\t\t\t\t\tconst alias = this.scope.createIdentifier(name);\n\n\t\t\t\t\tif (name !== alias) {\n\t\t\t\t\t\tdeclaration.name = alias;\n\t\t\t\t\t\tcode.overwrite(\n\t\t\t\t\t\t\tdeclaration.node.start,\n\t\t\t\t\t\t\tdeclaration.node.end,\n\t\t\t\t\t\t\talias,\n\t\t\t\t\t\t\t{ storeName: true }\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfor (const identifier of declaration.instances) {\n\t\t\t\t\t\t\tidentifier.rewritten = true;\n\t\t\t\t\t\t\tcode.overwrite(identifier.start, identifier.end, alias, {\n\t\t\t\t\t\t\t\tstoreName: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import CompileError from './CompileError.js';\n\nexport function isArguments(node) {\n\treturn node.type === 'Identifier' && node.name === 'arguments';\n}\n\nexport function inlineSpreads(\n\tcode,\n\tnode,\n\telements\n) {\n\tlet i = elements.length;\n\n\twhile (i--) {\n\t\tconst element = elements[i];\n\t\tif (!element || element.type !== 'SpreadElement') {\n\t\t\tcontinue;\n\t\t}\n\t\tconst argument = element.argument;\n\t\tif (argument.type !== 'ArrayExpression') {\n\t\t\tcontinue;\n\t\t}\n\t\tconst subelements = argument.elements;\n\t\tif (subelements.some(subelement => subelement === null)) {\n\t\t\t// Not even going to try inlining spread arrays with holes.\n\t\t\t// It's a lot of work (got to be VERY careful in comma counting for\n\t\t\t// ArrayExpression, and turn blanks into undefined for\n\t\t\t// CallExpression and NewExpression), and probably literally no one\n\t\t\t// would ever benefit from it.\n\t\t\tcontinue;\n\t\t}\n\t\t// We can inline it: drop the `...[` and `]` and sort out any commas.\n\t\tconst isLast = i === elements.length - 1;\n\t\tif (subelements.length === 0) {\n\t\t\tcode.remove(\n\t\t\t\tisLast && i !== 0\n\t\t\t\t\t? elements[i - 1].end  // Take the previous comma too\n\t\t\t\t\t: element.start,\n\t\t\t\tisLast\n\t\t\t\t\t? node.end - 1  // Must remove trailing comma; element.end wouldn’t\n\t\t\t\t\t: elements[i + 1].start);\n\t\t} else {\n\t\t\t// Strip the `...[` and the `]` with a possible trailing comma before it,\n\t\t\t// leaving just the possible trailing comma after it.\n\t\t\tcode.remove(element.start, subelements[0].start);\n\t\t\tcode.remove(\n\t\t\t\t// Strip a possible trailing comma after the last element\n\t\t\t\tsubelements[subelements.length - 1].end,\n\t\t\t\t// And also a possible trailing comma after the spread\n\t\t\t\tisLast\n\t\t\t\t\t? node.end - 1\n\t\t\t\t\t: element.end\n\t\t\t);\n\t\t}\n\t\telements.splice(i, 1, ...subelements);\n\t\ti += subelements.length;\n\t}\n}\n\n// Returns false if it’s safe to simply append a method call to the node,\n// e.g. `a` → `a.concat()`.\n//\n// Returns true if it may not be and so parentheses should be employed,\n// e.g. `a ? b : c` → `a ? b : c.concat()` would be wrong.\n//\n// This test may be overcautious; if desired it can be refined over time.\nexport function needsParentheses(node) {\n\tswitch (node.type) {\n\t\t// Currently whitelisted are all relevant ES5 node types ('Literal' and\n\t\t// 'ObjectExpression' are skipped as irrelevant for array/call spread.)\n\t\tcase 'ArrayExpression':\n\t\tcase 'CallExpression':\n\t\tcase 'Identifier':\n\t\tcase 'ParenthesizedExpression':\n\t\tcase 'ThisExpression':\n\t\t\treturn false;\n\t\tdefault:\n\t\t\treturn true;\n\t}\n}\n\nexport default function spread(\n\tcode,\n\telements,\n\tstart,\n\targumentsArrayAlias,\n\tisNew\n) {\n\tlet i = elements.length;\n\tlet firstSpreadIndex = -1;\n\n\twhile (i--) {\n\t\tconst element = elements[i];\n\t\tif (element && element.type === 'SpreadElement') {\n\t\t\tif (isArguments(element.argument)) {\n\t\t\t\tcode.overwrite(\n\t\t\t\t\telement.argument.start,\n\t\t\t\t\telement.argument.end,\n\t\t\t\t\targumentsArrayAlias\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tfirstSpreadIndex = i;\n\t\t}\n\t}\n\n\tif (firstSpreadIndex === -1) return false; // false indicates no spread elements\n\n\tif (isNew) {\n\t\tfor (i = 0; i < elements.length; i += 1) {\n\t\t\tconst element = elements[i];\n\t\t\tif (element.type === 'SpreadElement') {\n\t\t\t\tcode.remove(element.start, element.argument.start);\n\t\t\t} else {\n\t\t\t\tcode.prependRight(element.start, '[');\n\t\t\t\tcode.prependRight(element.end, ']');\n\t\t\t}\n\t\t}\n\n\t\treturn true; // true indicates some spread elements\n\t}\n\n\tlet element = elements[firstSpreadIndex];\n\tconst previousElement = elements[firstSpreadIndex - 1];\n\n\tif (!previousElement) {\n\t\t// We may need to parenthesize it to handle ternaries like [...a ? b : c].\n\t\tlet addClosingParen;\n\t\tif (start !== element.start) {\n\t\t\tif ((addClosingParen = needsParentheses(element.argument))) {\n\t\t\t\tcode.overwrite(start, element.start, '( ');\n\t\t\t} else {\n\t\t\t\tcode.remove(start, element.start);\n\t\t\t}\n\t\t} else if (element.parent.type === 'CallExpression') {\n\t\t\t// CallExpression inserts `( ` itself, we add the ).\n\t\t\t// (Yeah, CallExpression did the needsParentheses call already,\n\t\t\t// but we don’t have its result handy, so do it again. It’s cheap.)\n\t\t\taddClosingParen = needsParentheses(element.argument);\n\t\t} else {\n\t\t\t// Should be unreachable, but doing this is more robust.\n\t\t\tthrow new CompileError(\n\t\t\t\t'Unsupported spread construct, please raise an issue at https://github.com/bublejs/buble/issues',\n\t\t\t\telement\n\t\t\t);\n\t\t}\n\t\tcode.overwrite(element.end, elements[1].start,\n\t\t\taddClosingParen ? ' ).concat( ' : '.concat( ');\n\t} else {\n\t\tcode.overwrite(previousElement.end, element.start, ' ].concat( ');\n\t}\n\n\tfor (i = firstSpreadIndex; i < elements.length; i += 1) {\n\t\telement = elements[i];\n\n\t\tif (element) {\n\t\t\tif (element.type === 'SpreadElement') {\n\t\t\t\tcode.remove(element.start, element.argument.start);\n\t\t\t} else {\n\t\t\t\tcode.appendLeft(element.start, '[');\n\t\t\t\tcode.appendLeft(element.end, ']');\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true; // true indicates some spread elements\n}\n","import Node from '../Node.js';\nimport spread, { isArguments, inlineSpreads } from '../../utils/spread.js';\n\nexport default class ArrayExpression extends Node {\n\tinitialise(transforms) {\n\t\tif (transforms.spreadRest && this.elements.length) {\n\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\n\n\t\t\tlet i = this.elements.length;\n\t\t\twhile (i--) {\n\t\t\t\tconst element = this.elements[i];\n\t\t\t\tif (\n\t\t\t\t\telement &&\n\t\t\t\t\telement.type === 'SpreadElement' &&\n\t\t\t\t\tisArguments(element.argument)\n\t\t\t\t) {\n\t\t\t\t\tthis.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsuper.initialise(transforms);\n\t}\n\n\ttranspile(code, transforms) {\n\t\tsuper.transpile(code, transforms);\n\n\t\tif (transforms.spreadRest) {\n\t\t\tinlineSpreads(code, this, this.elements);\n\t\t\t// erase trailing comma after last array element if not an array hole\n\t\t\tif (this.elements.length) {\n\t\t\t\tconst lastElement = this.elements[this.elements.length - 1];\n\t\t\t\tif (\n\t\t\t\t\tlastElement &&\n\t\t\t\t\t/\\s*,/.test(code.original.slice(lastElement.end, this.end))\n\t\t\t\t) {\n\t\t\t\t\tcode.overwrite(lastElement.end, this.end - 1, ' ');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.elements.length === 1) {\n\t\t\t\tconst element = this.elements[0];\n\n\t\t\t\tif (element && element.type === 'SpreadElement') {\n\t\t\t\t\t// special case – [ ...arguments ]\n\t\t\t\t\tif (isArguments(element.argument)) {\n\t\t\t\t\t\tcode.overwrite(\n\t\t\t\t\t\t\tthis.start,\n\t\t\t\t\t\t\tthis.end,\n\t\t\t\t\t\t\t`[].concat( ${this.argumentsArrayAlias} )`\n\t\t\t\t\t\t); // TODO if this is the only use of argsArray, don't bother concating\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode.overwrite(this.start, element.argument.start, '[].concat( ');\n\t\t\t\t\t\tcode.overwrite(element.end, this.end, ' )');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst hasSpreadElements = spread(\n\t\t\t\t\tcode,\n\t\t\t\t\tthis.elements,\n\t\t\t\t\tthis.start,\n\t\t\t\t\tthis.argumentsArrayAlias\n\t\t\t\t);\n\n\t\t\t\tif (hasSpreadElements) {\n\t\t\t\t\tcode.overwrite(this.end - 1, this.end, ')');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","export default function removeTrailingComma(code, c) {\n\twhile (code.original[c] !== ')') {\n\t\tif (code.original[c] === ',') {\n\t\t\tcode.remove(c, c + 1);\n\t\t\treturn;\n\t\t}\n\n\t\tif (code.original[c] === '/') {\n\t\t\tif (code.original[c + 1] === '/') {\n\t\t\t\tc = code.original.indexOf('\\n', c);\n\t\t\t} else {\n\t\t\t\tc = code.original.indexOf('*/', c) + 1;\n\t\t\t}\n\t\t}\n\t\tc += 1;\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\nimport removeTrailingComma from '../../utils/removeTrailingComma.js';\n\nexport default class ArrowFunctionExpression extends Node {\n\tinitialise(transforms) {\n\t\tif (this.async && transforms.asyncAwait) {\n\t\t\tCompileError.missingTransform(\"async arrow functions\", \"asyncAwait\", this);\n\t\t}\n\t\tthis.body.createScope();\n\t\tsuper.initialise(transforms);\n\t}\n\n\ttranspile(code, transforms) {\n\t\tlet openParensPos = this.start;\n\t\tfor (let end = (this.body || this.params[0]).start - 1; code.original[openParensPos] !== '(' && openParensPos < end;) {\n\t\t\t++openParensPos;\n\t\t}\n\t\tif (code.original[openParensPos] !== '(') openParensPos = -1;\n\t\tconst naked = openParensPos === -1;\n\n\t\tif (transforms.arrow || this.needsArguments(transforms)) {\n\t\t\t// remove arrow\n\t\t\tlet charIndex = this.body.start;\n\t\t\twhile (code.original[charIndex] !== '=') {\n\t\t\t\tcharIndex -= 1;\n\t\t\t}\n\t\t\tcode.remove(charIndex, this.body.start);\n\n\t\t\tsuper.transpile(code, transforms);\n\n\t\t\t// wrap naked parameter\n\t\t\tif (naked) {\n\t\t\t\tcode.prependRight(this.params[0].start, '(');\n\t\t\t\tcode.appendLeft(this.params[0].end, ')');\n\t\t\t}\n\n\t\t\t// standalone expression statement\n\t\t\tconst standalone = this.parent && this.parent.type === 'ExpressionStatement';\n\t\t\tlet start, text = standalone ? '!' : '';\n\t\t\tif (this.async) text += 'async ';\n\t\t\ttext += 'function';\n\t\t\tif (!standalone) text += ' ';\n\t\t\tif (naked) {\n\t\t\t\tstart = this.params[0].start;\n\t\t\t} else {\n\t\t\t\tstart = openParensPos;\n\t\t\t}\n\t\t\t// add function\n\t\t\tif (start > this.start) {\n\t\t\t\tcode.overwrite(this.start, start, text);\n\t\t\t} else {\n\t\t\t\tcode.prependRight(this.start, text);\n\t\t\t}\n\t\t} else {\n\t\t\tsuper.transpile(code, transforms);\n\t\t}\n\n\t\tif (transforms.trailingFunctionCommas && this.params.length && !naked) {\n\t\t\tremoveTrailingComma(code, this.params[this.params.length - 1].end);\n\t\t}\n\t}\n\n\t// Returns whether any transforms that will happen use `arguments`\n\tneedsArguments(transforms) {\n\t\treturn (\n\t\t\ttransforms.spreadRest &&\n\t\t\tthis.params.filter(param => param.type === 'RestElement').length > 0\n\t\t);\n\t}\n}\n","import CompileError from './CompileError.js';\n\nexport default function checkConst(identifier, scope) {\n\tconst declaration = scope.findDeclaration(identifier.name);\n\tif (declaration && declaration.kind === 'const') {\n\t\tthrow new CompileError(`${identifier.name} is read-only`, identifier);\n\t}\n}\n","import Node from '../Node.js';\nimport checkConst from '../../utils/checkConst.js';\nimport destructure from '../../utils/destructure.js';\n\nexport default class AssignmentExpression extends Node {\n\tinitialise(transforms) {\n\t\tif (this.left.type === 'Identifier') {\n\t\t\tconst declaration = this.findScope(false).findDeclaration(this.left.name);\n\t\t\t// special case – https://gitlab.com/Rich-Harris/buble/issues/11\n\t\t\tconst statement = declaration && declaration.node.ancestor(3);\n\t\t\tif (\n\t\t\t\tstatement &&\n\t\t\t\tstatement.type === 'ForStatement' &&\n\t\t\t\tstatement.body.contains(this)\n\t\t\t) {\n\t\t\t\tstatement.reassigned[this.left.name] = true;\n\t\t\t}\n\t\t}\n\n\t\tsuper.initialise(transforms);\n\t}\n\n\ttranspile(code, transforms) {\n\t\tif (this.left.type === 'Identifier') {\n\t\t\t// Do this check after everything has been initialized to find\n\t\t\t// shadowing declarations after this expression\n\t\t\tcheckConst(this.left, this.findScope(false));\n\t\t}\n\n\t\tif (this.operator === '**=' && transforms.exponentiation) {\n\t\t\tthis.transpileExponentiation(code, transforms);\n\t\t} else if (/Pattern/.test(this.left.type) && transforms.destructuring) {\n\t\t\tthis.transpileDestructuring(code);\n\t\t}\n\n\t\tsuper.transpile(code, transforms);\n\t}\n\n\ttranspileDestructuring(code) {\n\t\tconst writeScope = this.findScope(true);\n\t\tconst lookupScope = this.findScope(false);\n\t\tconst assign = writeScope.createDeclaration('assign');\n\t\tcode.appendRight(this.left.end, `(${assign}`);\n\n\t\tcode.appendLeft(this.right.end, ', ');\n\t\tconst statementGenerators = [];\n\t\tdestructure(\n\t\t\tcode,\n\t\t\tid => writeScope.createDeclaration(id),\n\t\t\tnode => {\n\t\t\t\tconst name = lookupScope.resolveName(node.name);\n\t\t\t\tcheckConst(node, lookupScope);\n\t\t\t\treturn name;\n\t\t\t},\n\t\t\tthis.left,\n\t\t\tassign,\n\t\t\ttrue,\n\t\t\tstatementGenerators\n\t\t);\n\n\t\tlet suffix = ', ';\n\t\tstatementGenerators.forEach((fn, j) => {\n\t\t\tif (j === statementGenerators.length - 1) {\n\t\t\t\tsuffix = '';\n\t\t\t}\n\n\t\t\tfn(this.end, '', suffix);\n\t\t});\n\n\t\tif (this.unparenthesizedParent().type === 'ExpressionStatement') {\n\t\t\t// no rvalue needed for expression statement\n\t\t\tcode.prependRight(this.end, `)`);\n\t\t} else {\n\t\t\t// destructuring is part of an expression - need an rvalue\n\t\t\tcode.appendRight(this.end, `, ${assign})`);\n\t\t}\n\t}\n\n\ttranspileExponentiation(code) {\n\t\tconst scope = this.findScope(false);\n\n\t\t// first, the easy part – `**=` -> `=`\n\t\tlet charIndex = this.left.end;\n\t\twhile (code.original[charIndex] !== '*') charIndex += 1;\n\t\tcode.remove(charIndex, charIndex + 2);\n\n\t\t// how we do the next part depends on a number of factors – whether\n\t\t// this is a top-level statement, and whether we're updating a\n\t\t// simple or complex reference\n\t\tlet base;\n\n\t\tconst left = this.left.unparenthesize();\n\n\t\tif (left.type === 'Identifier') {\n\t\t\tbase = scope.resolveName(left.name);\n\t\t} else if (left.type === 'MemberExpression') {\n\t\t\tlet object;\n\t\t\tlet needsObjectVar = false;\n\t\t\tlet property;\n\t\t\tlet needsPropertyVar = false;\n\n\t\t\tconst statement = this.findNearest(/(?:Statement|Declaration)$/);\n\t\t\tconst i0 = statement.getIndentation();\n\n\t\t\tif (left.property.type === 'Identifier') {\n\t\t\t\tproperty = left.computed\n\t\t\t\t\t? scope.resolveName(left.property.name)\n\t\t\t\t\t: left.property.name;\n\t\t\t} else {\n\t\t\t\tproperty = scope.createDeclaration('property');\n\t\t\t\tneedsPropertyVar = true;\n\t\t\t}\n\n\t\t\tif (left.object.type === 'Identifier') {\n\t\t\t\tobject = scope.resolveName(left.object.name);\n\t\t\t} else {\n\t\t\t\tobject = scope.createDeclaration('object');\n\t\t\t\tneedsObjectVar = true;\n\t\t\t}\n\n\t\t\tif (left.start === statement.start) {\n\t\t\t\tif (needsObjectVar && needsPropertyVar) {\n\t\t\t\t\tcode.prependRight(statement.start, `${object} = `);\n\t\t\t\t\tcode.overwrite(\n\t\t\t\t\t\tleft.object.end,\n\t\t\t\t\t\tleft.property.start,\n\t\t\t\t\t\t`;\\n${i0}${property} = `\n\t\t\t\t\t);\n\t\t\t\t\tcode.overwrite(\n\t\t\t\t\t\tleft.property.end,\n\t\t\t\t\t\tleft.end,\n\t\t\t\t\t\t`;\\n${i0}${object}[${property}]`\n\t\t\t\t\t);\n\t\t\t\t} else if (needsObjectVar) {\n\t\t\t\t\tcode.prependRight(statement.start, `${object} = `);\n\t\t\t\t\tcode.appendLeft(left.object.end, `;\\n${i0}`);\n\t\t\t\t\tcode.appendLeft(left.object.end, object);\n\t\t\t\t} else if (needsPropertyVar) {\n\t\t\t\t\tcode.prependRight(left.property.start, `${property} = `);\n\t\t\t\t\tcode.appendLeft(left.property.end, `;\\n${i0}`);\n\t\t\t\t\tcode.move(left.property.start, left.property.end, this.start);\n\n\t\t\t\t\tcode.appendLeft(left.object.end, `[${property}]`);\n\t\t\t\t\tcode.remove(left.object.end, left.property.start);\n\t\t\t\t\tcode.remove(left.property.end, left.end);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (needsObjectVar && needsPropertyVar) {\n\t\t\t\t\tcode.prependRight(left.start, `( ${object} = `);\n\t\t\t\t\tcode.overwrite(\n\t\t\t\t\t\tleft.object.end,\n\t\t\t\t\t\tleft.property.start,\n\t\t\t\t\t\t`, ${property} = `\n\t\t\t\t\t);\n\t\t\t\t\tcode.overwrite(\n\t\t\t\t\t\tleft.property.end,\n\t\t\t\t\t\tleft.end,\n\t\t\t\t\t\t`, ${object}[${property}]`\n\t\t\t\t\t);\n\t\t\t\t} else if (needsObjectVar) {\n\t\t\t\t\tcode.prependRight(left.start, `( ${object} = `);\n\t\t\t\t\tcode.appendLeft(left.object.end, `, ${object}`);\n\t\t\t\t} else if (needsPropertyVar) {\n\t\t\t\t\tcode.prependRight(left.property.start, `( ${property} = `);\n\t\t\t\t\tcode.appendLeft(left.property.end, `, `);\n\t\t\t\t\tcode.move(left.property.start, left.property.end, left.start);\n\n\t\t\t\t\tcode.overwrite(left.object.end, left.property.start, `[${property}]`);\n\t\t\t\t\tcode.remove(left.property.end, left.end);\n\t\t\t\t}\n\n\t\t\t\tif (needsPropertyVar) {\n\t\t\t\t\tcode.appendLeft(this.end, ` )`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase =\n\t\t\t\tobject +\n\t\t\t\t(left.computed || needsPropertyVar ? `[${property}]` : `.${property}`);\n\t\t}\n\n\t\tcode.prependRight(this.right.start, `Math.pow( ${base}, `);\n\t\tcode.appendLeft(this.right.end, ` )`);\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class AwaitExpression extends Node {\n\tinitialise(transforms) {\n\t\tif (transforms.asyncAwait) {\n\t\t\tCompileError.missingTransform(\"await\", \"asyncAwait\", this);\n\t\t}\n\t\tsuper.initialise(transforms);\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class BinaryExpression extends Node {\n\ttranspile(code, transforms) {\n\t\tif (this.operator === '**' && transforms.exponentiation) {\n\t\t\tcode.prependRight(this.start, `Math.pow( `);\n\t\t\tcode.overwrite(this.left.end, this.right.start, `, `);\n\t\t\tcode.appendLeft(this.end, ` )`);\n\t\t}\n\t\tsuper.transpile(code, transforms);\n\t}\n}\n","export const loopStatement = /(?:For(?:In|Of)?|While)Statement/;\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\nimport { loopStatement } from '../../utils/patterns.js';\n\nexport default class BreakStatement extends Node {\n\tinitialise() {\n\t\tconst loop = this.findNearest(loopStatement);\n\t\tconst switchCase = this.findNearest('SwitchCase');\n\n\t\tif (loop && (!switchCase || loop.depth > switchCase.depth)) {\n\t\t\tloop.canBreak = true;\n\t\t\tthis.loop = loop;\n\t\t}\n\t}\n\n\ttranspile(code) {\n\t\tif (this.loop && this.loop.shouldRewriteAsFunction) {\n\t\t\tif (this.label)\n\t\t\t\tthrow new CompileError(\n\t\t\t\t\t'Labels are not currently supported in a loop with locally-scoped variables',\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\tcode.overwrite(this.start, this.start + 5, `return 'break'`);\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport spread, { isArguments, inlineSpreads, needsParentheses } from '../../utils/spread.js';\nimport removeTrailingComma from '../../utils/removeTrailingComma.js';\n\nexport default class CallExpression extends Node {\n\tinitialise(transforms) {\n\t\tif (transforms.spreadRest && this.arguments.length > 1) {\n\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\n\n\t\t\tlet i = this.arguments.length;\n\t\t\twhile (i--) {\n\t\t\t\tconst arg = this.arguments[i];\n\t\t\t\tif (arg.type === 'SpreadElement' && isArguments(arg.argument)) {\n\t\t\t\t\tthis.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsuper.initialise(transforms);\n\t}\n\n\ttranspile(code, transforms) {\n\t\tif (transforms.spreadRest && this.arguments.length) {\n\t\t\tinlineSpreads(code, this, this.arguments);\n\t\t\t// this.arguments.length may have changed, must retest.\n\t\t}\n\n\t\tif (transforms.spreadRest && this.arguments.length) {\n\t\t\tlet hasSpreadElements = false;\n\t\t\tlet context;\n\n\t\t\tconst firstArgument = this.arguments[0];\n\n\t\t\tif (this.arguments.length === 1) {\n\t\t\t\tif (firstArgument.type === 'SpreadElement') {\n\t\t\t\t\tcode.remove(firstArgument.start, firstArgument.argument.start);\n\t\t\t\t\thasSpreadElements = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thasSpreadElements = spread(\n\t\t\t\t\tcode,\n\t\t\t\t\tthis.arguments,\n\t\t\t\t\tfirstArgument.start,\n\t\t\t\t\tthis.argumentsArrayAlias\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (hasSpreadElements) {\n\t\t\t\t// we need to handle super() and super.method() differently\n\t\t\t\t// due to its instance\n\t\t\t\tlet _super = null;\n\t\t\t\tif (this.callee.type === 'Super') {\n\t\t\t\t\t_super = this.callee;\n\t\t\t\t} else if (\n\t\t\t\t\tthis.callee.type === 'MemberExpression' &&\n\t\t\t\t\tthis.callee.object.type === 'Super'\n\t\t\t\t) {\n\t\t\t\t\t_super = this.callee.object;\n\t\t\t\t}\n\n\t\t\t\tif (!_super && this.callee.type === 'MemberExpression') {\n\t\t\t\t\tif (this.callee.object.type === 'Identifier') {\n\t\t\t\t\t\tcontext = this.callee.object.name;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext = this.findScope(true).createDeclaration('ref');\n\t\t\t\t\t\tconst callExpression = this.callee.object;\n\t\t\t\t\t\tcode.prependRight(callExpression.start, `(${context} = `);\n\t\t\t\t\t\tcode.appendLeft(callExpression.end, `)`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext = 'void 0';\n\t\t\t\t}\n\n\t\t\t\tcode.appendLeft(this.callee.end, '.apply');\n\n\t\t\t\tif (_super) {\n\t\t\t\t\t_super.noCall = true; // bit hacky...\n\n\t\t\t\t\tif (this.arguments.length > 1) {\n\t\t\t\t\t\tif (firstArgument.type === 'SpreadElement') {\n\t\t\t\t\t\t\tif (needsParentheses(firstArgument.argument)) {\n\t\t\t\t\t\t\t\tcode.prependRight(firstArgument.start, `( `);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode.prependRight(firstArgument.start, `[ `);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcode.appendLeft(\n\t\t\t\t\t\t\tthis.arguments[this.arguments.length - 1].end,\n\t\t\t\t\t\t\t' )'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (this.arguments.length === 1) {\n\t\t\t\t\tcode.prependRight(firstArgument.start, `${context}, `);\n\t\t\t\t} else {\n\t\t\t\t\tif (firstArgument.type === 'SpreadElement') {\n\t\t\t\t\t\tif (needsParentheses(firstArgument.argument)) {\n\t\t\t\t\t\t\tcode.appendLeft(firstArgument.start, `${context}, ( `);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode.appendLeft(firstArgument.start, `${context}, `);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode.appendLeft(firstArgument.start, `${context}, [ `);\n\t\t\t\t\t}\n\n\t\t\t\t\tcode.appendLeft(this.arguments[this.arguments.length - 1].end, ' )');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (transforms.trailingFunctionCommas && this.arguments.length) {\n\t\t\tremoveTrailingComma(code, this.arguments[this.arguments.length - 1].end);\n\t\t}\n\n\t\tsuper.transpile(code, transforms);\n\t}\n}\n","import CompileError from '../../utils/CompileError.js';\nimport Node from '../Node.js';\nimport { findIndex } from '../../utils/array.js';\nimport reserved from '../../utils/reserved.js';\n\n// TODO this code is pretty wild, tidy it up\nexport default class ClassBody extends Node {\n\ttranspile(code, transforms, inFunctionExpression, superName) {\n\t\tif (transforms.classes) {\n\t\t\tconst name = this.parent.name;\n\n\t\t\tconst indentStr = code.getIndentString();\n\t\t\tconst i0 =\n\t\t\t\tthis.getIndentation() + (inFunctionExpression ? indentStr : '');\n\t\t\tconst i1 = i0 + indentStr;\n\n\t\t\tconst constructorIndex = findIndex(\n\t\t\t\tthis.body,\n\t\t\t\tnode => node.kind === 'constructor'\n\t\t\t);\n\t\t\tconst constructor = this.body[constructorIndex];\n\n\t\t\tlet introBlock = '';\n\t\t\tlet outroBlock = '';\n\n\t\t\tif (this.body.length) {\n\t\t\t\tcode.remove(this.start, this.body[0].start);\n\t\t\t\tcode.remove(this.body[this.body.length - 1].end, this.end);\n\t\t\t} else {\n\t\t\t\tcode.remove(this.start, this.end);\n\t\t\t}\n\n\t\t\tif (constructor) {\n\t\t\t\tconstructor.value.body.isConstructorBody = true;\n\n\t\t\t\tconst previousMethod = this.body[constructorIndex - 1];\n\t\t\t\tconst nextMethod = this.body[constructorIndex + 1];\n\n\t\t\t\t// ensure constructor is first\n\t\t\t\tif (constructorIndex > 0) {\n\t\t\t\t\tcode.remove(previousMethod.end, constructor.start);\n\t\t\t\t\tcode.move(\n\t\t\t\t\t\tconstructor.start,\n\t\t\t\t\t\tnextMethod ? nextMethod.start : this.end - 1,\n\t\t\t\t\t\tthis.body[0].start\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (!inFunctionExpression) code.appendLeft(constructor.end, ';');\n\t\t\t}\n\n\t\t\tconst classFields = [];\n\t\t\tthis.body.forEach(element => {\n\t\t\t\tif (element.type === 'FieldDefinition') {\n\t\t\t\t\tif (element.computed) {\n\t\t\t\t\t\tclassFields.push(`this${code.slice(element.start, element.end)};`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclassFields.push(`this.${code.slice(element.start, element.end)};`);\n\t\t\t\t\t}\n\n\t\t\t\t\tcode.remove(element.start, element.end);\n\n\t\t\t\t\tif (code.byStart[element.end].content !== '') {\n\t\t\t\t\t\tlet toEnd = 0;\n\t\t\t\t\t\tfor (; toEnd < code.byStart[element.end].content.length; toEnd++) {\n\t\t\t\t\t\t\tconst chars = code.byStart[element.end].content.slice(0, toEnd);\n\n\t\t\t\t\t\t\tif (chars.indexOf(';') !== -1) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (toEnd > 0) {\n\t\t\t\t\t\t\tcode.remove(element.end, element.end + toEnd);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst namedFunctions =\n\t\t\t\tthis.program.options.namedFunctionExpressions !== false;\n\t\t\tconst namedConstructor =\n\t\t\t\tnamedFunctions ||\n\t\t\t\tthis.parent.superClass ||\n\t\t\t\tthis.parent.type !== 'ClassDeclaration';\n\t\t\tif (this.parent.superClass) {\n\t\t\t\tlet inheritanceBlock = `if ( ${superName} ) ${name}.__proto__ = ${\n\t\t\t\t\tsuperName\n\t\t\t\t};\\n${i0}${name}.prototype = Object.create( ${superName} && ${\n\t\t\t\t\tsuperName\n\t\t\t\t}.prototype );\\n${i0}${name}.prototype.constructor = ${name};`;\n\n\t\t\t\tif (constructor) {\n\t\t\t\t\tintroBlock += `\\n\\n${i0}` + inheritanceBlock;\n\t\t\t\t} else {\n\t\t\t\t\tconst fn =\n\t\t\t\t\t\t`function ${name} () {` +\n\t\t\t\t\t\t(classFields.length ? `\\n${i1}` + classFields.join(`\\n${i1}`) + `\\n${i1}` : '') +\n\t\t\t\t\t\t(superName\n\t\t\t\t\t\t\t? `\\n${i1}${superName}.apply(this, arguments);\\n${i0}}`\n\t\t\t\t\t\t\t: `}`) +\n\t\t\t\t\t\t(inFunctionExpression ? '' : ';') +\n\t\t\t\t\t\t(this.body.length ? `\\n\\n${i0}` : '');\n\n\t\t\t\t\tinheritanceBlock = fn + inheritanceBlock;\n\t\t\t\t\tintroBlock += inheritanceBlock + `\\n\\n${i0}`;\n\t\t\t\t}\n\t\t\t} else if (!constructor) {\n\t\t\t\tlet fn =\n\t\t\t\t\t'function ' +\n\t\t\t\t\t(namedConstructor ? name + ' ' : '') +\n\t\t\t\t\t'() {' +\n\t\t\t\t\t(classFields.length ? `\\n${i1}` + classFields.join(`\\n${i1}`) + `\\n${i0}` : '') +\n\t\t\t\t\t'}';\n\t\t\t\tif (this.parent.type === 'ClassDeclaration') fn += ';';\n\t\t\t\tif (this.body.length) fn += `\\n\\n${i0}`;\n\n\t\t\t\tintroBlock += fn;\n\t\t\t}\n\n\t\t\tif (constructor) {\n\t\t\t\tif (classFields.length) {\n\t\t\t\t\tcode.appendLeft(constructor.value.body.start + 1, `\\n${i1}` + classFields.join(`\\n${i1}`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst scope = this.findScope(false);\n\n\t\t\tconst prototypeGettersAndSetters = [];\n\t\t\tconst staticGettersAndSetters = [];\n\t\t\tlet prototypeAccessors;\n\t\t\tlet staticAccessors;\n\n\t\t\tthis.body.forEach((method, i) => {\n\t\t\t\tif ((method.kind === 'get' || method.kind === 'set') && transforms.getterSetter) {\n\t\t\t\t\tCompileError.missingTransform(\"getters and setters\", \"getterSetter\", method);\n\t\t\t\t}\n\n\t\t\t\tif (method.type === 'FieldDefinition') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (method.kind === 'constructor') {\n\t\t\t\t\tconst constructorName = namedConstructor ? ' ' + name : '';\n\t\t\t\t\tcode.overwrite(\n\t\t\t\t\t\tmethod.key.start,\n\t\t\t\t\t\tmethod.key.end,\n\t\t\t\t\t\t`function${constructorName}`\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (method.static) {\n\t\t\t\t\tconst len = code.original[method.start + 6] == ' ' ? 7 : 6;\n\t\t\t\t\tcode.remove(method.start, method.start + len);\n\t\t\t\t}\n\n\t\t\t\tconst isAccessor = method.kind !== 'method';\n\t\t\t\tlet lhs;\n\n\t\t\t\tlet methodName = method.key.name;\n\t\t\t\tif (\n\t\t\t\t\treserved[methodName] ||\n\t\t\t\t\tmethod.value.body.scope.references[methodName]\n\t\t\t\t) {\n\t\t\t\t\tmethodName = scope.createIdentifier(methodName);\n\t\t\t\t}\n\n\t\t\t\t// when method name is a string or a number let's pretend it's a computed method\n\n\t\t\t\tlet fake_computed = false;\n\t\t\t\tif (!method.computed && method.key.type === 'Literal') {\n\t\t\t\t\tfake_computed = true;\n\t\t\t\t\tmethod.computed = true;\n\t\t\t\t}\n\n\t\t\t\tif (isAccessor) {\n\t\t\t\t\tif (method.computed) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Computed accessor properties are not currently supported'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tcode.remove(method.start, method.key.start);\n\n\t\t\t\t\tif (method.static) {\n\t\t\t\t\t\tif (!~staticGettersAndSetters.indexOf(method.key.name))\n\t\t\t\t\t\t\tstaticGettersAndSetters.push(method.key.name);\n\t\t\t\t\t\tif (!staticAccessors)\n\t\t\t\t\t\t\tstaticAccessors = scope.createIdentifier('staticAccessors');\n\n\t\t\t\t\t\tlhs = `${staticAccessors}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!~prototypeGettersAndSetters.indexOf(method.key.name))\n\t\t\t\t\t\t\tprototypeGettersAndSetters.push(method.key.name);\n\t\t\t\t\t\tif (!prototypeAccessors)\n\t\t\t\t\t\t\tprototypeAccessors = scope.createIdentifier('prototypeAccessors');\n\n\t\t\t\t\t\tlhs = `${prototypeAccessors}`;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlhs = method.static ? `${name}` : `${name}.prototype`;\n\t\t\t\t}\n\n\t\t\t\tif (!method.computed) lhs += '.';\n\n\t\t\t\tconst insertNewlines =\n\t\t\t\t\t(constructorIndex > 0 && i === constructorIndex + 1) ||\n\t\t\t\t\t(i === 0 && constructorIndex === this.body.length - 1);\n\n\t\t\t\tif (insertNewlines) lhs = `\\n\\n${i0}${lhs}`;\n\n\t\t\t\tlet c = method.key.end;\n\t\t\t\tif (method.computed) {\n\t\t\t\t\tif (fake_computed) {\n\t\t\t\t\t\tcode.prependRight(method.key.start, '[');\n\t\t\t\t\t\tcode.appendLeft(method.key.end, ']');\n\t\t\t\t\t} else {\n\t\t\t\t\t\twhile (code.original[c] !== ']') c += 1;\n\t\t\t\t\t\tc += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst funcName =\n\t\t\t\t\tmethod.computed || isAccessor || !namedFunctions\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: `${methodName} `;\n\t\t\t\tconst rhs =\n\t\t\t\t\t(isAccessor ? `.${method.kind}` : '') +\n\t\t\t\t\t` = ${method.value.async ? 'async ' : ''}function` +\n\t\t\t\t\t(method.value.generator ? '* ' : ' ') +\n\t\t\t\t\tfuncName;\n\t\t\t\tcode.remove(c, method.value.start);\n\t\t\t\tcode.prependRight(method.value.start, rhs);\n\t\t\t\tcode.appendLeft(method.end, ';');\n\n\t\t\t\tif (method.value.generator) code.remove(method.start, method.key.start);\n\n\t\t\t\tlet start = method.key.start;\n\t\t\t\tif (method.computed && !fake_computed) {\n\t\t\t\t\twhile (code.original[start] != '[') {\n\t\t\t\t\t\t--start;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (method.start < start) {\n\t\t\t\t\tcode.overwrite(method.start, start, lhs);\n\t\t\t\t} else {\n\t\t\t\t\tcode.prependRight(method.start, lhs);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (prototypeGettersAndSetters.length || staticGettersAndSetters.length) {\n\t\t\t\tconst intro = [];\n\t\t\t\tconst outro = [];\n\n\t\t\t\tif (prototypeGettersAndSetters.length) {\n\t\t\t\t\tintro.push(\n\t\t\t\t\t\t`var ${prototypeAccessors} = { ${prototypeGettersAndSetters\n\t\t\t\t\t\t\t.map(name => `${name}: { configurable: true }`)\n\t\t\t\t\t\t\t.join(',')} };`\n\t\t\t\t\t);\n\t\t\t\t\toutro.push(\n\t\t\t\t\t\t`Object.defineProperties( ${name}.prototype, ${\n\t\t\t\t\t\t\tprototypeAccessors\n\t\t\t\t\t\t} );`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (staticGettersAndSetters.length) {\n\t\t\t\t\tintro.push(\n\t\t\t\t\t\t`var ${staticAccessors} = { ${staticGettersAndSetters\n\t\t\t\t\t\t\t.map(name => `${name}: { configurable: true }`)\n\t\t\t\t\t\t\t.join(',')} };`\n\t\t\t\t\t);\n\t\t\t\t\toutro.push(`Object.defineProperties( ${name}, ${staticAccessors} );`);\n\t\t\t\t}\n\n\t\t\t\tif (constructor) introBlock += `\\n\\n${i0}`;\n\t\t\t\tintroBlock += intro.join(`\\n${i0}`);\n\t\t\t\tif (!constructor) introBlock += `\\n\\n${i0}`;\n\n\t\t\t\toutroBlock += `\\n\\n${i0}` + outro.join(`\\n${i0}`);\n\t\t\t}\n\n\t\t\tif (constructor) {\n\t\t\t\tcode.appendLeft(constructor.end, introBlock);\n\t\t\t} else {\n\t\t\t\tcode.prependRight(this.start, introBlock);\n\t\t\t}\n\n\t\t\tcode.appendLeft(this.end, outroBlock);\n\t\t}\n\n\t\tsuper.transpile(code, transforms);\n\t}\n}\n","import Node from '../Node.js';\nimport deindent from '../../utils/deindent.js';\n\nexport default class ClassDeclaration extends Node {\n\tinitialise(transforms) {\n\t\tif (this.id) {\n\t\t\tthis.name = this.id.name;\n\t\t\tthis.findScope(true).addDeclaration(this.id, 'class');\n\t\t} else {\n\t\t\tthis.name = this.findScope(true).createIdentifier(\"defaultExport\");\n\t\t}\n\n\t\tsuper.initialise(transforms);\n\t}\n\n\ttranspile(code, transforms) {\n\t\tif (transforms.classes) {\n\t\t\tif (!this.superClass) deindent(this.body, code);\n\n\t\t\tconst superName =\n\t\t\t\tthis.superClass && (this.superClass.name || 'superclass');\n\n\t\t\tconst i0 = this.getIndentation();\n\t\t\tconst i1 = i0 + code.getIndentString();\n\n\t\t\t// if this is an export default statement, we have to move the export to\n\t\t\t// after the declaration, because `export default var Foo = ...` is illegal\n\t\t\tconst isExportDefaultDeclaration = this.parent.type === 'ExportDefaultDeclaration';\n\n\t\t\tif (isExportDefaultDeclaration) {\n\t\t\t\tcode.remove(this.parent.start, this.start);\n\t\t\t}\n\n\t\t\tlet c = this.start;\n\t\t\tif (this.id) {\n\t\t\t\tcode.overwrite(c, this.id.start, 'var ');\n\t\t\t\tc = this.id.end;\n\t\t\t} else {\n\t\t\t\tcode.prependLeft(c, `var ${this.name}`);\n\t\t\t}\n\n\t\t\tif (this.superClass) {\n\t\t\t\tif (this.superClass.end === this.body.start) {\n\t\t\t\t\tcode.remove(c, this.superClass.start);\n\t\t\t\t\tcode.appendLeft(c, ` = /*@__PURE__*/(function (${superName}) {\\n${i1}`);\n\t\t\t\t} else {\n\t\t\t\t\tcode.overwrite(c, this.superClass.start, ' = ');\n\t\t\t\t\tcode.overwrite(\n\t\t\t\t\t\tthis.superClass.end,\n\t\t\t\t\t\tthis.body.start,\n\t\t\t\t\t\t`/*@__PURE__*/(function (${superName}) {\\n${i1}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (c === this.body.start) {\n\t\t\t\t\tcode.appendLeft(c, ' = ');\n\t\t\t\t} else {\n\t\t\t\t\tcode.overwrite(c, this.body.start, ' = ');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.body.transpile(code, transforms, !!this.superClass, superName);\n\n\t\t\tconst syntheticDefaultExport =\n\t\t\t\tisExportDefaultDeclaration\n\t\t\t\t\t? `\\n\\n${i0}export default ${this.name};`\n\t\t\t\t\t: '';\n\t\t\tif (this.superClass) {\n\t\t\t\tcode.appendLeft(this.end, `\\n\\n${i1}return ${this.name};\\n${i0}}(`);\n\t\t\t\tcode.move(this.superClass.start, this.superClass.end, this.end);\n\t\t\t\tcode.prependRight(this.end, `));${syntheticDefaultExport}`);\n\t\t\t} else if (syntheticDefaultExport) {\n\t\t\t\tcode.prependRight(this.end, syntheticDefaultExport);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.body.transpile(code, transforms, false, null);\n\t\t}\n\t}\n}\n","// TODO this function is slightly flawed – it works on the original string,\n// not its current edited state.\n// That's not a problem for the way that it's currently used, but it could\n// be in future...\nexport default function deindent(node, code) {\n\tconst start = node.start;\n\tconst end = node.end;\n\n\tconst indentStr = code.getIndentString();\n\tconst indentStrLen = indentStr.length;\n\tconst indentStart = start - indentStrLen;\n\n\tif (\n\t\t!node.program.indentExclusions[indentStart] &&\n\t\tcode.original.slice(indentStart, start) === indentStr\n\t) {\n\t\tcode.remove(indentStart, start);\n\t}\n\n\tconst pattern = new RegExp(indentStr + '\\\\S', 'g');\n\tconst slice = code.original.slice(start, end);\n\tlet match;\n\n\twhile ((match = pattern.exec(slice))) {\n\t\tconst removeStart = start + match.index;\n\t\tif (!node.program.indentExclusions[removeStart]) {\n\t\t\tcode.remove(removeStart, removeStart + indentStrLen);\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ClassExpression extends Node {\n\tinitialise(transforms) {\n\t\tthis.name = (this.id\n\t\t\t? this.id.name\n\t\t\t: this.parent.type === 'VariableDeclarator'\n\t\t\t\t? this.parent.id.name\n\t\t\t\t: this.parent.type !== 'AssignmentExpression'\n\t\t\t\t\t? null\n\t\t\t\t\t: this.parent.left.type === 'Identifier'\n\t\t\t\t\t\t? this.parent.left.name\n\t\t\t\t\t\t: this.parent.left.type === 'MemberExpression'\n\t\t\t\t\t\t\t? this.parent.left.property.name\n\t\t\t\t\t\t\t: null) || this.findScope(true).createIdentifier('anonymous');\n\n\t\tsuper.initialise(transforms);\n\t}\n\n\ttranspile(code, transforms) {\n\t\tif (transforms.classes) {\n\t\t\tconst superName =\n\t\t\t\tthis.superClass && (this.superClass.name || 'superclass');\n\n\t\t\tconst i0 = this.getIndentation();\n\t\t\tconst i1 = i0 + code.getIndentString();\n\n\t\t\tif (this.superClass) {\n\t\t\t\tcode.remove(this.start, this.superClass.start);\n\t\t\t\tcode.remove(this.superClass.end, this.body.start);\n\t\t\t\tcode.appendRight(this.start, `/*@__PURE__*/(function (${superName}) {\\n${i1}`);\n\t\t\t} else {\n\t\t\t\tcode.overwrite(this.start, this.body.start, `/*@__PURE__*/(function () {\\n${i1}`);\n\t\t\t}\n\n\t\t\tthis.body.transpile(code, transforms, true, superName);\n\n\t\t\tlet superClass = '';\n\t\t\tif (this.superClass) {\n\t\t\t\tsuperClass = code.slice(this.superClass.start, this.superClass.end);\n\t\t\t\tcode.remove(this.superClass.start, this.superClass.end);\n\t\t\t}\n\t\t\tcode.appendLeft(this.end, `\\n\\n${i1}return ${this.name};\\n${i0}}(${superClass}))`);\n\t\t} else {\n\t\t\tthis.body.transpile(code, transforms, false);\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\nimport { loopStatement } from '../../utils/patterns.js';\n\nexport default class ContinueStatement extends Node {\n\ttranspile(code) {\n\t\tconst loop = this.findNearest(loopStatement);\n\t\tif (loop.shouldRewriteAsFunction) {\n\t\t\tif (this.label)\n\t\t\t\tthrow new CompileError(\n\t\t\t\t\t'Labels are not currently supported in a loop with locally-scoped variables',\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\tcode.overwrite(this.start, this.start + 8, 'return');\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class ExportDefaultDeclaration extends Node {\n\tinitialise(transforms) {\n\t\tif (transforms.moduleExport)\n\t\t\tCompileError.missingTransform(\"export\", \"moduleExport\", this);\n\t\tsuper.initialise(transforms);\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class ExportNamedDeclaration extends Node {\n\tinitialise(transforms) {\n\t\tif (transforms.moduleExport)\n\t\t\tCompileError.missingTransform(\"export\", \"moduleExport\", this);\n\t\tsuper.initialise(transforms);\n\t}\n}\n","import Node from '../../Node.js';\n\nexport default class LoopStatement extends Node {\n\tfindScope(functionScope) {\n\t\treturn functionScope || !this.createdScope\n\t\t\t? this.parent.findScope(functionScope)\n\t\t\t: this.body.scope;\n\t}\n\n\tinitialise(transforms) {\n\t\tthis.body.createScope();\n\t\tthis.createdScope = true;\n\n\t\t// this is populated as and when reassignments occur\n\t\tthis.reassigned = Object.create(null);\n\t\tthis.aliases = Object.create(null);\n\n\t\tthis.thisRefs = [];\n\n\t\tsuper.initialise(transforms);\n\n\t\tif (transforms.letConst) {\n\t\t\t// see if any block-scoped declarations are referenced\n\t\t\t// inside function expressions\n\t\t\tconst names = Object.keys(this.body.scope.declarations);\n\n\t\t\tlet i = names.length;\n\t\t\twhile (i--) {\n\t\t\t\tconst name = names[i];\n\t\t\t\tconst declaration = this.body.scope.declarations[name];\n\n\t\t\t\tlet j = declaration.instances.length;\n\t\t\t\twhile (j--) {\n\t\t\t\t\tconst instance = declaration.instances[j];\n\t\t\t\t\tconst nearestFunctionExpression = instance.findNearest(/Function/);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tnearestFunctionExpression &&\n\t\t\t\t\t\tnearestFunctionExpression.depth > this.depth\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.shouldRewriteAsFunction = true;\n\t\t\t\t\t\tfor (const node of this.thisRefs) {\n\t\t\t\t\t\t\tnode.alias = node.alias || node.findLexicalBoundary().getThisAlias();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.shouldRewriteAsFunction) break;\n\t\t\t}\n\t\t}\n\t}\n\n\ttranspile(code, transforms) {\n\t\tconst needsBlock =\n\t\t\tthis.type != 'ForOfStatement' &&\n\t\t\t(this.body.type !== 'BlockStatement' ||\n\t\t\t\t(this.body.type === 'BlockStatement' && this.body.synthetic));\n\n\t\tif (this.shouldRewriteAsFunction) {\n\t\t\tconst i0 = this.getIndentation();\n\t\t\tconst i1 = i0 + code.getIndentString();\n\n\t\t\tconst argString = this.args ? ` ${this.args.join(', ')} ` : '';\n\t\t\tconst paramString = this.params ? ` ${this.params.join(', ')} ` : '';\n\n\t\t\tconst functionScope = this.findScope(true);\n\t\t\tconst loop = functionScope.createIdentifier('loop');\n\n\t\t\tconst before =\n\t\t\t\t`var ${loop} = function (${paramString}) ` +\n\t\t\t\t(this.body.synthetic ? `{\\n${i0}${code.getIndentString()}` : '');\n\t\t\tconst after = (this.body.synthetic ? `\\n${i0}}` : '') + `;\\n\\n${i0}`;\n\n\t\t\tcode.prependRight(this.body.start, before);\n\t\t\tcode.appendLeft(this.body.end, after);\n\t\t\tcode.move(this.start, this.body.start, this.body.end);\n\n\t\t\tif (this.canBreak || this.canReturn) {\n\t\t\t\tconst returned = functionScope.createIdentifier('returned');\n\n\t\t\t\tlet insert = `{\\n${i1}var ${returned} = ${loop}(${argString});\\n`;\n\t\t\t\tif (this.canBreak)\n\t\t\t\t\tinsert += `\\n${i1}if ( ${returned} === 'break' ) break;`;\n\t\t\t\tif (this.canReturn)\n\t\t\t\t\tinsert += `\\n${i1}if ( ${returned} ) return ${returned}.v;`;\n\t\t\t\tinsert += `\\n${i0}}`;\n\n\t\t\t\tcode.prependRight(this.body.end, insert);\n\t\t\t} else {\n\t\t\t\tconst callExpression = `${loop}(${argString});`;\n\n\t\t\t\tif (this.type === 'DoWhileStatement') {\n\t\t\t\t\tcode.overwrite(\n\t\t\t\t\t\tthis.start,\n\t\t\t\t\t\tthis.body.start,\n\t\t\t\t\t\t`do {\\n${i1}${callExpression}\\n${i0}}`\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tcode.prependRight(this.body.end, callExpression);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (needsBlock) {\n\t\t\tcode.appendLeft(this.body.start, '{ ');\n\t\t\tcode.prependRight(this.body.end, ' }');\n\t\t}\n\n\t\tsuper.transpile(code, transforms);\n\t}\n}\n","import LoopStatement from './shared/LoopStatement.js';\nimport extractNames from '../extractNames.js';\n\nexport default class ForStatement extends LoopStatement {\n\tfindScope(functionScope) {\n\t\treturn functionScope || !this.createdScope\n\t\t\t? this.parent.findScope(functionScope)\n\t\t\t: this.body.scope;\n\t}\n\n\ttranspile(code, transforms) {\n\t\tconst i1 = this.getIndentation() + code.getIndentString();\n\n\t\tif (this.shouldRewriteAsFunction) {\n\t\t\t// which variables are declared in the init statement?\n\t\t\tconst names = this.init.type === 'VariableDeclaration'\n\t\t\t\t? this.init.declarations.map(declarator => extractNames(declarator.id))\n\t\t\t\t: [];\n\n\t\t\tconst aliases = this.aliases;\n\n\t\t\tthis.args = names.map(\n\t\t\t\tname => (name in this.aliases ? this.aliases[name].outer : name)\n\t\t\t);\n\t\t\tthis.params = names.map(\n\t\t\t\tname => (name in this.aliases ? this.aliases[name].inner : name)\n\t\t\t);\n\n\t\t\tconst updates = Object.keys(this.reassigned).map(\n\t\t\t\tname => `${aliases[name].outer} = ${aliases[name].inner};`\n\t\t\t);\n\n\t\t\tif (updates.length) {\n\t\t\t\tif (this.body.synthetic) {\n\t\t\t\t\tcode.appendLeft(this.body.body[0].end, `; ${updates.join(` `)}`);\n\t\t\t\t} else {\n\t\t\t\t\tconst lastStatement = this.body.body[this.body.body.length - 1];\n\t\t\t\t\tcode.appendLeft(\n\t\t\t\t\t\tlastStatement.end,\n\t\t\t\t\t\t`\\n\\n${i1}${updates.join(`\\n${i1}`)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsuper.transpile(code, transforms);\n\t}\n}\n","import LoopStatement from './shared/LoopStatement.js';\nimport destructure from '../../utils/destructure.js';\nimport extractNames from '../extractNames.js';\n\nexport default class ForInStatement extends LoopStatement {\n\tfindScope(functionScope) {\n\t\treturn functionScope || !this.createdScope\n\t\t\t? this.parent.findScope(functionScope)\n\t\t\t: this.body.scope;\n\t}\n\n\ttranspile(code, transforms) {\n\t\tconst hasDeclaration = this.left.type === 'VariableDeclaration';\n\n\t\tif (this.shouldRewriteAsFunction) {\n\t\t\t// which variables are declared in the init statement?\n\t\t\tconst names = hasDeclaration\n\t\t\t\t? this.left.declarations.map(declarator => extractNames(declarator.id))\n\t\t\t\t: [];\n\n\t\t\tthis.args = names.map(\n\t\t\t\tname => (name in this.aliases ? this.aliases[name].outer : name)\n\t\t\t);\n\t\t\tthis.params = names.map(\n\t\t\t\tname => (name in this.aliases ? this.aliases[name].inner : name)\n\t\t\t);\n\t\t}\n\n\t\tsuper.transpile(code, transforms);\n\n\t\tconst maybePattern = hasDeclaration ? this.left.declarations[0].id : this.left;\n\t\tif (maybePattern.type !== 'Identifier') {\n\t\t\tthis.destructurePattern(code, maybePattern, hasDeclaration);\n\t\t}\n\t}\n\n\tdestructurePattern(code, pattern, isDeclaration) {\n\t\tconst scope = this.findScope(true);\n\t\tconst i0 = this.getIndentation();\n\t\tconst i1 = i0 + code.getIndentString();\n\n\t\tconst ref = scope.createIdentifier('ref');\n\n\t\tconst bodyStart = this.body.body.length ? this.body.body[0].start : this.body.start + 1;\n\n\t\tcode.move(pattern.start, pattern.end, bodyStart);\n\n\t\tcode.prependRight(pattern.end, isDeclaration ? ref : `var ${ref}`);\n\n\t\tconst statementGenerators = [];\n\t\tdestructure(\n\t\t\tcode,\n\t\t\tid => scope.createIdentifier(id),\n\t\t\t({ name }) => scope.resolveName(name),\n\t\t\tpattern,\n\t\t\tref,\n\t\t\tfalse,\n\t\t\tstatementGenerators\n\t\t);\n\n\t\tlet suffix = `;\\n${i1}`;\n\t\tstatementGenerators.forEach((fn, i) => {\n\t\t\tif (i === statementGenerators.length - 1) {\n\t\t\t\tsuffix = `;\\n\\n${i1}`;\n\t\t\t}\n\n\t\t\tfn(bodyStart, '', suffix);\n\t\t});\n\t}\n}\n","import LoopStatement from './shared/LoopStatement.js';\nimport CompileError from '../../utils/CompileError.js';\nimport destructure from '../../utils/destructure.js';\n\nexport default class ForOfStatement extends LoopStatement {\n\tinitialise(transforms) {\n\t\tif (transforms.forOf && !transforms.dangerousForOf)\n\t\t\tCompileError.missingTransform(\"for-of statements\", \"forOf\", this, \"dangerousForOf\");\n\t\tif (this.await && transforms.asyncAwait)\n\t\t\tCompileError.missingTransform(\"for-await-of statements\", \"asyncAwait\", this);\n\t\tsuper.initialise(transforms);\n\t}\n\n\ttranspile(code, transforms) {\n\t\tsuper.transpile(code, transforms);\n\t\tif (!transforms.dangerousForOf) return;\n\n\t\t// edge case (#80)\n\t\tif (!this.body.body[0]) {\n\t\t\tif (\n\t\t\t\tthis.left.type === 'VariableDeclaration' &&\n\t\t\t\tthis.left.kind === 'var'\n\t\t\t) {\n\t\t\t\tcode.remove(this.start, this.left.start);\n\t\t\t\tcode.appendLeft(this.left.end, ';');\n\t\t\t\tcode.remove(this.left.end, this.end);\n\t\t\t} else {\n\t\t\t\tcode.remove(this.start, this.end);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst scope = this.findScope(true);\n\t\tconst i0 = this.getIndentation();\n\t\tconst i1 = i0 + code.getIndentString();\n\n\t\tconst key = scope.createIdentifier('i');\n\t\tconst list = scope.createIdentifier('list');\n\n\t\tif (this.body.synthetic) {\n\t\t\tcode.prependRight(this.left.start, `{\\n${i1}`);\n\t\t\tcode.appendLeft(this.body.body[0].end, `\\n${i0}}`);\n\t\t}\n\n\t\tconst bodyStart = this.body.body[0].start;\n\n\t\tcode.remove(this.left.end, this.right.start);\n\t\tcode.move(this.left.start, this.left.end, bodyStart);\n\n\t\tcode.prependRight(this.right.start, `var ${key} = 0, ${list} = `);\n\t\tcode.appendLeft(this.right.end, `; ${key} < ${list}.length; ${key} += 1`);\n\n\t\tconst isDeclaration = this.left.type === 'VariableDeclaration';\n\t\tconst maybeDestructuring = isDeclaration ? this.left.declarations[0].id : this.left;\n\t\tif (maybeDestructuring.type !== 'Identifier') {\n\t\t\tconst statementGenerators = [];\n\t\t\tconst ref = scope.createIdentifier('ref');\n\t\t\tdestructure(\n\t\t\t\tcode,\n\t\t\t\tid => scope.createIdentifier(id),\n\t\t\t\t({ name }) => scope.resolveName(name),\n\t\t\t\tmaybeDestructuring,\n\t\t\t\tref,\n\t\t\t\t!isDeclaration,\n\t\t\t\tstatementGenerators\n\t\t\t);\n\n\t\t\tlet suffix = `;\\n${i1}`;\n\t\t\tstatementGenerators.forEach((fn, i) => {\n\t\t\t\tif (i === statementGenerators.length - 1) {\n\t\t\t\t\tsuffix = `;\\n\\n${i1}`;\n\t\t\t\t}\n\n\t\t\t\tfn(bodyStart, '', suffix);\n\t\t\t});\n\n\t\t\tif (isDeclaration) {\n\t\t\t\tcode.appendLeft(this.left.start + this.left.kind.length + 1, ref);\n\t\t\t\tcode.appendLeft(this.left.end, ` = ${list}[${key}];\\n${i1}`);\n\t\t\t} else {\n\t\t\t\tcode.appendLeft(this.left.end, `var ${ref} = ${list}[${key}];\\n${i1}`);\n\t\t\t}\n\t\t} else {\n\t\t\tcode.appendLeft(this.left.end, ` = ${list}[${key}];\\n\\n${i1}`);\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\nimport removeTrailingComma from '../../utils/removeTrailingComma.js';\n\nexport default class FunctionDeclaration extends Node {\n\tinitialise(transforms) {\n\t\tif (this.generator && transforms.generator) {\n\t\t\tCompileError.missingTransform(\"generators\", \"generator\", this);\n\t\t}\n\t\tif (this.async && transforms.asyncAwait) {\n\t\t\tCompileError.missingTransform(\"async functions\", \"asyncAwait\", this);\n\t\t}\n\n\t\tthis.body.createScope();\n\n\t\tif (this.id) {\n\t\t\tthis.findScope(true).addDeclaration(this.id, 'function');\n\t\t}\n\t\tsuper.initialise(transforms);\n\t}\n\n\ttranspile(code, transforms) {\n\t\tsuper.transpile(code, transforms);\n\t\tif (transforms.trailingFunctionCommas && this.params.length) {\n\t\t\tremoveTrailingComma(code, this.params[this.params.length - 1].end);\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\nimport removeTrailingComma from '../../utils/removeTrailingComma.js';\n\nexport default class FunctionExpression extends Node {\n\tinitialise(transforms) {\n\t\tif (this.generator && transforms.generator) {\n\t\t\tCompileError.missingTransform(\"generators\", \"generator\", this);\n\t\t}\n\t\tif (this.async && transforms.asyncAwait) {\n\t\t\tCompileError.missingTransform(\"async functions\", \"asyncAwait\", this);\n\t\t}\n\n\t\tthis.body.createScope();\n\n\t\tif (this.id) {\n\t\t\t// function expression IDs belong to the child scope...\n\t\t\tthis.body.scope.addDeclaration(this.id, 'function');\n\t\t}\n\n\t\tsuper.initialise(transforms);\n\n\t\tconst parent = this.parent;\n\t\tlet methodName;\n\n\t\tif (\n\t\t\ttransforms.conciseMethodProperty &&\n\t\t\tparent.type === 'Property' &&\n\t\t\tparent.kind === 'init' &&\n\t\t\tparent.method &&\n\t\t\tparent.key.type === 'Identifier'\n\t\t) {\n\t\t\t// object literal concise method\n\t\t\tmethodName = parent.key.name;\n\t\t} else if (\n\t\t\ttransforms.classes &&\n\t\t\tparent.type === 'MethodDefinition' &&\n\t\t\tparent.kind === 'method' &&\n\t\t\tparent.key.type === 'Identifier'\n\t\t) {\n\t\t\t// method definition in a class\n\t\t\tmethodName = parent.key.name;\n\t\t} else if (this.id && this.id.type === 'Identifier') {\n\t\t\t// naked function expression\n\t\t\tmethodName = this.id.alias || this.id.name;\n\t\t}\n\n\t\tif (methodName) {\n\t\t\tfor (const param of this.params) {\n\t\t\t\tif (param.type === 'Identifier' && methodName === param.name) {\n\t\t\t\t\t// workaround for Safari 9/WebKit bug:\n\t\t\t\t\t// https://gitlab.com/Rich-Harris/buble/issues/154\n\t\t\t\t\t// change parameter name when same as method name\n\n\t\t\t\t\tconst scope = this.body.scope;\n\t\t\t\t\tconst declaration = scope.declarations[methodName];\n\n\t\t\t\t\tconst alias = scope.createIdentifier(methodName);\n\t\t\t\t\tparam.alias = alias;\n\n\t\t\t\t\tfor (const identifier of declaration.instances) {\n\t\t\t\t\t\tidentifier.alias = alias;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\ttranspile(code, transforms) {\n\t\tsuper.transpile(code, transforms);\n\t\tif (transforms.trailingFunctionCommas && this.params.length) {\n\t\t\tremoveTrailingComma(code, this.params[this.params.length - 1].end);\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport isReference from '../../utils/isReference.js';\nimport { loopStatement } from '../../utils/patterns.js';\n\nexport default class Identifier extends Node {\n\tfindScope(functionScope) {\n\t\tif (this.parent.params && ~this.parent.params.indexOf(this)) {\n\t\t\treturn this.parent.body.scope;\n\t\t}\n\n\t\tif (this.parent.type === 'FunctionExpression' && this === this.parent.id) {\n\t\t\treturn this.parent.body.scope;\n\t\t}\n\n\t\treturn this.parent.findScope(functionScope);\n\t}\n\n\tinitialise(transforms) {\n\t\tif (isReference(this, this.parent)) {\n\t\t\tif (\n\t\t\t\ttransforms.arrow &&\n\t\t\t\tthis.name === 'arguments' &&\n\t\t\t\t!this.findScope(false).contains(this.name)\n\t\t\t) {\n\t\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\n\t\t\t\tconst arrowFunction = this.findNearest('ArrowFunctionExpression');\n\t\t\t\tconst loop = this.findNearest(loopStatement);\n\n\t\t\t\tif (arrowFunction && arrowFunction.depth > lexicalBoundary.depth) {\n\t\t\t\t\tthis.alias = lexicalBoundary.getArgumentsAlias();\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tloop &&\n\t\t\t\t\tloop.body.contains(this) &&\n\t\t\t\t\tloop.depth > lexicalBoundary.depth\n\t\t\t\t) {\n\t\t\t\t\tthis.alias = lexicalBoundary.getArgumentsAlias();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.findScope(false).addReference(this);\n\t\t}\n\t}\n\n\ttranspile(code) {\n\t\tif (this.alias) {\n\t\t\tcode.overwrite(this.start, this.end, this.alias, {\n\t\t\t\tstoreName: true,\n\t\t\t\tcontentOnly: true\n\t\t\t});\n\t\t}\n\t}\n}\n","export default function isReference(node, parent) {\n\tif (node.type === 'MemberExpression') {\n\t\treturn !node.computed && isReference(node.object, node);\n\t}\n\n\tif (node.type === 'Identifier') {\n\t\t// the only time we could have an identifier node without a parent is\n\t\t// if it's the entire body of a function without a block statement –\n\t\t// i.e. an arrow function expression like `a => a`\n\t\tif (!parent) return true;\n\n\t\tif (/(Function|Class)Expression/.test(parent.type)) return false;\n\n\t\tif (parent.type === 'VariableDeclarator') return node === parent.init;\n\n\t\t// TODO is this right?\n\t\tif (\n\t\t\tparent.type === 'MemberExpression' ||\n\t\t\tparent.type === 'MethodDefinition'\n\t\t) {\n\t\t\treturn parent.computed || node === parent.object;\n\t\t}\n\n\t\tif (parent.type === 'ArrayPattern') return false;\n\n\t\t// disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`\n\t\tif (parent.type === 'Property') {\n\t\t\tif (parent.parent.type === 'ObjectPattern') return false;\n\t\t\treturn parent.computed || node === parent.value;\n\t\t}\n\n\t\t// disregard the `bar` in `class Foo { bar () {...} }`\n\t\tif (parent.type === 'MethodDefinition') return false;\n\n\t\t// disregard the `bar` in `export { foo as bar }`\n\t\tif (parent.type === 'ExportSpecifier' && node !== parent.local)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class IfStatement extends Node {\n\tinitialise(transforms) {\n\t\tsuper.initialise(transforms);\n\t}\n\n\ttranspile(code, transforms) {\n\t\tif (\n\t\t\tthis.consequent.type !== 'BlockStatement' ||\n\t\t\t(this.consequent.type === 'BlockStatement' && this.consequent.synthetic)\n\t\t) {\n\t\t\tcode.appendLeft(this.consequent.start, '{ ');\n\t\t\tcode.prependRight(this.consequent.end, ' }');\n\t\t}\n\n\t\tif (\n\t\t\tthis.alternate &&\n\t\t\tthis.alternate.type !== 'IfStatement' &&\n\t\t\t(this.alternate.type !== 'BlockStatement' ||\n\t\t\t\t(this.alternate.type === 'BlockStatement' && this.alternate.synthetic))\n\t\t) {\n\t\t\tcode.appendLeft(this.alternate.start, '{ ');\n\t\t\tcode.prependRight(this.alternate.end, ' }');\n\t\t}\n\n\t\tsuper.transpile(code, transforms);\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class Import extends Node {\n\tinitialise(transforms) {\n\t\tif (transforms.moduleImport) {\n\t\t\tCompileError.missingTransform(\"dynamic import expressions\", \"moduleImport\", this);\n\t\t}\n\t\tsuper.initialise(transforms);\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class ImportDeclaration extends Node {\n\tinitialise(transforms) {\n\t\tif (transforms.moduleImport)\n\t\t\tCompileError.missingTransform(\"import\", \"moduleImport\", this);\n\t\tsuper.initialise(transforms);\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ImportDefaultSpecifier extends Node {\n\tinitialise(transforms) {\n\t\tthis.findScope(true).addDeclaration(this.local, 'import');\n\t\tsuper.initialise(transforms);\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ImportSpecifier extends Node {\n\tinitialise(transforms) {\n\t\tthis.findScope(true).addDeclaration(this.local, 'import');\n\t\tsuper.initialise(transforms);\n\t}\n}\n","import Node from '../Node.js';\n\nconst hasDashes = val => /-/.test(val);\n\nconst formatKey = key => (hasDashes(key) ? `'${key}'` : key);\n\nconst formatVal = val => (val ? '' : 'true');\n\nexport default class JSXAttribute extends Node {\n\ttranspile(code, transforms) {\n\t\tconst { start, name } = this.name;\n\n\t\t// Overwrite equals sign if value is present.\n\t\tconst end = this.value ? this.value.start : this.name.end;\n\n\t\tcode.overwrite(start, end, `${formatKey(name)}: ${formatVal(this.value)}`);\n\n\t\tsuper.transpile(code, transforms);\n\t}\n}\n","import Node from '../Node.js';\n\nfunction containsNewLine(node) {\n\treturn (\n\t\tnode.type === 'JSXText' && !/\\S/.test(node.value) && /\\n/.test(node.value)\n\t);\n}\n\nexport default class JSXClosingElement extends Node {\n\ttranspile(code) {\n\t\tlet spaceBeforeParen = true;\n\n\t\tconst lastChild = this.parent.children[this.parent.children.length - 1];\n\n\t\t// omit space before closing paren if\n\t\t//   a) this is on a separate line, or\n\t\t//   b) there are no children but there are attributes\n\t\tif (\n\t\t\t(lastChild && containsNewLine(lastChild)) ||\n\t\t\tthis.parent.openingElement.attributes.length\n\t\t) {\n\t\t\tspaceBeforeParen = false;\n\t\t}\n\n\t\tcode.overwrite(this.start, this.end, spaceBeforeParen ? ' )' : ')');\n\t}\n}\n","import Node from '../Node.js';\n\nfunction containsNewLine(node) {\n\treturn (\n\t\tnode.type === 'JSXText' && !/\\S/.test(node.value) && /\\n/.test(node.value)\n\t);\n}\n\nexport default class JSXClosingFragment extends Node {\n\ttranspile(code) {\n\t\tlet spaceBeforeParen = true;\n\n\t\tconst lastChild = this.parent.children[this.parent.children.length - 1];\n\n\t\t// omit space before closing paren if this is on a separate line\n\t\tif (lastChild && containsNewLine(lastChild)) {\n\t\t\tspaceBeforeParen = false;\n\t\t}\n\n\t\tcode.overwrite(this.start, this.end, spaceBeforeParen ? ' )' : ')');\n\t}\n}\n","import Node from '../Node.js';\n\nfunction normalise(str, removeTrailingWhitespace) {\n\n\tstr = str.replace(/\\u00a0/g, '&nbsp;');\n\n\tif (removeTrailingWhitespace && /\\n/.test(str)) {\n\t\tstr = str.replace(/\\s+$/, '');\n\t}\n\n\tstr = str\n\t\t.replace(/^\\n\\r?\\s+/, '') // remove leading newline + space\n\t\t.replace(/\\s*\\n\\r?\\s*/gm, ' '); // replace newlines with spaces\n\n\t// TODO prefer single quotes?\n\treturn JSON.stringify(str);\n}\n\nexport default class JSXElement extends Node {\n\ttranspile(code, transforms) {\n\t\tsuper.transpile(code, transforms);\n\n\t\tconst children = this.children.filter(child => {\n\t\t\tif (child.type !== 'JSXText') return true;\n\n\t\t\t// remove whitespace-only literals, unless on a single line\n\t\t\treturn /\\S/.test(child.raw) || !/\\n/.test(child.raw);\n\t\t});\n\n\t\tif (children.length) {\n\t\t\tlet c = (this.openingElement || this.openingFragment).end;\n\n\t\t\tlet i;\n\t\t\tfor (i = 0; i < children.length; i += 1) {\n\t\t\t\tconst child = children[i];\n\n\t\t\t\tif (\n\t\t\t\t\tchild.type === 'JSXExpressionContainer' &&\n\t\t\t\t\tchild.expression.type === 'JSXEmptyExpression'\n\t\t\t\t) {\n\t\t\t\t\t// empty block is a no op\n\t\t\t\t} else {\n\t\t\t\t\tconst tail =\n\t\t\t\t\t\tcode.original[c] === '\\n' && child.type !== 'JSXText' ? '' : ' ';\n\t\t\t\t\tcode.appendLeft(c, `,${tail}`);\n\t\t\t\t}\n\n\t\t\t\tif (child.type === 'JSXText') {\n\t\t\t\t\tconst str = normalise(child.value, i === children.length - 1);\n\t\t\t\t\tcode.overwrite(child.start, child.end, str);\n\t\t\t\t}\n\n\t\t\t\tc = child.end;\n\t\t\t}\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nconst nonAsciiLsOrPs = /[\\u2028-\\u2029]/g;\n\nexport default class Literal extends Node {\n\tinitialise() {\n\t\tif (typeof this.value === 'string') {\n\t\t\tthis.program.indentExclusionElements.push(this);\n\t\t}\n\t}\n\n\ttranspile(code, transforms) {\n\t\tif (transforms.numericLiteral) {\n\t\t\tif (this.raw.match(/^0[bo]/i)) {\n\t\t\t\tcode.overwrite(this.start, this.end, String(this.value), {\n\t\t\t\t\tstoreName: true,\n\t\t\t\t\tcontentOnly: true\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (typeof this.value === \"string\" && this.value.match(nonAsciiLsOrPs)) {\n\t\t\tcode.overwrite(\n\t\t\t\tthis.start,\n\t\t\t\tthis.end,\n\t\t\t\tthis.raw.replace(nonAsciiLsOrPs, m => m == '\\u2028' ? '\\\\u2028' : '\\\\u2029'),\n\t\t\t\t{\n\t\t\t\t\tcontentOnly: true\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n}\n","import ArrayExpression from './ArrayExpression.js';\nimport ArrowFunctionExpression from './ArrowFunctionExpression.js';\nimport AssignmentExpression from './AssignmentExpression.js';\nimport AwaitExpression from './AwaitExpression.js';\nimport BinaryExpression from './BinaryExpression.js';\nimport BreakStatement from './BreakStatement.js';\nimport CallExpression from './CallExpression.js';\nimport ClassBody from './ClassBody.js';\nimport ClassDeclaration from './ClassDeclaration.js';\nimport ClassExpression from './ClassExpression.js';\nimport ContinueStatement from './ContinueStatement.js';\nimport ExportDefaultDeclaration from './ExportDefaultDeclaration.js';\nimport ExportNamedDeclaration from './ExportNamedDeclaration.js';\nimport ForStatement from './ForStatement.js';\nimport ForInStatement from './ForInStatement.js';\nimport ForOfStatement from './ForOfStatement.js';\nimport FunctionDeclaration from './FunctionDeclaration.js';\nimport FunctionExpression from './FunctionExpression.js';\nimport Identifier from './Identifier.js';\nimport IfStatement from './IfStatement.js';\nimport Import from './Import.js';\nimport ImportDeclaration from './ImportDeclaration.js';\nimport ImportDefaultSpecifier from './ImportDefaultSpecifier.js';\nimport ImportSpecifier from './ImportSpecifier.js';\nimport JSXAttribute from './JSXAttribute.js';\nimport JSXClosingElement from './JSXClosingElement.js';\nimport JSXClosingFragment from './JSXClosingFragment.js';\nimport JSXElement from './JSXElement.js';\nimport JSXExpressionContainer from './JSXExpressionContainer.js';\nimport JSXFragment from './JSXFragment.js';\nimport JSXOpeningElement from './JSXOpeningElement.js';\nimport JSXOpeningFragment from './JSXOpeningFragment.js';\nimport JSXSpreadAttribute from './JSXSpreadAttribute.js';\nimport Literal from './Literal.js';\nimport LoopStatement from './shared/LoopStatement.js';\nimport MemberExpression from './MemberExpression.js';\nimport NewExpression from './NewExpression.js';\nimport ObjectExpression from './ObjectExpression.js';\nimport Property from './Property.js';\nimport ReturnStatement from './ReturnStatement.js';\nimport Super from './Super.js';\nimport TaggedTemplateExpression from './TaggedTemplateExpression.js';\nimport TemplateElement from './TemplateElement.js';\nimport TemplateLiteral from './TemplateLiteral.js';\nimport ThisExpression from './ThisExpression.js';\nimport UpdateExpression from './UpdateExpression.js';\nimport VariableDeclaration from './VariableDeclaration.js';\nimport VariableDeclarator from './VariableDeclarator.js';\n\nexport default {\n\tArrayExpression,\n\tArrowFunctionExpression,\n\tAssignmentExpression,\n\tAwaitExpression,\n\tBinaryExpression,\n\tBreakStatement,\n\tCallExpression,\n\tClassBody,\n\tClassDeclaration,\n\tClassExpression,\n\tContinueStatement,\n\tDoWhileStatement: LoopStatement,\n\tExportNamedDeclaration,\n\tExportDefaultDeclaration,\n\tForStatement,\n\tForInStatement,\n\tForOfStatement,\n\tFunctionDeclaration,\n\tFunctionExpression,\n\tIdentifier,\n\tIfStatement,\n\tImport,\n\tImportDeclaration,\n\tImportDefaultSpecifier,\n\tImportSpecifier,\n\tJSXAttribute,\n\tJSXClosingElement,\n\tJSXClosingFragment,\n\tJSXElement,\n\tJSXExpressionContainer,\n\tJSXFragment,\n\tJSXOpeningElement,\n\tJSXOpeningFragment,\n\tJSXSpreadAttribute,\n\tLiteral,\n\tMemberExpression,\n\tNewExpression,\n\tObjectExpression,\n\tProperty,\n\tReturnStatement,\n\tSuper,\n\tTaggedTemplateExpression,\n\tTemplateElement,\n\tTemplateLiteral,\n\tThisExpression,\n\tUpdateExpression,\n\tVariableDeclaration,\n\tVariableDeclarator,\n\tWhileStatement: LoopStatement\n};\n","import Node from '../Node.js';\n\nexport default class JSXExpressionContainer extends Node {\n\ttranspile(code, transforms) {\n\t\tcode.remove(this.start, this.expression.start);\n\t\tcode.remove(this.expression.end, this.end);\n\n\t\tsuper.transpile(code, transforms);\n\t}\n}\n","import JSXElement from './JSXElement.js';\n\nexport default class JSXFragment extends JSXElement {\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class JSXOpeningElement extends Node {\n\ttranspile(code, transforms) {\n\t\tsuper.transpile(code, transforms);\n\n\t\tcode.overwrite(this.start, this.name.start, `${this.program.jsx}( `);\n\n\t\tconst html =\n\t\t\tthis.name.type === 'JSXIdentifier' &&\n\t\t\tthis.name.name[0] === this.name.name[0].toLowerCase();\n\t\tif (html) code.prependRight(this.name.start, `'`);\n\n\t\tconst len = this.attributes.length;\n\t\tlet c = this.name.end;\n\n\t\tif (len) {\n\t\t\tlet i;\n\n\t\t\tlet hasSpread = false;\n\t\t\tfor (i = 0; i < len; i += 1) {\n\t\t\t\tif (this.attributes[i].type === 'JSXSpreadAttribute') {\n\t\t\t\t\thasSpread = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc = this.attributes[0].end;\n\n\t\t\tfor (i = 0; i < len; i += 1) {\n\t\t\t\tconst attr = this.attributes[i];\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tif (attr.start === c) code.prependRight(c, ', ');\n\t\t\t\t\telse code.overwrite(c, attr.start, ', ');\n\t\t\t\t}\n\n\t\t\t\tif (hasSpread && attr.type !== 'JSXSpreadAttribute') {\n\t\t\t\t\tconst lastAttr = this.attributes[i - 1];\n\t\t\t\t\tconst nextAttr = this.attributes[i + 1];\n\n\t\t\t\t\tif (!lastAttr || lastAttr.type === 'JSXSpreadAttribute') {\n\t\t\t\t\t\tcode.prependRight(attr.start, '{ ');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!nextAttr || nextAttr.type === 'JSXSpreadAttribute') {\n\t\t\t\t\t\tcode.appendLeft(attr.end, ' }');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tc = attr.end;\n\t\t\t}\n\n\t\t\tlet after;\n\t\t\tlet before;\n\t\t\tif (hasSpread) {\n\t\t\t\tif (len === 1) {\n\t\t\t\t\tbefore = html ? `',` : ',';\n\t\t\t\t} else {\n\t\t\t\t\tif (!this.program.options.objectAssign) {\n\t\t\t\t\t\tthrow new CompileError(\n\t\t\t\t\t\t\t\"Mixed JSX attributes ending in spread requires specified objectAssign option with 'Object.assign' or polyfill helper.\",\n\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tbefore = html\n\t\t\t\t\t\t? `', ${this.program.options.objectAssign}({},`\n\t\t\t\t\t\t: `, ${this.program.options.objectAssign}({},`;\n\t\t\t\t\tafter = ')';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbefore = html ? `', {` : ', {';\n\t\t\t\tafter = ' }';\n\t\t\t}\n\n\t\t\tcode.prependRight(this.name.end, before);\n\n\t\t\tif (after) {\n\t\t\t\tcode.appendLeft(this.attributes[len - 1].end, after);\n\t\t\t}\n\t\t} else {\n\t\t\tcode.appendLeft(this.name.end, html ? `', null` : `, null`);\n\t\t\tc = this.name.end;\n\t\t}\n\n\t\tif (this.selfClosing) {\n\t\t\tcode.overwrite(c, this.end, this.attributes.length ? `)` : ` )`);\n\t\t} else {\n\t\t\tcode.remove(c, this.end);\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class JSXOpeningFragment extends Node {\n\ttranspile(code) {\n\t\tcode.overwrite(this.start, this.end, `${this.program.jsx}( React.Fragment, null`);\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class JSXSpreadAttribute extends Node {\n\ttranspile(code, transforms) {\n\t\tcode.remove(this.start, this.argument.start);\n\t\tcode.remove(this.argument.end, this.end);\n\n\t\tsuper.transpile(code, transforms);\n\t}\n}\n","import Node from '../Node.js';\nimport reserved from '../../utils/reserved.js';\n\nexport default class MemberExpression extends Node {\n\ttranspile(code, transforms) {\n\t\tif (transforms.reservedProperties && reserved[this.property.name]) {\n\t\t\tcode.overwrite(this.object.end, this.property.start, `['`);\n\t\t\tcode.appendLeft(this.property.end, `']`);\n\t\t}\n\n\t\tsuper.transpile(code, transforms);\n\t}\n}\n","import Node from '../Node.js';\nimport spread, { isArguments, inlineSpreads } from '../../utils/spread.js';\nimport removeTrailingComma from '../../utils/removeTrailingComma.js';\n\nexport default class NewExpression extends Node {\n\tinitialise(transforms) {\n\t\tif (transforms.spreadRest && this.arguments.length) {\n\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\n\n\t\t\tlet i = this.arguments.length;\n\t\t\twhile (i--) {\n\t\t\t\tconst arg = this.arguments[i];\n\t\t\t\tif (arg.type === 'SpreadElement' && isArguments(arg.argument)) {\n\t\t\t\t\tthis.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsuper.initialise(transforms);\n\t}\n\n\ttranspile(code, transforms) {\n\t\tsuper.transpile(code, transforms);\n\n\t\tif (transforms.spreadRest && this.arguments.length) {\n\t\t\tinlineSpreads(code, this, this.arguments);\n\t\t\t// this.arguments.length may have changed, must retest.\n\t\t}\n\n\t\tif (transforms.spreadRest && this.arguments.length) {\n\t\t\tconst firstArgument = this.arguments[0];\n\t\t\tconst isNew = true;\n\t\t\tconst hasSpreadElements = spread(\n\t\t\t\tcode,\n\t\t\t\tthis.arguments,\n\t\t\t\tfirstArgument.start,\n\t\t\t\tthis.argumentsArrayAlias,\n\t\t\t\tisNew\n\t\t\t);\n\n\t\t\tif (hasSpreadElements) {\n\t\t\t\tcode.prependRight(\n\t\t\t\t\tthis.start + 'new'.length,\n\t\t\t\t\t' (Function.prototype.bind.apply('\n\t\t\t\t);\n\t\t\t\tcode.overwrite(\n\t\t\t\t\tthis.callee.end,\n\t\t\t\t\tfirstArgument.start,\n\t\t\t\t\t', [ null ].concat( '\n\t\t\t\t);\n\t\t\t\tcode.appendLeft(this.end, ' ))');\n\t\t\t}\n\t\t}\n\n\t\tif (this.arguments.length) {\n\t\t\tremoveTrailingComma(code, this.arguments[this.arguments.length - 1].end);\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class ObjectExpression extends Node {\n\ttranspile(code, transforms) {\n\t\tsuper.transpile(code, transforms);\n\n\t\tlet firstPropertyStart = this.start + 1;\n\t\tlet spreadPropertyCount = 0;\n\t\tlet computedPropertyCount = 0;\n\t\tlet firstSpreadProperty = null;\n\t\tlet firstComputedProperty = null;\n\n\t\tfor (let i = 0; i < this.properties.length; ++i) {\n\t\t\tconst prop = this.properties[i];\n\t\t\tif (prop.type === 'SpreadElement') {\n\t\t\t\t// First see if we can inline the spread, to save needing objectAssign.\n\t\t\t\tconst argument = prop.argument;\n\t\t\t\tif (\n\t\t\t\t\targument.type === 'ObjectExpression' || (\n\t\t\t\t\t\targument.type === 'Literal' &&\n\t\t\t\t\t\ttypeof argument.value !== 'string'\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tif (argument.type === 'ObjectExpression' && argument.properties.length > 0) {\n\t\t\t\t\t\t// Strip the `...{` and the `}` with a possible trailing comma before it,\n\t\t\t\t\t\t// leaving just the possible trailing comma after it.\n\t\t\t\t\t\tcode.remove(prop.start, argument.properties[0].start);\n\t\t\t\t\t\tcode.remove(argument.properties[argument.properties.length - 1].end, prop.end);\n\t\t\t\t\t\tthis.properties.splice(i, 1, ...argument.properties);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// An empty object, boolean, null, undefined, number or regexp (but NOT\n\t\t\t\t\t\t// string) will spread to nothing, so just remove the element altogether,\n\t\t\t\t\t\t// including a possible trailing comma.\n\t\t\t\t\t\tcode.remove(prop.start, i === this.properties.length - 1\n\t\t\t\t\t\t\t? prop.end\n\t\t\t\t\t\t\t: this.properties[i + 1].start);\n\t\t\t\t\t\tthis.properties.splice(i, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tspreadPropertyCount += 1;\n\t\t\t\t\tif (firstSpreadProperty === null) firstSpreadProperty = i;\n\t\t\t\t}\n\t\t\t} else if (prop.computed && transforms.computedProperty) {\n\t\t\t\tcomputedPropertyCount += 1;\n\t\t\t\tif (firstComputedProperty === null) firstComputedProperty = i;\n\t\t\t}\n\t\t}\n\n\t\tif (spreadPropertyCount && !transforms.objectRestSpread && !(computedPropertyCount && transforms.computedProperty)) {\n\t\t\tspreadPropertyCount = 0;\n\t\t\tfirstSpreadProperty = null;\n\t\t} else if (spreadPropertyCount) {\n\t\t\tif (!this.program.options.objectAssign) {\n\t\t\t\tthrow new CompileError(\n\t\t\t\t\t\"Object spread operator requires specified objectAssign option with 'Object.assign' or polyfill helper.\",\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t}\n\t\t\tlet i = this.properties.length;\n\t\t\twhile (i--) {\n\t\t\t\tconst prop = this.properties[i];\n\n\t\t\t\t// enclose run of non-spread properties in curlies\n\t\t\t\tif (prop.type === 'Property' && !computedPropertyCount) {\n\t\t\t\t\tconst lastProp = this.properties[i - 1];\n\t\t\t\t\tconst nextProp = this.properties[i + 1];\n\n\t\t\t\t\tif (!lastProp || lastProp.type !== 'Property') {\n\t\t\t\t\t\tcode.prependRight(prop.start, '{');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!nextProp || nextProp.type !== 'Property') {\n\t\t\t\t\t\tcode.appendLeft(prop.end, '}');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Remove ellipsis on spread property\n\t\t\t\tif (prop.type === 'SpreadElement') {\n\t\t\t\t\tcode.remove(prop.start, prop.argument.start);\n\t\t\t\t\tcode.remove(prop.argument.end, prop.end);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// wrap the whole thing in Object.assign\n\t\t\tfirstPropertyStart = this.properties[0].start;\n\t\t\tif (!computedPropertyCount) {\n\t\t\t\tcode.overwrite(\n\t\t\t\t\tthis.start,\n\t\t\t\t\tfirstPropertyStart,\n\t\t\t\t\t`${this.program.options.objectAssign}({}, `\n\t\t\t\t);\n\t\t\t\tcode.overwrite(\n\t\t\t\t\tthis.properties[this.properties.length - 1].end,\n\t\t\t\t\tthis.end,\n\t\t\t\t\t')'\n\t\t\t\t);\n\t\t\t} else if (this.properties[0].type === 'SpreadElement') {\n\t\t\t\tcode.overwrite(\n\t\t\t\t\tthis.start,\n\t\t\t\t\tfirstPropertyStart,\n\t\t\t\t\t`${this.program.options.objectAssign}({}, `\n\t\t\t\t);\n\t\t\t\tcode.remove(this.end - 1, this.end);\n\t\t\t\tcode.appendRight(this.end, ')');\n\t\t\t} else {\n\t\t\t\tcode.prependLeft(this.start, `${this.program.options.objectAssign}(`);\n\t\t\t\tcode.appendRight(this.end, ')');\n\t\t\t}\n\t\t}\n\n\t\tif (computedPropertyCount && transforms.computedProperty) {\n\t\t\tconst i0 = this.getIndentation();\n\n\t\t\tlet isSimpleAssignment;\n\t\t\tlet name;\n\n\t\t\tif (\n\t\t\t\tthis.parent.type === 'VariableDeclarator' &&\n\t\t\t\tthis.parent.parent.declarations.length === 1 &&\n\t\t\t\tthis.parent.id.type === 'Identifier'\n\t\t\t) {\n\t\t\t\tisSimpleAssignment = true;\n\t\t\t\tname = this.parent.id.alias || this.parent.id.name; // TODO is this right?\n\t\t\t} else if (\n\t\t\t\tthis.parent.type === 'AssignmentExpression' &&\n\t\t\t\tthis.parent.parent.type === 'ExpressionStatement' &&\n\t\t\t\tthis.parent.left.type === 'Identifier'\n\t\t\t) {\n\t\t\t\tisSimpleAssignment = true;\n\t\t\t\tname = this.parent.left.alias || this.parent.left.name; // TODO is this right?\n\t\t\t} else if (\n\t\t\t\tthis.parent.type === 'AssignmentPattern' &&\n\t\t\t\tthis.parent.left.type === 'Identifier'\n\t\t\t) {\n\t\t\t\tisSimpleAssignment = true;\n\t\t\t\tname = this.parent.left.alias || this.parent.left.name; // TODO is this right?\n\t\t\t}\n\n\t\t\tif (spreadPropertyCount) isSimpleAssignment = false;\n\n\t\t\t// handle block scoping\n\t\t\tname = this.findScope(false).resolveName(name);\n\n\t\t\tconst start = firstPropertyStart;\n\t\t\tconst end = this.end;\n\n\t\t\tif (isSimpleAssignment) {\n\t\t\t\t// ???\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tfirstSpreadProperty === null ||\n\t\t\t\t\tfirstComputedProperty < firstSpreadProperty\n\t\t\t\t) {\n\t\t\t\t\tname = this.findScope(true).createDeclaration('obj');\n\n\t\t\t\t\tcode.prependRight(this.start, `( ${name} = `);\n\t\t\t\t} else name = null; // We don't actually need this variable\n\t\t\t}\n\n\t\t\tconst len = this.properties.length;\n\t\t\tlet lastComputedProp;\n\t\t\tlet sawNonComputedProperty = false;\n\t\t\tlet isFirst = true;\n\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tconst prop = this.properties[i];\n\t\t\t\tlet moveStart = i > 0 ? this.properties[i - 1].end : start;\n\n\t\t\t\tif (\n\t\t\t\t\tprop.type === 'Property' &&\n\t\t\t\t\t(prop.computed || (lastComputedProp && !spreadPropertyCount))\n\t\t\t\t) {\n\t\t\t\t\tif (i === 0) moveStart = this.start + 1; // Trim leading whitespace\n\t\t\t\t\tlastComputedProp = prop;\n\n\t\t\t\t\tif (!name) {\n\t\t\t\t\t\tname = this.findScope(true).createDeclaration('obj');\n\n\t\t\t\t\t\tconst propId = name + (prop.computed ? '' : '.');\n\t\t\t\t\t\tcode.appendRight(prop.start, `( ${name} = {}, ${propId}`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst propId =\n\t\t\t\t\t\t\t(isSimpleAssignment ? `;\\n${i0}${name}` : `, ${name}`) +\n\t\t\t\t\t\t\t(prop.key.type === 'Literal' || prop.computed ? '' : '.');\n\n\t\t\t\t\t\tif (moveStart < prop.start) {\n\t\t\t\t\t\t\tcode.overwrite(moveStart, prop.start, propId);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode.prependRight(prop.start, propId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet c = prop.key.end;\n\t\t\t\t\tif (prop.computed) {\n\t\t\t\t\t\twhile (code.original[c] !== ']') c += 1;\n\t\t\t\t\t\tc += 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (prop.key.type === 'Literal' && !prop.computed) {\n\t\t\t\t\t\tcode.overwrite(\n\t\t\t\t\t\t\tprop.start,\n\t\t\t\t\t\t\tprop.key.end + 1,\n\t\t\t\t\t\t\t'[' + code.slice(prop.start, prop.key.end) + '] = '\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (prop.shorthand || (prop.method && !prop.computed && transforms.conciseMethodProperty)) {\n\t\t\t\t\t\t// Replace : with = if Property::transpile inserted the :\n\t\t\t\t\t\tcode.overwrite(\n\t\t\t\t\t\t\tprop.key.start,\n\t\t\t\t\t\t\tprop.key.end,\n\t\t\t\t\t\t\tcode.slice(prop.key.start, prop.key.end).replace(/:/, ' =')\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (prop.value.start > c) code.remove(c, prop.value.start);\n\t\t\t\t\t\tcode.prependLeft(c, ' = ');\n\t\t\t\t\t}\n\n\t\t\t\t\t// This duplicates behavior from Property::transpile which is disabled\n\t\t\t\t\t// for computed properties or if conciseMethodProperty is false\n\t\t\t\t\tif (prop.method && (prop.computed || !transforms.conciseMethodProperty)) {\n\t\t\t\t\t\tif (prop.value.generator) code.remove(prop.start, prop.key.start);\n\t\t\t\t\t\tcode.prependRight(prop.value.start, `function${prop.value.generator ? '*' : ''} `);\n\t\t\t\t\t}\n\t\t\t\t} else if (prop.type === 'SpreadElement') {\n\t\t\t\t\tif (name && i > 0) {\n\t\t\t\t\t\tif (!lastComputedProp) {\n\t\t\t\t\t\t\tlastComputedProp = this.properties[i - 1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcode.appendLeft(lastComputedProp.end, `, ${name} )`);\n\n\t\t\t\t\t\tlastComputedProp = null;\n\t\t\t\t\t\tname = null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!isFirst && spreadPropertyCount) {\n\t\t\t\t\t\t// We are in an Object.assign context, so we need to wrap regular properties\n\t\t\t\t\t\tcode.prependRight(prop.start, '{');\n\t\t\t\t\t\tcode.appendLeft(prop.end, '}');\n\t\t\t\t\t}\n\t\t\t\t\tsawNonComputedProperty = true;\n\t\t\t\t}\n\t\t\t\tif (isFirst && (prop.type === 'SpreadElement' || prop.computed)) {\n\t\t\t\t\tlet beginEnd = sawNonComputedProperty\n\t\t\t\t\t\t? this.properties[this.properties.length - 1].end\n\t\t\t\t\t\t: this.end - 1;\n\t\t\t\t\t// Trim trailing comma because it can easily become a leading comma which is illegal\n\t\t\t\t\tif (code.original[beginEnd] == ',') ++beginEnd;\n\t\t\t\t\tconst closing = code.slice(beginEnd, end);\n\t\t\t\t\tcode.prependLeft(moveStart, closing);\n\t\t\t\t\tcode.remove(beginEnd, end);\n\t\t\t\t\tisFirst = false;\n\t\t\t\t}\n\n\t\t\t\t// Clean up some extranous whitespace\n\t\t\t\tlet c = prop.end;\n\t\t\t\tif (i < len - 1 && !sawNonComputedProperty) {\n\t\t\t\t\twhile (code.original[c] !== ',') c += 1;\n\t\t\t\t} else if (i == len - 1) c = this.end;\n\t\t\t\tif (prop.end != c) code.overwrite(prop.end, c, '', {contentOnly: true});\n\t\t\t}\n\n\t\t\tif (!isSimpleAssignment && name) {\n\t\t\t\tcode.appendLeft(lastComputedProp.end, `, ${name} )`);\n\t\t\t}\n\t\t}\n\t}\n}\n","import CompileError from '../../utils/CompileError.js';\nimport Node from '../Node.js';\nimport reserved from '../../utils/reserved.js';\n\nexport default class Property extends Node {\n\tinitialise(transforms) {\n\t\tif ((this.kind === 'get' || this.kind === 'set') && transforms.getterSetter) {\n\t\t\tCompileError.missingTransform(\"getters and setters\", \"getterSetter\", this);\n\t\t}\n\t\tsuper.initialise(transforms);\n\t}\n\n\ttranspile(code, transforms) {\n\t\tsuper.transpile(code, transforms);\n\n\t\tif (\n\t\t\ttransforms.conciseMethodProperty &&\n\t\t\t!this.computed &&\n\t\t\tthis.parent.type !== 'ObjectPattern'\n\t\t) {\n\t\t\tif (this.shorthand) {\n\t\t\t\tcode.prependRight(this.start, `${this.key.name}: `);\n\t\t\t} else if (this.method) {\n\t\t\t\tlet name = '';\n\t\t\t\tif (this.program.options.namedFunctionExpressions !== false) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.key.type === 'Literal' &&\n\t\t\t\t\t\ttypeof this.key.value === 'number'\n\t\t\t\t\t) {\n\t\t\t\t\t\tname = '';\n\t\t\t\t\t} else if (this.key.type === 'Identifier') {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\treserved[this.key.name] ||\n\t\t\t\t\t\t\t!/^[a-z_$][a-z0-9_$]*$/i.test(this.key.name) ||\n\t\t\t\t\t\t\tthis.value.body.scope.references[this.key.name]\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tname = this.findScope(true).createIdentifier(this.key.name);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tname = this.key.name;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tname = this.findScope(true).createIdentifier(this.key.value);\n\t\t\t\t\t}\n\t\t\t\t\tname = ' ' + name;\n\t\t\t\t}\n\n\t\t\t\tif (this.start < this.key.start) code.remove(this.start, this.key.start);\n\t\t\t\tcode.appendLeft(\n\t\t\t\t\tthis.key.end,\n\t\t\t\t\t`: ${this.value.async ? 'async ' : ''}function${this.value.generator ? '*' : ''}${name}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (transforms.reservedProperties && reserved[this.key.name]) {\n\t\t\tcode.prependRight(this.key.start, `'`);\n\t\t\tcode.appendLeft(this.key.end, `'`);\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport { loopStatement } from '../../utils/patterns.js';\n\nexport default class ReturnStatement extends Node {\n\tinitialise(transforms) {\n\t\tthis.loop = this.findNearest(loopStatement);\n\t\tthis.nearestFunction = this.findNearest(/Function/);\n\n\t\tif (\n\t\t\tthis.loop &&\n\t\t\t(!this.nearestFunction || this.loop.depth > this.nearestFunction.depth)\n\t\t) {\n\t\t\tthis.loop.canReturn = true;\n\t\t\tthis.shouldWrap = true;\n\t\t}\n\n\t\tif (this.argument) this.argument.initialise(transforms);\n\t}\n\n\ttranspile(code, transforms) {\n\t\tconst shouldWrap =\n\t\t\tthis.shouldWrap && this.loop && this.loop.shouldRewriteAsFunction;\n\n\t\tif (this.argument) {\n\t\t\tif (shouldWrap) code.prependRight(this.argument.start, `{ v: `);\n\t\t\tthis.argument.transpile(code, transforms);\n\t\t\tif (shouldWrap) code.appendLeft(this.argument.end, ` }`);\n\t\t} else if (shouldWrap) {\n\t\t\tcode.appendLeft(this.start + 6, ' {}');\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\nimport { loopStatement } from '../../utils/patterns.js';\n\nexport default class Super extends Node {\n\tinitialise(transforms) {\n\t\tif (transforms.classes) {\n\t\t\tthis.method = this.findNearest('MethodDefinition');\n\t\t\tif (!this.method)\n\t\t\t\tthrow new CompileError('use of super outside class method', this);\n\n\t\t\tconst parentClass = this.findNearest('ClassBody').parent;\n\t\t\tthis.superClassName =\n\t\t\t\tparentClass.superClass && (parentClass.superClass.name || 'superclass');\n\n\t\t\tif (!this.superClassName)\n\t\t\t\tthrow new CompileError('super used in base class', this);\n\n\t\t\tthis.isCalled =\n\t\t\t\tthis.parent.type === 'CallExpression' && this === this.parent.callee;\n\n\t\t\tif (this.method.kind !== 'constructor' && this.isCalled) {\n\t\t\t\tthrow new CompileError(\n\t\t\t\t\t'super() not allowed outside class constructor',\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.isMember = this.parent.type === 'MemberExpression';\n\n\t\t\tif (!this.isCalled && !this.isMember) {\n\t\t\t\tthrow new CompileError(\n\t\t\t\t\t'Unexpected use of `super` (expected `super(...)` or `super.*`)',\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (transforms.arrow) {\n\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\n\t\t\tconst arrowFunction = this.findNearest('ArrowFunctionExpression');\n\t\t\tconst loop = this.findNearest(loopStatement);\n\n\t\t\tif (arrowFunction && arrowFunction.depth > lexicalBoundary.depth) {\n\t\t\t\tthis.thisAlias = lexicalBoundary.getThisAlias();\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tloop &&\n\t\t\t\tloop.body.contains(this) &&\n\t\t\t\tloop.depth > lexicalBoundary.depth\n\t\t\t) {\n\t\t\t\tthis.thisAlias = lexicalBoundary.getThisAlias();\n\t\t\t}\n\t\t}\n\t}\n\n\ttranspile(code, transforms) {\n\t\tif (transforms.classes) {\n\t\t\tconst expression =\n\t\t\t\tthis.isCalled || this.method.static\n\t\t\t\t\t? this.superClassName\n\t\t\t\t\t: `${this.superClassName}.prototype`;\n\n\t\t\tcode.overwrite(this.start, this.end, expression, {\n\t\t\t\tstoreName: true,\n\t\t\t\tcontentOnly: true\n\t\t\t});\n\n\t\t\tconst callExpression = this.isCalled ? this.parent : this.parent.parent;\n\n\t\t\tif (callExpression && callExpression.type === 'CallExpression') {\n\t\t\t\tif (!this.noCall) {\n\t\t\t\t\t// special case – `super( ...args )`\n\t\t\t\t\tcode.appendLeft(callExpression.callee.end, '.call');\n\t\t\t\t}\n\n\t\t\t\tconst thisAlias = this.thisAlias || 'this';\n\n\t\t\t\tif (callExpression.arguments.length) {\n\t\t\t\t\tcode.appendLeft(callExpression.arguments[0].start, `${thisAlias}, `);\n\t\t\t\t} else {\n\t\t\t\t\tcode.appendLeft(callExpression.end - 1, `${thisAlias}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class TaggedTemplateExpression extends Node {\n\tinitialise(transforms) {\n\t\tif (\n\t\t\ttransforms.templateString &&\n\t\t\t!transforms.dangerousTaggedTemplateString\n\t\t) {\n\t\t\tCompileError.missingTransform(\n\t\t\t\t\"tagged template strings\", \"templateString\", this, \"dangerousTaggedTemplateString\"\n\t\t\t);\n\t\t}\n\n\t\tsuper.initialise(transforms);\n\t}\n\n\ttranspile(code, transforms) {\n\t\tif (transforms.templateString && transforms.dangerousTaggedTemplateString) {\n\t\t\tconst ordered = this.quasi.expressions\n\t\t\t\t.concat(this.quasi.quasis)\n\t\t\t\t.sort((a, b) => a.start - b.start);\n\n\t\t\tconst program = this.program;\n\t\t\tconst rootScope = program.body.scope;\n\n\t\t\t// insert strings at start\n\t\t\tconst templateStrings = this.quasi.quasis.map(quasi =>\n\t\t\t\tJSON.stringify(quasi.value.cooked)\n\t\t\t).join(', ');\n\n\t\t\tlet templateObject = this.program.templateLiteralQuasis[templateStrings];\n\t\t\tif (!templateObject) {\n\t\t\t\ttemplateObject = rootScope.createIdentifier('templateObject');\n\t\t\t\tcode.prependLeft(this.program.prependAt, `var ${templateObject} = Object.freeze([${templateStrings}]);\\n`);\n\n\t\t\t\tthis.program.templateLiteralQuasis[templateStrings] = templateObject;\n\t\t\t}\n\n\t\t\tcode.overwrite(\n\t\t\t\tthis.tag.end,\n\t\t\t\tordered[0].start,\n\t\t\t\t`(${templateObject}`\n\t\t\t);\n\n\t\t\tlet lastIndex = ordered[0].start;\n\t\t\tordered.forEach(node => {\n\t\t\t\tif (node.type === 'TemplateElement') {\n\t\t\t\t\tcode.remove(lastIndex, node.end);\n\t\t\t\t} else {\n\t\t\t\t\tcode.overwrite(lastIndex, node.start, ', ');\n\t\t\t\t}\n\n\t\t\t\tlastIndex = node.end;\n\t\t\t});\n\n\t\t\tcode.overwrite(lastIndex, this.end, ')');\n\t\t}\n\n\t\tsuper.transpile(code, transforms);\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class TemplateElement extends Node {\n\tinitialise() {\n\t\tthis.program.indentExclusionElements.push(this);\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class TemplateLiteral extends Node {\n\ttranspile(code, transforms) {\n\t\tsuper.transpile(code, transforms);\n\n\t\tif (\n\t\t\ttransforms.templateString &&\n\t\t\tthis.parent.type !== 'TaggedTemplateExpression'\n\t\t) {\n\t\t\tconst ordered = this.expressions\n\t\t\t\t.concat(this.quasis)\n\t\t\t\t.sort((a, b) => a.start - b.start || a.end - b.end)\n\t\t\t\t.filter((node, i) => {\n\t\t\t\t\t// include all expressions\n\t\t\t\t\tif (node.type !== 'TemplateElement') return true;\n\n\t\t\t\t\t// include all non-empty strings\n\t\t\t\t\tif (node.value.raw) return true;\n\n\t\t\t\t\t// exclude all empty strings not at the head\n\t\t\t\t\treturn !i;\n\t\t\t\t});\n\n\t\t\t// special case – we may be able to skip the first element,\n\t\t\t// if it's the empty string, but only if the second and\n\t\t\t// third elements aren't both expressions (since they maybe\n\t\t\t// be numeric, and `1 + 2 + '3' === '33'`)\n\t\t\tif (ordered.length >= 3) {\n\t\t\t\tconst [first, , third] = ordered;\n\t\t\t\tif (\n\t\t\t\t\tfirst.type === 'TemplateElement' &&\n\t\t\t\t\tfirst.value.raw === '' &&\n\t\t\t\t\tthird.type === 'TemplateElement'\n\t\t\t\t) {\n\t\t\t\t\tordered.shift();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst parenthesise =\n\t\t\t\t(this.quasis.length !== 1 || this.expressions.length !== 0) &&\n\t\t\t\tthis.parent.type !== 'TemplateLiteral' &&\n\t\t\t\tthis.parent.type !== 'AssignmentExpression' &&\n\t\t\t\tthis.parent.type !== 'AssignmentPattern' &&\n\t\t\t\tthis.parent.type !== 'VariableDeclarator' &&\n\t\t\t\t(this.parent.type !== 'BinaryExpression' ||\n\t\t\t\t\tthis.parent.operator !== '+');\n\n\t\t\tif (parenthesise) code.appendRight(this.start, '(');\n\n\t\t\tlet lastIndex = this.start;\n\n\t\t\tordered.forEach((node, i) => {\n\t\t\t\tlet prefix = i === 0 ? (parenthesise ? '(' : '') : ' + ';\n\n\t\t\t\tif (node.type === 'TemplateElement') {\n\t\t\t\t\tcode.overwrite(\n\t\t\t\t\t\tlastIndex,\n\t\t\t\t\t\tnode.end,\n\t\t\t\t\t\tprefix + JSON.stringify(node.value.cooked)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconst parenthesise = node.type !== 'Identifier'; // TODO other cases where it's safe\n\n\t\t\t\t\tif (parenthesise) prefix += '(';\n\n\t\t\t\t\tcode.remove(lastIndex, node.start);\n\n\t\t\t\t\tif (prefix) code.prependRight(node.start, prefix);\n\t\t\t\t\tif (parenthesise) code.appendLeft(node.end, ')');\n\t\t\t\t}\n\n\t\t\t\tlastIndex = node.end;\n\t\t\t});\n\n\t\t\tif (parenthesise) code.appendLeft(lastIndex, ')');\n\t\t\tcode.overwrite(lastIndex, this.end, \"\", { contentOnly: true });\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport { loopStatement } from '../../utils/patterns.js';\n\nexport default class ThisExpression extends Node {\n\tinitialise(transforms) {\n\t\tconst lexicalBoundary = this.findLexicalBoundary();\n\n\t\tif (transforms.letConst) {\n\t\t\t// save all loops up to the lexical boundary in case we need\n\t\t\t// to alias them later for block-scoped declarations\n\t\t\tlet node = this.findNearest(loopStatement);\n\t\t\twhile (node && node.depth > lexicalBoundary.depth) {\n\t\t\t\tnode.thisRefs.push(this);\n\t\t\t\tnode = node.parent.findNearest(loopStatement);\n\t\t\t}\n\t\t}\n\n\t\tif (transforms.arrow) {\n\t\t\tconst arrowFunction = this.findNearest('ArrowFunctionExpression');\n\n\t\t\tif (arrowFunction && arrowFunction.depth > lexicalBoundary.depth) {\n\t\t\t\tthis.alias = lexicalBoundary.getThisAlias();\n\t\t\t}\n\t\t}\n\t}\n\n\ttranspile(code) {\n\t\tif (this.alias) {\n\t\t\tcode.overwrite(this.start, this.end, this.alias, {\n\t\t\t\tstoreName: true,\n\t\t\t\tcontentOnly: true\n\t\t\t});\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport checkConst from '../../utils/checkConst.js';\n\nexport default class UpdateExpression extends Node {\n\tinitialise(transforms) {\n\t\tif (this.argument.type === 'Identifier') {\n\t\t\tconst declaration = this.findScope(false).findDeclaration(\n\t\t\t\tthis.argument.name\n\t\t\t);\n\t\t\t// special case – https://gitlab.com/Rich-Harris/buble/issues/150\n\t\t\tconst statement = declaration && declaration.node.ancestor(3);\n\t\t\tif (\n\t\t\t\tstatement &&\n\t\t\t\tstatement.type === 'ForStatement' &&\n\t\t\t\tstatement.body.contains(this)\n\t\t\t) {\n\t\t\t\tstatement.reassigned[this.argument.name] = true;\n\t\t\t}\n\t\t}\n\n\t\tsuper.initialise(transforms);\n\t}\n\n\ttranspile(code, transforms) {\n\t\tif (this.argument.type === 'Identifier') {\n\t\t\t// Do this check after everything has been initialized to find\n\t\t\t// shadowing declarations after this expression\n\t\t\tcheckConst(this.argument, this.findScope(false));\n\t\t}\n\t\tsuper.transpile(code, transforms);\n\t}\n}\n","import Node from '../Node.js';\nimport destructure from '../../utils/destructure.js';\nimport { loopStatement } from '../../utils/patterns.js';\n\nexport default class VariableDeclaration extends Node {\n\tinitialise(transforms) {\n\t\tthis.scope = this.findScope(this.kind === 'var');\n\t\tthis.declarations.forEach(declarator => declarator.initialise(transforms));\n\t}\n\n\ttranspile(code, transforms) {\n\t\tconst i0 = this.getIndentation();\n\t\tlet kind = this.kind;\n\n\t\tif (transforms.letConst && kind !== 'var') {\n\t\t\tkind = 'var';\n\t\t\tcode.overwrite(this.start, this.start + this.kind.length, kind, {\n\t\t\t\tcontentOnly: true,\n\t\t\t\tstoreName: true\n\t\t\t});\n\t\t}\n\n\t\tif (transforms.destructuring && this.parent.type !== 'ForOfStatement' && this.parent.type !== 'ForInStatement') {\n\t\t\tlet c = this.start;\n\t\t\tlet lastDeclaratorIsPattern;\n\n\t\t\tthis.declarations.forEach((declarator, i) => {\n\t\t\t\tdeclarator.transpile(code, transforms);\n\n\t\t\t\tif (declarator.id.type === 'Identifier') {\n\t\t\t\t\tif (i > 0 && this.declarations[i - 1].id.type !== 'Identifier') {\n\t\t\t\t\t\tcode.overwrite(c, declarator.id.start, `var `);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst inline = loopStatement.test(this.parent.type);\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tcode.remove(c, declarator.id.start);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode.overwrite(c, declarator.id.start, `;\\n${i0}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst simple =\n\t\t\t\t\t\tdeclarator.init.type === 'Identifier' && !declarator.init.rewritten;\n\n\t\t\t\t\tconst name = simple\n\t\t\t\t\t\t? (declarator.init.alias || declarator.init.name)\n\t\t\t\t\t\t: declarator.findScope(true).createIdentifier('ref');\n\n\t\t\t\t\tc = declarator.start;\n\n\t\t\t\t\tconst statementGenerators = [];\n\n\t\t\t\t\tif (simple) {\n\t\t\t\t\t\tcode.remove(declarator.id.end, declarator.end);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstatementGenerators.push((start, prefix, suffix) => {\n\t\t\t\t\t\t\tcode.prependRight(declarator.id.end, `var ${name}`);\n\t\t\t\t\t\t\tcode.appendLeft(declarator.init.end, `${suffix}`);\n\t\t\t\t\t\t\tcode.move(declarator.id.end, declarator.end, start);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tconst scope = declarator.findScope(false);\n\t\t\t\t\tdestructure(\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tid => scope.createIdentifier(id),\n\t\t\t\t\t\t({ name }) => scope.resolveName(name),\n\t\t\t\t\t\tdeclarator.id,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tinline,\n\t\t\t\t\t\tstatementGenerators\n\t\t\t\t\t);\n\n\t\t\t\t\tconst prefix = inline ? 'var ' : '';\n\t\t\t\t\tlet suffix = inline ? `, ` : `;\\n${i0}`;\n\t\t\t\t\tstatementGenerators.forEach((fn, j) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ti === this.declarations.length - 1 &&\n\t\t\t\t\t\t\tj === statementGenerators.length - 1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tsuffix = inline ? '' : ';';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfn(declarator.start, j === 0 ? prefix : '', suffix);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tc = declarator.end;\n\t\t\t\tlastDeclaratorIsPattern = declarator.id.type !== 'Identifier';\n\t\t\t});\n\n\t\t\tif (lastDeclaratorIsPattern && this.end > c) {\n\t\t\t\tcode.overwrite(c, this.end, '', { contentOnly: true });\n\t\t\t}\n\t\t} else {\n\t\t\tthis.declarations.forEach(declarator => {\n\t\t\t\tdeclarator.transpile(code, transforms);\n\t\t\t});\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class VariableDeclarator extends Node {\n\tinitialise(transforms) {\n\t\tlet kind = this.parent.kind;\n\t\tif (kind === 'let' && this.parent.parent.type === 'ForStatement') {\n\t\t\tkind = 'for.let'; // special case...\n\t\t}\n\n\t\tthis.parent.scope.addDeclaration(this.id, kind);\n\t\tsuper.initialise(transforms);\n\t}\n\n\ttranspile(code, transforms) {\n\t\tif (!this.init && transforms.letConst && this.parent.kind !== 'var') {\n\t\t\tconst inLoop = this.findNearest(\n\t\t\t\t/Function|^For(In|Of)?Statement|^(?:Do)?WhileStatement/\n\t\t\t);\n\t\t\tif (\n\t\t\t\tinLoop &&\n\t\t\t\t!/Function/.test(inLoop.type) &&\n\t\t\t\t!this.isLeftDeclaratorOfLoop()\n\t\t\t) {\n\t\t\t\tcode.appendLeft(this.id.end, ' = (void 0)');\n\t\t\t}\n\t\t}\n\n\t\tif (this.id) this.id.transpile(code, transforms);\n\t\tif (this.init) this.init.transpile(code, transforms);\n\t}\n\n\tisLeftDeclaratorOfLoop() {\n\t\treturn (\n\t\t\tthis.parent &&\n\t\t\tthis.parent.type === 'VariableDeclaration' &&\n\t\t\tthis.parent.parent &&\n\t\t\t(this.parent.parent.type === 'ForInStatement' ||\n\t\t\t\tthis.parent.parent.type === 'ForOfStatement') &&\n\t\t\tthis.parent.parent.left &&\n\t\t\tthis.parent.parent.left.declarations[0] === this\n\t\t);\n\t}\n}\n","export default {\n\tProgram: ['body'],\n\tLiteral: []\n};\n","import types from './types/index.js';\nimport BlockStatement from './BlockStatement.js';\nimport Node from './Node.js';\nimport keys from './keys.js';\n\nconst statementsWithBlocks = {\n\tIfStatement: 'consequent',\n\tForStatement: 'body',\n\tForInStatement: 'body',\n\tForOfStatement: 'body',\n\tWhileStatement: 'body',\n\tDoWhileStatement: 'body',\n\tArrowFunctionExpression: 'body'\n};\n\nexport default function wrap(raw, parent) {\n\tif (!raw) return;\n\n\tif ('length' in raw) {\n\t\tlet i = raw.length;\n\t\twhile (i--) wrap(raw[i], parent);\n\t\treturn;\n\t}\n\n\t// with e.g. shorthand properties, key and value are\n\t// the same node. We don't want to wrap an object twice\n\tif (raw.__wrapped) return;\n\traw.__wrapped = true;\n\n\tif (!keys[raw.type]) {\n\t\tkeys[raw.type] = Object.keys(raw).filter(\n\t\t\tkey => typeof raw[key] === 'object'\n\t\t);\n\t}\n\n\t// special case – body-less if/for/while statements. TODO others?\n\tconst bodyType = statementsWithBlocks[raw.type];\n\tif (bodyType && raw[bodyType].type !== 'BlockStatement') {\n\t\tconst expression = raw[bodyType];\n\n\t\t// create a synthetic block statement, otherwise all hell\n\t\t// breaks loose when it comes to block scoping\n\t\traw[bodyType] = {\n\t\t\tstart: expression.start,\n\t\t\tend: expression.end,\n\t\t\ttype: 'BlockStatement',\n\t\t\tbody: [expression],\n\t\t\tsynthetic: true\n\t\t};\n\t}\n\n\traw.parent = parent;\n\traw.program = parent.program || parent;\n\traw.depth = parent.depth + 1;\n\traw.keys = keys[raw.type];\n\traw.indentation = undefined;\n\n\tfor (const key of keys[raw.type]) {\n\t\twrap(raw[key], raw);\n\t}\n\n\traw.program.magicString.addSourcemapLocation(raw.start);\n\traw.program.magicString.addSourcemapLocation(raw.end);\n\n\tconst type =\n\t\t(raw.type === 'BlockStatement' ? BlockStatement : types[raw.type]) || Node;\n\traw.__proto__ = type.prototype;\n}\n","import MagicString from 'magic-string';\nimport BlockStatement from './BlockStatement.js';\nimport wrap from './wrap.js';\n\nexport default function Program(source, ast, transforms, options) {\n\tthis.type = 'Root';\n\n\t// options\n\tthis.jsx = options.jsx || 'React.createElement';\n\tthis.options = options;\n\n\tthis.source = source;\n\tthis.magicString = new MagicString(source);\n\n\tthis.ast = ast;\n\tthis.depth = 0;\n\n\twrap((this.body = ast), this);\n\tthis.body.__proto__ = BlockStatement.prototype;\n\n\tthis.templateLiteralQuasis = Object.create(null);\n\tfor (let i = 0; i < this.body.body.length; ++i) {\n\t\tif (!this.body.body[i].directive) {\n\t\t\tthis.prependAt = this.body.body[i].start;\n\t\t\tbreak;\n\t\t}\n\t}\n\tthis.objectWithoutPropertiesHelper = null;\n\n\tthis.indentExclusionElements = [];\n\tthis.body.initialise(transforms);\n\n\tthis.indentExclusions = Object.create(null);\n\tfor (const node of this.indentExclusionElements) {\n\t\tfor (let i = node.start; i < node.end; i += 1) {\n\t\t\tthis.indentExclusions[i] = true;\n\t\t}\n\t}\n\n\tthis.body.transpile(this.magicString, transforms);\n}\n\nProgram.prototype = {\n\texport(options = {}) {\n\t\treturn {\n\t\t\tcode: this.magicString.toString(),\n\t\t\tmap: this.magicString.generateMap({\n\t\t\t\tfile: options.file,\n\t\t\t\tsource: options.source,\n\t\t\t\tincludeContent: options.includeContent !== false\n\t\t\t})\n\t\t};\n\t},\n\n\tfindNearest() {\n\t\treturn null;\n\t},\n\n\tfindScope() {\n\t\treturn null;\n\t},\n\n\tgetObjectWithoutPropertiesHelper(code) {\n\t\tif (!this.objectWithoutPropertiesHelper) {\n\t\t\tthis.objectWithoutPropertiesHelper = this.body.scope.createIdentifier('objectWithoutProperties');\n\t\t\tcode.prependLeft(this.prependAt, `function ${this.objectWithoutPropertiesHelper} (obj, exclude) { ` +\n\t\t\t\t`var target = {}; for (var k in obj) ` +\n\t\t\t\t`if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) ` +\n\t\t\t\t`target[k] = obj[k]; return target; }\\n`\n\t\t\t);\n\t\t}\n\t\treturn this.objectWithoutPropertiesHelper;\n\t}\n};\n","import { Parser } from 'acorn';\nimport acornJsx from 'acorn-jsx';\nimport acornDynamicImport from 'acorn-dynamic-import';\nimport classFields from 'acorn-class-fields';\nimport Program from './program/Program.js';\nimport getSnippet from './utils/getSnippet.js';\n\nconst parser = Parser.extend(acornDynamicImport, acornJsx(), classFields);\n\nexport const features = [\n\t'getterSetter',\n\t'arrow',\n\t'classes',\n\t'computedProperty',\n\t'conciseMethodProperty',\n\t'defaultParameter',\n\t'destructuring',\n\t'forOf',\n\t'generator',\n\t'letConst',\n\t'moduleExport',\n\t'moduleImport',\n\t'numericLiteral',\n\t'parameterDestructuring',\n\t'spreadRest',\n\t'stickyRegExp',\n\t'templateString',\n\n\t// ES2016\n\t'exponentiation',\n\n\t// additional transforms, not from\n\t// https://featuretests.io\n\t'reservedProperties',\n\n\t'trailingFunctionCommas',\n\t'asyncAwait',\n\t'objectRestSpread'\n];\n\nconst dangerousTransforms = ['dangerousTaggedTemplateString', 'dangerousForOf'];\n\nexport function transform(source, options = {}) {\n\tlet ast;\n\tlet jsx = null;\n\n\ttry {\n\t\tast = parser.parse(source, {\n\t\t\tecmaVersion: 10,\n\t\t\tpreserveParens: true,\n\t\t\tsourceType: 'module',\n\t\t\tallowAwaitOutsideFunction: true,\n\t\t\tallowReturnOutsideFunction: true,\n\t\t\tallowHashBang: true,\n\t\t\tonComment: (block, text) => {\n\t\t\t\tif (!jsx) {\n\t\t\t\t\tconst match = /@jsx\\s+([^\\s]+)/.exec(text);\n\t\t\t\t\tif (match) jsx = match[1];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\toptions.jsx = jsx || options.jsx;\n\t} catch (err) {\n\t\terr.snippet = getSnippet(source, err.loc);\n\t\terr.toString = () => `${err.name}: ${err.message}\\n${err.snippet}`;\n\t\tthrow err;\n\t}\n\n\tconst transforms = Object.create(null);\n\n\tfeatures.forEach(name => {\n\t\ttransforms[name] = true\n\t});\n\n\tdangerousTransforms.forEach(name => {\n\t\ttransforms[name] = true;\n\t});\n\n\tObject.keys(options.transforms || {}).forEach(name => {\n\t\tif (name === 'modules') {\n\t\t\tif (!('moduleImport' in options.transforms))\n\t\t\t\ttransforms.moduleImport = options.transforms.modules;\n\t\t\tif (!('moduleExport' in options.transforms))\n\t\t\t\ttransforms.moduleExport = options.transforms.modules;\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(name in transforms)) throw new Error(`Unknown transform '${name}'`);\n\t\ttransforms[name] = options.transforms[name];\n\t});\n\n  if (options.objectAssign === true) {\n    options.objectAssign = 'Object.assign';\n  }\n\n\treturn new Program(source, ast, transforms, options).export(options);\n}\n"],"names":["reservedWords","3","5","6","strict","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","set","pos","i","length","isIdentifierStart","astral","test","String","fromCharCode","isIdentifierChar","TokenType","label","conf","this","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywords$1","kw","options","types","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","assign","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","ecma2019String","nonASCIIwhitespace","skipWhiteSpace","ref","Object","prototype","hasOwnProperty","toString","has","obj","propName","call","isArray","Array","wordsRegexp","words","replace","Position","line","col","column","offset","n","SourceLocation","p","start","end","sourceFile","getLineInfo","input","cur","lastIndex","match","exec","index","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","SCOPE_FUNCTION","SCOPE_VAR","SCOPE_ASYNC","SCOPE_GENERATOR","functionFlags","async","generator","Parser","startPos","opts","opt","tokens","token","push","array","block","text","startLoc","endLoc","comment","type","value","loc","range","pushComment","getOptions","reserved","v","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","lineStart","lastIndexOf","curLine","slice","split","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","yieldPos","awaitPos","awaitIdentPos","labels","undefinedExports","skipLineComment","scopeStack","enterScope","regexpState","prototypeAccessors","inFunction","configurable","inGenerator","inAsync","allowSuper","allowDirectSuper","treatFunctionsAsVar","parse","node","startNode","nextToken","parseTopLevel","get","currentVarScope","flags","currentThisScope","treatFunctionsAsVarInScope","currentScope","inNonArrowFunction","extend","plugins","len","arguments","cls","parseExpressionAt","parser","parseExpression","tokenizer","defineProperties","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","exports","body","stmt","parseStatement","list","keys","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseImport","parseExport","maybeName","parseLabeledStatement","parseExpressionStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","parseFor","init$1","parseVar","declarations","init","await","parseForIn","toAssignable","checkLVal","isAsync","declarationPosition","parseFunction","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitScope","empty","handler","clause","param","parseBindingAtom","simple","finalizer","object","i$1","label$1","statementStart","indexOf","createNewLexicalScope","update","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","statement","allowExpressionBody","initFunction","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","parseFunctionParams","parseFunctionBody","params","parseBindingList","isStatement","oldStrict","parseClassId","parseClassSuper","classBody","hadConstructor","element","parseClassElement","superClass","constructorAllowsSuper","this$1","method","tryContextual","k","noLineBreak","key","computed","startNodeAt","static","isGenerator","parsePropertyName","allowsDirectSuper","parseClassMethod","parseMethod","parseExprSubscripts","parseExprAtom","checkExport","fNode","declaration","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkLocalExport","checkPatternExport","pat","properties","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","pp$2","isBinding","prop","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","declareName","pp$3","checkPropClash","propHash","shorthand","proto","other","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","oldShorthandAssign","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","skipArrowSubscripts","result","parseSubscripts","base","noCalls","maybeAsyncArrow","parseSubscript","property","parseExprList","parseArrowExpression","callee","tag","quasi","parseTemplate","isTagged","readRegexp","canBeArrow","parseLiteral","regex","pattern","parseParenAndDistinguishExpression","parseNew","val","spreadStart","innerStartPos","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","meta","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","isArrowFunction","isMethod","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","allowDuplicates","nameHash","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","Scope","var","lexical","functions","scope","redeclared","scope$2","scope$3","Node","pp$6","TokContext","isExpr","preserveSpace","override","types$1","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","parent","curContext","inGeneratorContext","out","allowed","ecma9BinaryProperties","unicodeBinaryProperties","9","10","unicodeGeneralCategoryValues","ecma9ScriptValues","unicodeScriptValues","data","buildUnicodeData","d","binary","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","pp$9","RegExpValidationState","validFlags","unicodeProperties","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString$1","ch","isSyntaxCharacter","isControlLetter","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","s","l","c","nextIndex","current","lookahead","advance","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","max","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","isRegExpIdentifierStart","isRegExpIdentifierPart","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","isCharacterClassEscape","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","regexp_validateUnicodePropertyNameOrValue","nameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp$8","codePointToString","getToken","Symbol","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","finishOp","readToken_mult_modulo_exp","size","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","str","escaped","inClass","flagsStart","readWord1","e","readInt","radix","total","Infinity","startsWithDot","octal","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","substr","word","escStart","esc","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","hexNumber","decimalNumber","tt","acorn","tokTypes","tokContexts","tc_oTag","tc_cTag","tc_expr","tok","jsxName","jsxText","jsxTagStart","jsxTagEnd","getQualifiedJSXName","namespace","[object Object]","jsx_readEntity","jsx_readNewLine","normalizeCRLF","entity","count","XHTMLEntities","jsx_parseIdentifier","allowNamespaces","jsx_parseNamespacedName","allowNamespacedObjects","newNode","jsx_parseExpressionContainer","jsx_parseEmptyExpression","jsx_parseAttributeValue","attributes","nodeName","jsx_parseElementName","jsx_parseAttribute","selfClosing","children","openingElement","jsx_parseOpeningElementAt","closingElement","contents","jsx_parseClosingElementAt","jsx_parseElementAt","fragmentOrElement","refShortHandDefaultPos","jsx_parseText","jsx_parseElement","super","jsx_readToken","jsx_readWord","jsx_readString","plugin","defineProperty","undefined","_createClass","target","props","descriptor","enumerable","writable","Constructor","protoProps","staticProps","_get","receiver","Function","desc","getOwnPropertyDescriptor","getPrototypeOf","getter","_Parser","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","apply","subClass","create","constructor","setPrototypeOf","_inherits","_acorn","DynamicImportKey","maybeParseFieldValue","field","oldInFieldValue","_inFieldValue","parsePrivateName","privateNameToken","chars","encodeInteger","clamped","Chunk","content","original","intro","outro","storeName","edited","previous","appendLeft","appendRight","clone","chunk","contains","eachNext","fn","eachPrevious","edit","contentOnly","prependLeft","prependRight","sliceIndex","originalBefore","originalAfter","newChunk","trimEnd","rx","trimmed","trimStart","btoa","Error","window","unescape","encodeURIComponent","Buffer","from","SourceMap","version","file","sources","sourcesContent","names","mappings","decoded","sourceFileIndex","sourceCodeLine","sourceCodeColumn","nameIndex","generatedCodeColumn","lineMappings","_i","line_1","segment","segmentMappings","join","encode","guessIndent","lines","tabbed","filter","spaced","reduce","numSpaces","Math","getRelativePath","to","fromParts","toParts","shift","concat","JSON","stringify","toUrl","getLocator","originalLines","lineOffsets","j","m","Mappings","hires","generatedCodeLine","rawSegments","pending","addEdit","sourceIndex","addUneditedChunk","sourcemapLocations","originalCharIndex","warned","insertLeft","insertRight","MagicString","firstChunk","lastChunk","lastSearchedChunk","byStart","byEnd","filename","indentExclusionRanges","storedNames","indentStr","toJSON","forEach","map","addSourcemapLocation","char","append","_split","cloned","originalChunk","clonedChunk","nextOriginalChunk","nextClonedChunk","generateDecodedMap","locate","includeContent","generateMap","getIndentString","indent","isExcluded","exclude","exclusion","shouldIndentNextCharacter","indentStart","replacer","charIndex","_splitChunk","insert","console","warn","move","oldLeft","oldRight","newRight","newLeft","overwrite","prepend","remove","lastChar","lastLine","lineIndex","lineStr","startChunk","containsEnd","snip","searchForward","isEmpty","trim","trimLines","charType","trimEndAborted","aborted","trimStartAborted","extractNames","extractors","ancestor","level","findLexicalBoundary","findNearest","unparenthesizedParent","unparenthesize","findScope","functionScope","getIndentation","initialise","transforms","const","magicString","transpile","Identifier","ObjectPattern","Property","ArrayPattern","RestElement","AssignmentPattern","isBlockScope","createDeclarationCallback","declare","identifiers","references","blockScopedDeclarations","aliases","lineEnd","repeat","getSnippet","numDigits","addDeclaration","identifier","instances","addReference","consolidated","consolidateReference","consolidate","let","createIdentifier","counter","createDeclaration","findDeclaration","resolveName","CompileError","stack","snippet","missingTransform","feature","transformKey","dangerousKey","findIndex","handlers","destructureIdentifier","inline","statementGenerators","isIdentifier","suffix","destructure","handleProperty","destructureObjectPattern","nonRestKeys","helper","getObjectWithoutPropertiesHelper","destructureMemberExpression","Boolean","ref$1","BlockStatement","createScope","parentIsFunction","isFunctionBlock","createdDeclarations","thisAlias","argumentsAlias","defaultParameters","getArgumentsAlias","getArgumentsArrayAlias","argumentsArrayAlias","getThisAlias","indentation","useOuter","synthetic","indentString","introStatementGenerators","transpileParameters","letConst","transpileBlockScopedIdentifiers","assignment","defaultParameter","spreadRest","penultimateParam","parameterDestructuring","cont","forStatement","shouldRewriteAsFunction","outerAlias","innerAlias","reassigned","outer","inner","alias","rewritten","isArguments","inlineSpreads","subelements","some","subelement","isLast","splice","needsParentheses","spread","isNew","firstSpreadIndex","previousElement","addClosingParen","ArrayExpression","lexicalBoundary","lastElement","removeTrailingComma","ArrowFunctionExpression","asyncAwait","openParensPos","naked","needsArguments","standalone","trailingFunctionCommas","checkConst","AssignmentExpression","exponentiation","transpileExponentiation","destructuring","transpileDestructuring","writeScope","lookupScope","needsObjectVar","needsPropertyVar","i0","AwaitExpression","BinaryExpression","loopStatement","BreakStatement","switchCase","depth","canBreak","CallExpression","arg","hasSpreadElements","firstArgument","callExpression","noCall","ClassBody","inFunctionExpression","superName","classes","i1","constructorIndex","introBlock","outroBlock","isConstructorBody","nextMethod","classFields","toEnd","namedFunctions","namedFunctionExpressions","namedConstructor","inheritanceBlock","staticAccessors","prototypeGettersAndSetters","staticGettersAndSetters","getterSetter","lhs","isAccessor","methodName","fake_computed","rhs","ClassDeclaration","indentStrLen","indentExclusions","removeStart","deindent","isExportDefaultDeclaration","syntheticDefaultExport","ClassExpression","ContinueStatement","ExportDefaultDeclaration","moduleExport","ExportNamedDeclaration","LoopStatement","createdScope","thisRefs","nearestFunctionExpression","needsBlock","argString","args","paramString","before","after","canReturn","returned","ForStatement","declarator","updates","ForInStatement","hasDeclaration","maybePattern","destructurePattern","isDeclaration","bodyStart","ForOfStatement","forOf","dangerousForOf","maybeDestructuring","FunctionDeclaration","FunctionExpression","conciseMethodProperty","isReference","arrowFunction","IfStatement","Import","moduleImport","ImportDeclaration","ImportDefaultSpecifier","ImportSpecifier","JSXAttribute","JSXClosingElement","spaceBeforeParen","lastChild","JSXClosingFragment","normalise","removeTrailingWhitespace","JSXElement","child","openingFragment","nonAsciiLsOrPs","DoWhileStatement","html","toLowerCase","hasSpread","attr","lastAttr","nextAttr","objectAssign","indentExclusionElements","numericLiteral","reservedProperties","firstPropertyStart","spreadPropertyCount","computedPropertyCount","firstSpreadProperty","firstComputedProperty","computedProperty","objectRestSpread","lastProp","nextProp","isSimpleAssignment","lastComputedProp","sawNonComputedProperty","isFirst","moveStart","propId","beginEnd","closing","nearestFunction","shouldWrap","parentClass","superClassName","isCalled","isMember","templateString","dangerousTaggedTemplateString","ordered","sort","a","b","rootScope","templateStrings","templateObject","templateLiteralQuasis","prependAt","parenthesise","lastDeclaratorIsPattern","inLoop","isLeftDeclaratorOfLoop","WhileStatement","Program","Literal","statementsWithBlocks","ast","jsx","wrap","__wrapped","bodyType","objectWithoutPropertiesHelper","export","acornDynamicImport","acornJsx","_privateBoundNamesStack","privateBoundNames","_unresolvedPrivateNamesStack","unresolvedPrivateNames","_constructorAllowsSuper","_allowsDirectSuper","atom","features","dangerousTransforms","modules"],"mappings":"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"}